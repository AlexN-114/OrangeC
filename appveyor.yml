version: '6.0.43.{BUILD}'

image: Visual Studio 2017

install:
    - appveyor-retry choco install InnoSetup
    - cd \
    - 7z x projects\orangec\src\cc386.zip *
    - set PATH=c:\orangec\bin;c:\cc386\bin;%PATH%;C:\Program Files (x86)\Inno Setup 6
    - call "C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\VC\Auxiliary\Build\vcvars32.bat"
    - set PATH=C:\mingw-w64\x86_64-7.2.0-posix-seh-rt_v5-rev1\mingw64\bin;%PATH%
    - set ORIGPATH=%PATH%
    - set ORANGEC=c:\ORANGEC
    - set LADSOFT_DEV=c:\cc386

branches:
   only:
     - master

configuration:
     - MINGW64
     - MS
     - MS WITH LSCRTL
     - MS VIA ASSEMBLY
     - MS WITH DEBUG
     - CLANG
     - MSIL COMPILER

for:
-
      matrix:
            only:
                - configuration: MS
      environment:
          BUILD_PROFILE: MS
      deploy:
          release: Orange C-v$(appveyor_build_version)
          description: 'Current Release'
          provider: GitHub
          auth_token:
              secure: gOXANm+uz1YSqzv6tHI8/UAlAbA/ofp6o1NNxA+dsVX/jnTZioWTVD3f8Q8S6Un7
          artifact: /.*
          draft: false
          prerelease: false
          on:
              branch: master
              APPVEYOR_REPO_TAG: true
-
      matrix:
            only:
                - configuration: MINGW64
      environment:
          BUILD_PROFILE: MINGW64
-
      matrix:
            only:
                - configuration: CLANG
      environment:
          BUILD_PROFILE: CLANG
-
      matrix:
            only:
                - configuration: MSIL COMPILER
      environment:
          BUILD_PROFILE: OCCIL
-
      matrix:
            only:
                - configuration: MS VIA ASSEMBLY
      environment:
          BUILD_PROFILE: MS
          VIAASSEMBLY: YES
-
      matrix:
            only:
                - configuration: MS WITH LSCRTL
      environment:
          BUILD_PROFILE: MS
          LSCRTL: YES
-
      matrix:
            only:
                - configuration: MS WITH DEBUG
      environment:
          BUILD_PROFILE: MS
          WITHDEBUG: YES


skip_commits:
  files:
    - '**/*.txt'
    - '**/*.doc'
    - '**/*.md'
    - '**/*.html'
    - '*.yml'
 
build_script:
# the appveyor virtual machine reported two processors, so, lets try running parallel compile!
        - ps: |
              echo $env:PATH
              cd ..\..
              move projects\orangec .
              mkdir \orangec\temp
              cd orangec\src
              copy omake.exe \orangec\temp
              c:\orangec\appveyorversion.bat
              if ($env:BUILD_PROFILE -eq "OCCIL")
              {
                  # alternate build with OCCIL
                  c:\orangec\temp\omake /DCOMPILER=CLANG fullbuild -j:4
                  if ($LastExitCode -ne 0)
                  {
                      throw "error"
                  }
                  c:\orangec\bin\occ /V
                  copy omake\omake.exe \orangec\temp
                  c:\orangec\temp\omake /DCOMPILER=OCC clean -j:4
                  c:\orangec\temp\omake /DNOMAKEDIR /DCOMPILER=OCC /DVIAASSEMBLY=$env:VIAASEMBLY /DLSCRTL=$env:LSCRTL /DWITHDEBUG=$env:WITHDEBUG fullbuild -j:4
                  if ($LastExitCode -ne 0)
                  {
                      throw "error"
                  }
                  path=$env:ORIGPATH
                  cd ..\tests
                  omake -B /Coccil /DCOMPILER=OCC
                  if ($LastExitCode -ne 0)
                  {
                      throw "error"
                  }
              }
              else
              {
                  # Primary build for Orange C
                  c:\orangec\temp\omake /DCOMPILER=$env:BUILD_PROFILE /DORANGEC_ONLY=YES fullbuild -j:4
                  if ($LastExitCode -ne 0)
                  {
                      throw "error"
                  }
                  c:\orangec\bin\occ /V
                  copy omake\omake.exe \orangec\temp
                  c:\orangec\temp\omake /DCOMPILER=OCC clean -j:4
                  c:\orangec\temp\omake /DNOMAKEDIR /DCOMPILER=OCC /DORANGEC_ONLY=YES /DVIAASSEMBLY=$env:VIAASEMBLY /DLSCRTL=$env:LSCRTL /DWITHDEBUG=$env:WITHDEBUG fullbuild -j:4
                  if ($LastExitCode -ne 0)
                  {
                      throw "error"
                  }
                  c:\orangec\bin\occ /V
                  copy omake\omake.exe \orangec\temp
                  c:\orangec\temp\omake /DCOMPILER=OCC clean -j:4
                  c:\orangec\temp\omake /DNOMAKEDIR /DCOMPILER=OCC /DORANGEC_ONLY=YES /DVIAASSEMBLY=$env:VIAASEMBLY /DLSCRTL=$env:LSCRTL /DWITHDEBUG=$env:WITHDEBUG fullbuild -j:4
                  if ($LastExitCode -ne 0)
                  {
                      throw "error"
                  }
                  c:\orangec\bin\occ /V
                  copy omake\omake.exe \orangec\temp
                  c:\orangec\temp\omake /DCOMPILER=OCC clean -j:4
                  # in this last one we add in OCCIL so it will be in the install packages...
                  c:\orangec\temp\omake /DNOMAKEDIR /DCOMPILER=OCC /DVIAASSEMBLY=$env:VIAASEMBLY /DLSCRTL=$env:LSCRTL /DWITHDEBUG=$env:WITHDEBUG /DWITHMSDOS fullbuild -j:4
                  if ($LastExitCode -ne 0)
                  {
                      throw "error"
                  }
                  path=$env:ORIGPATH
                  cd ..\tests
                  omake -B /DCOMPILER=OCC
                  if ($LastExitCode -ne 0)
                  {
                      throw "error"
                  }
              }
              cd ..\.. 
              move orangec projects

artifacts:
  - path: "dist\\*.*"
    name: releasefiles

