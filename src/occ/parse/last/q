File expr.c
                    offset2 = baseClassOffset(sp2->parentClass, basetype(typ2)->sp, vv);
                        p->exp = baseClassOffset(base, derived, p->exp);
                        p->exp = baseClassOffset(base, derived, p->exp);
                        *exp = baseClassOffset(tp1->sp, (*tp)->sp, *exp);
                                        v = baseClassOffset(tpo->sp, tpn->sp, v);
                                        v = baseClassOffset(tpn->sp, tpo->sp, v);
File exprcpp.c
static EXPRESSION *baseClassOffsetInternal(SYMBOL *base, SYMBOL *derived, EXPRESSION *en, int clsOffset, BOOL *set, BOOL top)
            if (lst->cls == base || (rv = baseClassOffsetInternal(base, lst->cls, en, lst->offset, set, FALSE)))
EXPRESSION *baseClassOffset(SYMBOL *base, SYMBOL *derived, EXPRESSION *en)
    return baseClassOffsetInternal(base, derived, en, 0, &set, TRUE);
            en = baseClassOffset(memberSym->parentClass, enclosing, en);
                v = baseClassOffset(tpn->sp, tpo->sp, v);
                v = baseClassOffset(tpo->sp, tpn->sp, v);
                v = baseClassOffset(tpn->sp, tpo->sp, v);
                v = baseClassOffset(tpo->sp, tpn->sp, v);
File init.c
        exp = baseClassOffset(sp->parentClass, membertp->sp, &exp);
