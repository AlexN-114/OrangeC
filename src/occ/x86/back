File peep.c
    if (ip->fwd->opcode != op_adc)
    if (ip->fwd->opcode != op_sbb)
									if (ip2->fwd->oper1 && ip2->fwd->oper1->mode == am_dreg &&
										ip2->fwd->oper1->preg == ip2->oper1->preg)
										switch(ip2->fwd->opcode)
												ip2->fwd->opcode = op_setb;
												ip2->fwd->opcode = op_setbe;
												ip2->fwd->opcode = op_seta;
												ip2->fwd->opcode = op_setae;
								if (ip2->fwd->oper1 && ip2->fwd->oper1->mode == am_dreg &&
									ip2->fwd->oper1->preg == ip2->oper1->preg)
									switch(ip2->fwd->opcode)
											ip2->fwd->opcode = op_setb;
											ip2->fwd->opcode = op_setbe;
											ip2->fwd->opcode = op_seta;
											ip2->fwd->opcode = op_setae;
					ip->fwd->back = c1;
	if (ip->oper1 && ip->oper2 && ip->oper1->mode == am_dreg && ip->fwd->opcode == op_mov)
		if (!live(ip->fwd->oper1->liveRegs, ip->oper1->preg))
			if (equal_address(ip->fwd->oper1, ip->oper2))
				if (equal_address(ip->oper1, ip->fwd->oper2))
					ip->fwd->opcode = ip->opcode;
    if (ip->fwd->opcode == op_bts && equal_address(ip->oper1, ip->fwd->oper1)
        && equal_address(ip->oper2, ip->fwd->oper2))
							if (ip->fwd->opcode == op_div || ip->fwd->opcode == op_idiv)
	if (ip->fwd->opcode == op_fld)
		if (equal_address(ip->fwd->oper1, ip->oper1))
    return ip->fwd->opcode == op_void;
        	ip->fwd->back = ip->back;
						while (ip->fwd && ip->fwd->opcode == op_mov && 
							   equal_address(ip->oper1, ip->fwd->oper1) &&
							   equal_address(ip->oper2, ip->fwd->oper2))
