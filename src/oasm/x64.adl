<ADL>
	<Processor Name="x64">
	</Processor>
  <Coding>
    <Param Name="CaseSensitive" Value="false"/>
    <Param Name="Endian" Value="little"/>
    <Param Name="BitsPerMAU" Value="8"/>
    <Number Name="signed8offset">
      <Instance Value="-#:8"/>
    </Number>
    <Number Name="signed8">
      <Instance Value="-#:8"/>
    </Number>
    <Number Name="mem6">
      <Instance Value="#:6"/>
    </Number>
    <Number Name="mem8">
      <Instance Value="#:8"/>
    </Number>
    <Number Name="mem16">
      <Instance Value="$#:16"/>
    </Number>
    <Number Name="mem32">
      <Instance Value="$#:32"/>
    </Number>
    <Number Name="mem64">
      <Instance Value="$#:64"/>
    </Number>
    <Number Name="address16">
      <Instance Value="$#:16" Cond="'processorbits'==16"/>
    </Number>
    <Number Name="address32">
      <Instance Value="$#:32" Cond="'processorbits'==32"/>
    </Number>
    <Number Name="address64">
      <Instance Value="$#:64" Cond="'processorbits'==32"/>
    </Number>
    <Number Name="rel8" relOfs="1">
      <Instance Value="-$#:8"/>
    </Number>
    <Number Name="rel8n" relOfs="-1">
      <Instance Value="-$#:8"/>
    </Number>
    <Number Name="rel16" relOfs="2">
      <Instance Value="-$#:16" Cond="'processorbits'==16"/>
    </Number>
    <Number Name="rel16n" relOfs="-2">
      <Instance Value="-$#:16" Cond="'processorbits'==16"/>
    </Number>
    <Number Name="rel16j" relOfs="2">
      <Instance Value="-$#:16" Cond="'processorbits'==16"/>
    </Number>
    <Number Name="rel16jn" relOfs="-2">
      <Instance Value="-$#:16" Cond="'processorbits'==16"/>
    </Number>
    <Number Name="rel32" relOfs="4">
      <Instance Value="-$#:32" Cond="'processorbits'!=16"/>
    </Number>
    <Number Name="scale">
      <Instance Value="1;0"/>
      <Instance Value="2;1"/>
      <Instance Value="4;2"/>
      <Instance Value="8;3"/>
    </Number>
    <Number Name="zero">
      <Instance Value="0;0"/>
    </Number>
    <Number Name="one">
      <Instance Value="1;1"/>
    </Number>
    <StateVars>
      <Instance  Name="processorbits" Init="16"/>
    </StateVars>
    <State Name="addr16">
      <When Cond="'processorbits'==16" Value=""/>
      <When Cond="'processorbits'==32" Value="0x67:8"/>
    </State>
    <State Name="addr32">
      <When Cond="'processorbits'==32" Value=""/>
      <When Cond="'processorbits'==16" Value="0x67:8"/>
      <When Cond="'processorbits'==64" Value="0x67:8"/>
    </State>
    <State Name="addr64">
      <When Cond="true" Value=""/>
    </State>
    <State Name="data16">
      <When Cond="'processorbits'==16" Value=""/>
      <When Cond="'processorbits'==32" Value="0x66:8"/>
    </State>
    <State Name="data32">
      <When Cond="'processorbits'==32" Value=""/>
      <When Cond="'processorbits'==16" Value="0x66:8"/>
    </State>
    <State Name="rex">
      <When Cond="true" Value="0x4:4"/>
    </State>
    <Register Class="general">
      <Instance Name="al" Ord="0" R="0" W="0" Class="reg8,reg8b,low"/>
      <Instance Name="ah" Ord="4" R="0" W="0" Class="reg8,high"/>
      <Instance Name="ax" Ord="0" R="0" W="0" Class="reg16"/>
      <Instance Name="eax" Ord="0" R="0" W="0" Class="base32, index32, reg32,base32b, index32b, reg32b"/>
      <Instance Name="rax" Ord="0" R="0" W="8" Class="base64, index64, reg64,base64b, index64b, reg64b, reg64d"/>
      <Instance Name="r8b" Ord="0" R="4" W="0" Class="reg8b,reg8b,low"/>
      <Instance Name="r8w" Ord="0" R="4" W="0" Class="reg16b"/>
      <Instance Name="r8d" Ord="0" R="4" W="0" Class="base32b, index32b, reg32b"/>
      <Instance Name="r8" Ord="0" R="4" W="8" Class="base64b, index64b, reg64b, reg64d"/>
    </Register>
    <Register Class="general">
      <Instance Name="cl" Ord="1" R="0" W="0" Class="reg8,reg8b,low"/>
      <Instance Name="ch" Ord="5" R="0" W="0" Class="reg8,high"/>
      <Instance Name="cx" Ord="1" R="0" W="0" Class="reg16"/>
      <Instance Name="ecx" Ord="1" R="0" W="0" Class="base32, index32, reg32,base32b, index32b, reg32b"/>
      <Instance Name="rcx" Ord="1" R="0" W="8" Class="base64, index64, reg64,base64b, index64b, reg64b, reg64d"/>
      <Instance Name="r9b" Ord="1" R="4" W="0" Class="reg8b,reg8b,low"/>
      <Instance Name="r9w" Ord="1" R="4" W="0" Class="reg16b"/>
      <Instance Name="r9d" Ord="1" R="4" W="0" Class="base32b, index32b, reg32b"/>
      <Instance Name="r9" Ord="1" R="4" W="8" Class="base64b, index64b, reg64b, reg64d"/>
    </Register>
    <Register Class="general">
      <Instance Name="dl" Ord="2" R="0" W="0" Class="reg8,reg8b,low"/>
      <Instance Name="dh" Ord="6" R="0" W="0" Class="reg8,high"/>
      <Instance Name="dx" Ord="2" R="0" W="0" Class="reg16"/>
      <Instance Name="edx" Ord="2" R="0" W="0" Class="base32, index32, reg32,base32b, index32b, reg32b"/>
      <Instance Name="rdx" Ord="2" R="0" W="8" Class="base64, index64, reg64,base64b, index64b, reg64b, reg64d"/>
      <Instance Name="r10b" Ord="2" R="4" W="0" Class="reg8b,reg8b,low"/>
      <Instance Name="r10w" Ord="2" R="4" W="0" Class="reg16b"/>
      <Instance Name="r10d" Ord="2" R="4" W="0" Class="base32b, index32b, reg32b"/>
      <Instance Name="r10" Ord="2" R="4" W="8" Class="base64b, index64b, reg64b, reg64d"/>
    </Register>
    <Register Class="general">
      <Instance Name="bl" Ord="3" R="0" W="0" Class="reg8,reg8b,low,pushed"/>
      <Instance Name="bh" Ord="7" R="0" W="0" Class="reg8,high,pushed"/>
      <Instance Name="bx" Ord="3" base="0" R="0" W="0" Class="base16, reg16, pushed"/>
      <Instance Name="ebx" Ord="3" R="0" W="0" Class="base32, index32, reg32,base32b, index32b, reg32b,pushed"/>
      <Instance Name="rbx" Ord="3" R="0" W="8" Class="base64, index64, reg64,base64b, index64b, reg64b, reg64d"/>
      <Instance Name="r11b" Ord="3" R="4" W="0" Class="reg8b,reg8b,low"/>
      <Instance Name="r11w" Ord="3" R="4" W="0" Class="reg16b"/>
      <Instance Name="r11d" Ord="3" R="4" W="0" Class="base32b, index32b, reg32b"/>
      <Instance Name="r11" Ord="3" R="4" W="8" Class="base64b, index64b, reg64b, reg64d"/>
    </Register>
    <Register Class="stack">
      <Instance Name="spl" Ord="4" R="0" W="0" Class="reg8b,reg8b,low"/>
      <Instance Name="sp" Ord="4" R="0" W="0" Class="reg16"/>
      <Instance Name="esp" Ord="4" R="0" W="0" Class="base32, reg32, base32b, reg32b"/>
      <Instance Name="rsp" Ord="4" R="0" W="8" Class="base64, reg64, base64b, reg64b, reg64d"/>
      <Instance Name="r12b" Ord="4" R="4" W="0" Class="reg8b,reg8b,low"/>
      <Instance Name="r12w" Ord="4" R="4" W="0" Class="reg16b"/>
      <Instance Name="r12d" Ord="4" R="4" W="0" Class="base32b, reg32b"/>
      <Instance Name="r12" Ord="4" R="4" W="8" Class="base64b, reg64b, reg64d"/>
    </Register>
    <Register Class="stack">
      <Instance Name="bpl" Ord="5" R="0" W="0" Class="reg8b,reg8b,low"/>
      <Instance Name="bp" Ord="5" base="1" R="0" W="0" Class="base16, reg16"/>
      <Instance Name="ebp" Ord="5" R="0" W="0" Class="base32, index32, reg32,base32b, index32b, reg32b"/>
      <Instance Name="rbp" Ord="5" R="0" W="8" Class="base64, index64, reg64,base64b, index64b, reg64b, reg64d"/>
      <Instance Name="r13b" Ord="5" R="4" W="0" Class="reg8b,reg8b,low"/>
      <Instance Name="r13w" Ord="5" R="4" W="0" Class="reg16b"/>
      <Instance Name="r13d" Ord="5" R="4" W="0" Class="base32b, index32b, reg32b"/>
      <Instance Name="r13" Ord="5" R="4" W="8" Class="base64b, index64b, reg64b, reg64d"/>
    </Register>
    <Register Class="general">
      <Instance Name="sil" Ord="6" R="0" W="0" Class="reg8b,reg8b,low"/>
      <Instance Name="si" Ord="6" index="0" R="0" W="0" Class="reg16,index16,pushed"/>
      <Instance Name="esi" Ord="6" R="0" W="0" Class="base32, index32, reg32,base32b, index32b, reg32b,pushed"/>
      <Instance Name="rsi" Ord="6" R="0" W="8" Class="base64, index64, reg64,base64b, index64b, reg64b, reg64d"/>
      <Instance Name="r14b" Ord="6" R="4" W="0" Class="reg8b,reg8b,low"/>
      <Instance Name="r14w" Ord="6" R="4" W="0" Class="reg16b"/>
      <Instance Name="r14d" Ord="6" R="4" W="0" Class="base32b, index32b, reg32b"/>
      <Instance Name="r14" Ord="6" R="4" W="8" Class="base64b, index64b, reg64b, reg64d"/>
    </Register>
    <Register Class="general">
      <Instance Name="dil" Ord="7" R="0" W="0" Class="reg8b,reg8b,low"/>
      <Instance Name="di" Ord="7" index="1" R="0" W="0" Class="reg16,index16, pushed"/>
      <Instance Name="edi" Ord="7" R="0" W="0" Class="base32, index32, reg32,base32b, index32b, reg32b, pushed"/>
      <Instance Name="rdi" Ord="7" R="0" W="8" Class="base64, index64, reg64,base64b, index64b, reg64b, reg64d"/>
      <Instance Name="r15b" Ord="7" R="4" W="0" Class="reg8b,reg8b,low"/>
      <Instance Name="r15w" Ord="7" R="4" W="0" Class="reg16b"/>
      <Instance Name="r15d" Ord="7" R="4" W="0" Class="base32b, index32b, reg32b"/>
      <Instance Name="r15" Ord="7" R="4" W="8" Class="base64b, index64b, reg64b, reg64d"/>
    </Register>
    <Register Class="regsse">
      <Instance Name="mm0" Ord="0" R="0" W="0" Class="regmm"/>
      <Instance Name="xmm0" Ord="0" R="0" W="0" Class="regsse"/>
      <Instance Name="xmm8" Ord="0" R="4" W="0" Class="regsse"/>
    </Register>
    <Register Class="regsse">
      <Instance Name="mm1" Ord="1" R="0" W="0" Class="regmm"/>
      <Instance Name="xmm1" Ord="1" R="0" W="0" Class="regsse"/>
      <Instance Name="xmm9" Ord="1" R="4" W="0" Class="regsse"/>
    </Register>
    <Register Class="regsse">
      <Instance Name="mm2" Ord="2" R="0" W="0" Class="regmm"/>
      <Instance Name="xmm2" Ord="2" R="0" W="0" Class="regsse,regsseb"/>
      <Instance Name="xmm10" Ord="2" R="4" W="0" Class="sseb"/>
    </Register>
    <Register Class="regsse">
      <Instance Name="mm3" Ord="3" R="0" W="0" Class="regmm"/>
      <Instance Name="xmm3" Ord="3" R="0" W="0" Class="regsse,regsseb"/>
      <Instance Name="xmm11" Ord="3" R="4" W="0" Class="sseb"/>
    </Register>

    <Register Class="regsse">
      <Instance Name="mm4" Ord="4" R="0" W="0" Class="regmm"/>
      <Instance Name="xmm4" Ord="4" R="0" W="0" Class="regsse,regsseb"/>
      <Instance Name="xmm12" Ord="4" R="4" W="0" Class="sseb"/>
    </Register>
    <Register Class="regsse">
      <Instance Name="mm5" Ord="5" R="0" W="0" Class="regmm"/>
      <Instance Name="xmm5" Ord="5" R="0" W="0" Class="regsse,regsseb"/>
      <Instance Name="xmm13" Ord="5" R="4" W="0" Class="sseb"/>
    </Register>
    <Register Class="regsse">
      <Instance Name="mm6" Ord="6" R="0" W="0" Class="regmm"/>
      <Instance Name="xmm6" Ord="6" R="0" W="0" Class="regsse,regsseb"/>
      <Instance Name="xmm14" Ord="6" R="4" W="0" Class="sseb"/>
    </Register>
    <Register Class="regsse">
      <Instance Name="mm7" Ord="7" R="0" W="0" Class="regmm"/>
      <Instance Name="xmm7" Ord="7" R="0" W="0" Class="regsse,regsseb"/>
      <Instance Name="xmm15" Ord="7" R="4" W="0" Class="sseb"/>
    </Register>
    <Register Class="segment">
      <Instance Name="es" Ord="0" Prefix="0x26"/>
    </Register>
    <Register Class="segment">
      <Instance Name="cs" Ord="1" Prefix="0x2e"/>
    </Register>
    <Register Class="segment">
      <Instance Name="ss" Ord="2" Prefix="0x36"/>
    </Register>
    <Register Class="segment">
      <Instance Name="ds" Ord="3" Prefix="0x3e"/>
    </Register>
    <Register Class="segment">
      <Instance Name="fs" Ord="4" Prefix="0x64"/>
    </Register>
    <Register Class="segment">
      <Instance Name="gs" Ord="5" Prefix="0x65"/>
    </Register>
    <Register Class="floatreg">
      <Instance Name="st0" Ord="0" />
    </Register>
    <Register Class="floatreg">
      <Instance Name="st1" Ord="1" />
    </Register>
    <Register Class="floatreg">
      <Instance Name="st2" Ord="2" />
    </Register>
    <Register Class="floatreg">
      <Instance Name="st3" Ord="3" />
    </Register>
    <Register Class="floatreg">
      <Instance Name="st4" Ord="4" />
    </Register>
    <Register Class="floatreg">
      <Instance Name="st5" Ord="5" />
    </Register>
    <Register Class="floatreg">
      <Instance Name="st6" Ord="6" />
    </Register>
    <Register Class="floatreg">
      <Instance Name="st7" Ord="7" />
    </Register>
    <Register Class="controlreg">
      <Instance Name="cr0" Ord="0" />
    </Register>
    <Register Class="controlreg">
      <Instance Name="cr1" Ord="1" />
    </Register>
    <Register Class="controlreg">
      <Instance Name="cr2" Ord="2" />
    </Register>
    <Register Class="controlreg">
      <Instance Name="cr3" Ord="3" />
    </Register>
    <Register Class="controlreg">
      <Instance Name="cr4" Ord="4" />
    </Register>
    <Register Class="controlreg">
      <Instance Name="cr5" Ord="5" />
    </Register>
    <Register Class="controlreg">
      <Instance Name="cr6" Ord="6" />
    </Register>
    <Register Class="controlreg">
      <Instance Name="cr7" Ord="7" />
    </Register>
    <Register Class="debugreg">
      <Instance Name="dr0" Ord="0" />
    </Register>
    <Register Class="debugreg">
      <Instance Name="dr1" Ord="1" />
    </Register>
    <Register Class="debugreg">
      <Instance Name="dr2" Ord="2" />
    </Register>
    <Register Class="debugreg">
      <Instance Name="dr3" Ord="3" />
    </Register>
    <Register Class="debugreg">
      <Instance Name="dr4" Ord="4" />
    </Register>
    <Register Class="debugreg">
      <Instance Name="dr5" Ord="5" />
    </Register>
    <Register Class="debugreg">
      <Instance Name="dr6" Ord="6" />
    </Register>
    <Register Class="debugreg">
      <Instance Name="dr7" Ord="7" />
    </Register>
    <Register Class="tracereg">
      <Instance Name="tr0" Ord="0" />
    </Register>
    <Register Class="tracereg">
      <Instance Name="tr1" Ord="1" />
    </Register>
    <Register Class="tracereg">
      <Instance Name="tr2" Ord="2" />
    </Register>
    <Register Class="tracereg">
      <Instance Name="tr3" Ord="3" />
    </Register>
    <Register Class="tracereg">
      <Instance Name="tr4" Ord="4" />
    </Register>
    <Register Class="tracereg">
      <Instance Name="tr5" Ord="5" />
    </Register>
    <Register Class="tracereg">
      <Instance Name="tr6" Ord="6" />
    </Register>
    <Register Class="tracereg">
      <Instance Name="tr7" Ord="7" />
    </Register>
    <DoubleReg Name="edx:eax"/>
    <DoubleReg Name="ecx:eax"/>
    <DoubleReg Name="edx:ecx"/>
    <DoubleReg Name="ebx:esi" Class="pushed"/>
    <DoubleReg Name="ebx:edi" Class="pushed"/>
    <DoubleReg Name="edi:esi" Class="pushed"/>

    <Address Name="['mem:address16']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,rm16bit" Coding="'addr16' 'mand' 'op' 0:2 'mod':3 6:3 'mem':16"/>
    <Address Name="[ds:'mem:address16']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,rm16bit" Coding="'mand' 0x3e:8 'addr16' 'mand' 'op' 0:2 'mod':3 6:3 'mem':16"/>
    <Address Name="[ss:'mem:address16']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,rm16bit" Coding="'mand' 0x36:8 'addr16' 'mand' 'op' 0:2 'mod':3 6:3 'mem':16"/>
    <Address Name="['seg:segment':'mem:address16']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,rm16bit" Coding="'mand' 'seg.Prefix':8 'addr16' 'mand' 'op' 0:2 'mod':3 6:3 'mem':16"/>
    <Address Name="[bx+'index:index16']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,rm16bit" Coding = "'addr16' 'mand' 'op' 0:2 'mod':3 0:2 'index.index':1"/>
    <Address Name="[bp+'index:index16']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,rm16bit" Coding = "'addr16' 'mand' 'op' 0:2 'mod':3 1:2 'index.index':1"/>
    <Address Name="[ds:bx+'index:index16']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,rm16bit" Coding = "'addr16' 'mand' 'op' 0:2 'mod':3 0:2 'index.index':1"/>
    <Address Name="[ss:bx+'index:index16']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,rm16bit" Coding = "'addr16' 0x36:8 'mand' 'op' 0:2 'mod':3 0:2 'index.index':1"/>
    <Address Name="[ss:bp+'index:index16']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,rm16bit" Coding = "'addr16' 'mand' 'op' 0:2 'mod':3 1:2 'index.index':1"/>
    <Address Name="[ds:bp+'index:index16']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,rm16bit" Coding = "'addr16' 0x3e:8 'mand' 'op' 0:2 'mod':3 1:2 'index.index':1"/>
    <Address Name="['seg:segment':bx+'index:index16']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,rm16bit" Coding = "'seg.Prefix':8 'addr16' 'mand' 'op' 0:2 'mod':3 0:2 'index.index':1"/>
    <Address Name="['seg:segment':bp+'index:index16']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,rm16bit" Coding = "'seg.Prefix':8 'addr16' 'mand' 'op' 0:2 'mod':3 1:2 'index.index':1"/>
    <Address Name="['index:index16']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,rm16bit" Coding = "'addr16' 'mand' 'op' 0:2 'mod':3 'index.index'+4:3"/>
    <Address Name="[ds:'index:index16']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,rm16bit" Coding = "'addr16' 'mand' 'op' 0:2 'mod':3 'index.index'+4:3"/>
    <Address Name="[ss:'index:index16']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,rm16bit" Coding = "'addr16' 0x36:8 'mand' 'op' 0:2 'mod':3 'index.index'+4:3"/>
    <Address Name="['seg:segment':'index:index16']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,rm16bit"  Coding = "'seg.Prefix':8 'addr16' 'mand' 'op' 0:2 'mod':3 'index.index'+4:3"/>
    <Address Name="[bx]" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,rm16bit" Coding = "'addr16' 'mand' 'op' 0:2 'mod':3 7:3"/>
    <Address Name="[ds:bx]" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,rm16bit" Coding = "'addr16' 'mand' 'op' 0:2 'mod':3 7:3"/>
    <Address Name="[ss:bx]" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,rm16bit" Coding = "'addr16' 0x36:8 'mand' 'op' 0:2 'mod':3 7:3"/>
    <Address Name="['seg:segment':bx]" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,rm16bit"  Coding = "'seg.Prefix':8 'addr16' 'mand' 'op' 0:2 'mod':3 7:3"/>
    <Address Name="[bp]" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,rm16bit" Coding = "'addr16' 'mand' 'op' 1:2 'mod':3 6:3 0:8"/>
    <Address Name="[ss:bp]" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,rm16bit" Coding = "'addr16' 'mand' 'op' 1:2 'mod':3 6:3 0:8"/>
    <Address Name="[ds:bp]" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,rm16bit" Coding = "'addr16' 0x3e:8 'mand' 'op' 1:2 'mod':3 6:3 0:8"/>
    <Address Name="['seg:segment':bp]" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,rm16bit"  Coding = "'seg.Prefix':8 'addr16' 'mand' 'op' 1:2 'mod':3 6:3 0:8"/>
    <Address Name="[bx+'z:zero']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,rm16bit" Coding = "'addr16' 'mand' 'op' 0:2 'mod':3 7:3"/>
    <Address Name="[ds:bx+'z:zero']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,rm16bit" Coding = "'addr16' 'mand' 'op' 0:2 'mod':3 7:3"/>
    <Address Name="[ss:bx+'z:zero']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,rm16bit" Coding = "'addr16' 0x36:8 'mand' 'op' 0:2 'mod':3 7:3"/>
    <Address Name="['seg:segment':bx+'z:zero']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,rm16bit"  Coding = "'seg.Prefix':8 'addr16' 'mand' 'op' 0:2 'mod':3 7:3"/>
    <Address Name="[bp+'z:zero']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,rm16bit" Coding = "'addr16' 'mand' 'op' 1:2 'mod':3 6:3 0:8"/>
    <Address Name="[ss:bp+'z:zero']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,rm16bit" Coding = "'addr16' 'mand' 'op' 1:2 'mod':3 6:3 0:8"/>
    <Address Name="[ds:bp+'z:zero']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,rm16bit" Coding = "'addr16' 0x3e:8 'mand' 'op' 1:2 'mod':3 6:3 0:8"/>
    <Address Name="['seg:segment':bp+'z:zero']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,rm16bit"  Coding = "'seg.Prefix':8 'addr16' 'mand' 'op' 1:2 'mod':3 6:3 0:8"/>

    <Address Name="[bx+'index:index16' + 'signed:signed8offset']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,rm16bit" Coding = "'addr16' 'mand' 'op' 1:2 'mod':3 0:2 'index.index':1 'signed':8"/>
    <Address Name="[bp+'index:index16' + 'signed:signed8offset']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,rm16bit" Coding = "'addr16' 'mand' 'op' 1:2 'mod':3 1:2 'index.index':1 'signed':8"/>
    <Address Name="[ds:bx+'index:index16' + 'signed:signed8offset']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,rm16bit" Coding = "'addr16' 'mand' 'op' 1:2 'mod':3 0:2 'index.index':1 'signed':8"/>
    <Address Name="[ss:bx+'index:index16' + 'signed:signed8offset']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,rm16bit" Coding = "'addr16' 0x36:8 'mand' 'op' 1:2 'mod':3 0:2 'index.index':1 'signed':8"/>
    <Address Name="[ss:bp+'index:index16' + 'signed:signed8offset']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,rm16bit" Coding = "'addr16' 'mand' 'op' 1:2 'mod':3 1:2 'index.index':1 'signed':8"/>
    <Address Name="[ds:bp+'index:index16' + 'signed:signed8offset']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,rm16bit" Coding = "'addr16' 0x3e:8 'mand' 'op' 1:2 'mod':3 1:2 'index.index':1 'signed':8"/>
    <Address Name="['seg:segment':bx+'index:index16' + 'signed:signed8offset']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,rm16bit" Coding = "'seg.Prefix':8 'addr16' 'mand' 'op' 1:2 'mod':3 11:2 'index.index':1 'signed':8"/>
    <Address Name="['seg:segment':bp+'index:index16' + 'signed:signed8offset']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,rm16bit" Coding = "'seg.Prefix':8 'addr16' 'mand' 'op' 1:2 'mod':3 01:2 'index.index':1 'signed':8"/>
    <Address Name="['index:index16' + 'signed:signed8offset']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,rm16bit" Coding = "'addr16' 'mand' 'op' 1:2 'mod':3 'index.index'+4:3 'signed':8"/>
    <Address Name="[ds:'index:index16' + 'signed:signed8offset']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,rm16bit" Coding = "'addr16' 'mand' 'op' 1:2 'mod':3 'index.index'+4:3 'signed':8"/>
    <Address Name="[ss:'index:index16' + 'signed:signed8offset']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,rm16bit" Coding = "'addr16' 0x36:8 'mand' 'op' 1:2 'mod':3 'index.index'+4:3 'signed':8"/>
    <Address Name="['seg:segment':'index:index16' + 'signed:signed8offset']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,rm16bit"  Coding = "'seg.Prefix':8 'addr16' 'mand' 'op' 1:2 'mod':3 'index.index'+4:3 'signed':8"/>
    <Address Name="[bx + 'signed:signed8offset']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,rm16bit" Coding = "'addr16' 'mand' 'op' 1:2 'mod':3 7:3 'signed':8"/>
    <Address Name="[ds:bx + 'signed:signed8offset']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,rm16bit" Coding = "'addr16' 'mand' 'op' 1:2 'mod':3 7:3 'signed':8"/>
    <Address Name="[ss:bx + 'signed:signed8offset']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,rm16bit" Coding = "'addr16' 0x36 'op' 1:2 'mod':3 7:3 'signed':8"/>
    <Address Name="['seg:segment':bx + 'signed:signed8offset']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,rm16bit"  Coding = "'seg.Prefix':8 'addr16' 'mand' 'op' 1:2 'mod':3 7:3 'signed':8"/>
    <Address Name="[bp + 'signed:signed8offset']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,rm16bit" Coding = "'addr16' 'mand' 'op' 1:2 'mod':3 6:3 'signed':8"/>
    <Address Name="[ss:bp + 'signed:signed8offset']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,rm16bit" Coding = "'addr16' 'mand' 'op' 1:2 'mod':3 6:3 'signed':8"/>
    <Address Name="[ds:bp + 'signed:signed8offset']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,rm16bit" Coding = "'addr16' 0x3e:8 'mand' 'op' 1:2 'mod':3 6:3 'signed':8"/>
    <Address Name="['seg:segment':bp + 'signed:signed8offset']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,rm16bit"  Coding = "'seg.Prefix':8 'addr16' 'mand' 'op' 1:2 'mod':3 6:3 'signed':8"/>


    <Address Name="[bx+'index:index16' + 'mem:mem16']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,rm16bit" Coding = "'addr16' 'mand' 'op' 2:2 'mod':3 0:2 'index.index':1 'mem':16"/>
    <Address Name="[bp+'index:index16' + 'mem:mem16']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,rm16bit" Coding = "'addr16' 'mand' 'op' 2:2 'mod':3 1:2 'index.index':1 'mem':16"/>
    <Address Name="[ds:bx+'index:index16' + 'mem:mem16']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,rm16bit" Coding = "'addr16' 'mand' 'op' 2:2 'mod':3 0:2 'index.index':1 'mem':16"/>
    <Address Name="[ss:bx+'index:index16' + 'mem:mem16']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,rm16bit" Coding = "'addr16' 0x36:8 'mand' 'op' 2:2 'mod':3 0:2 'index.index':1 'mem':16"/>
    <Address Name="[ss:bp+'index:index16' + 'mem:mem16']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,rm16bit" Coding = "'addr16' 'mand' 'op' 2:2 'mod':3 1:2 'index.index':1 'mem':16"/>
    <Address Name="[ds:bp+'index:index16' + 'mem:mem16']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,rm16bit" Coding = "'addr16' 0x3e:8 'mand' 'op' 2:2 'mod':3 1:2 'index.index':1 'mem':16"/>
    <Address Name="['seg:segment':bx+'index:index16' + 'mem:mem16']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,rm16bit" Coding = "'seg.Prefix':8 'addr16' 'mand' 'op' 2:2 'mod':3 0:2 'index.index':1 'mem':16"/>
    <Address Name="['seg:segment':bp+'index:index16' + 'mem:mem16']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,rm16bit" Coding = "'seg.Prefix':8 'addr16' 'mand' 'op' 2:2 'mod':3 1:2 'index.index':1 'mem':16"/>
    <Address Name="['index:index16' + 'mem:mem16']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,rm16bit" Coding = "'addr16' 'mand' 'op' 2:2 'mod':3 'index.index'+4:3 'mem':16"/>
    <Address Name="[ds:'index:index16' + 'mem:mem16']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,rm16bit" Coding = "'addr16' 'mand' 'op' 2:2 'mod':3 'index.index'+4:3 'mem':16"/>
    <Address Name="[ss:'index:index16' + 'mem:mem16']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,rm16bit" Coding = "'addr16' 0x36:8 'mand' 'op' 2:2 'mod':3 'index.index'+4:3 'mem':16"/>
    <Address Name="['seg:segment':'index:index16' + 'mem:mem16']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,rm16bit"  Coding = "'seg.Prefix':8 'addr16' 'mand' 'op' 2:2 'mod':3 'index.index'+4:3 'mem':16"/>
    <Address Name="[bx + 'mem:mem16']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,rm16bit" Coding = "'addr16' 'mand' 'op' 2:2 'mod':3 7:3 'mem':16"/>
    <Address Name="[ds:bx + 'mem:mem16']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,rm16bit" Coding = "'addr16' 'mand' 'op' 2:2 'mod':3 7:3 'mem':16"/>
    <Address Name="[ss:bx + 'mem:mem16']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,rm16bit" Coding = "'addr16' 0x36:8 'mand' 'op' 2:2 'mod':3 7:3 'mem':16"/>
    <Address Name="['seg:segment':bx + 'mem:mem16']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,rm16bit"  Coding = "'seg.Prefix':8 'addr16' 'mand' 'op' 2:2 'mod':3 7:3 'mem':16"/>
    <Address Name="[bp + 'mem:mem16']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,rm16bit" Coding = "'addr16' 'mand' 'op' 2:2 'mod':3 6:3 'mem':16"/>
    <Address Name="[ss:bp + 'mem:mem16']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,rm16bit" Coding = "'addr16' 'mand' 'op' 2:2 'mod':3 6:3 'mem':16"/>
    <Address Name="[ds:bp + 'mem:mem16']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,rm16bit" Coding = "'addr16' 0x3e:8 'mand' 'op' 2:2 'mod':3 6:3 'mem':16"/>
    <Address Name="['seg:segment':bp + 'mem:mem16']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,rm16bit"  Coding = "'seg.Prefix':8 'addr16' 'mand' 'op' 2:2 'mod':3 6:3 'mem':16"/>

    <Address Name="[esp]" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,mmrm,sserm,rm32bit" Coding="'addr32' 'mand' 'op' 0:2 'mod':3 0x4:3 0:2 0x4:3 0x4:3"/>
    <Address Name="[ebp]" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,mmrm,sserm,rm32bit" Coding="'addr32' 'mand' 'op' 1:2 'mod':3 0x5:3 0x0:8"/>
    <Address Name="['base:base32']"	Class="rmx,rm,frm,rm8,rm16,rm32,rm64,mmrm,sserm,rm32bit" Coding="'addr32' 'mand' 'op' 0:2 'mod':3 'base.Ord':3"/>
    <Address Name="[ss:esp]" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,mmrm,sserm,rm32bit" Coding="'addr32' 'mand' 'op' 0:2 'mod':3 0x4:3 0:2 0x4:3 0x4:3"/>
    <Address Name="[ss:ebp]" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,mmrm,sserm,rm32bit" Coding="'addr32' 'mand' 'op' 1:2 'mod':3 0x5:3 0x0:8"/>
    <Address Name="[ss:'base:base32']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,mmrm,sserm,rm32bit" Coding="'addr32' 0x36:8 'mand' 'op' 1:2 'mod':3 0x5:3 0x0:8"/>
    <Address Name="[ds:esp]" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,mmrm,sserm,rm32bit" Coding="'addr32' 0x3e:8 'mand' 'op' 0:2 'mod':3 0x4:3 0:2 0x4:3 0x4:3"/>
    <Address Name="[ds:ebp]" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,mmrm,sserm,rm32bit" Coding="'addr32' 0x3e:8 'mand' 'op' 1:2 'mod':3 0x5:3 0x0:8"/>
    <Address Name="[ds:'base:base32']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,mmrm,sserm,rm32bit" Coding="'addr32' 'mand' 'op' 0:2 'mod':3 'base.Ord':3"/>
    <Address Name="['seg:segment':esp]" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,mmrm,sserm,rm32bit" Coding="'seg.Prefix':8 'addr32' 'mand' 'op' 0:2 'mod':3 0x4:3 0:2 0x4:3 0x4:3"/>
    <Address Name="['seg:segment':ebp]" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,mmrm,sserm,rm32bit" Coding="'seg.Prefix':8 'addr32' 'mand' 'op' 1:2 'mod':3 0x5:3 0x0:8"/>
    <Address Name="['seg:segment':'base:base32']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,mmrm,sserm,rm32bit" Coding="'seg.Prefix':8 'addr32' 'mand' 'op' 0:2 'mod':3 'base.Ord':3"/>
    <Address Name="['mem:address32']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,mmrm,sserm,rm32bit" Coding="'addr32' 'mand' 'op' 0:2 'mod':3 0x04:3 0x25 'mem':32"/>
    <Address Name="[ds:'mem:address32']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,mmrm,sserm,rm32bit" Coding="0x3e:8 'addr32' 'mand' 'op' 0:2 'mod':3 0x00x5:3 'mem':32"/>
    <Address Name="[ss:'mem:address32']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,mmrm,sserm,rm32bit" Coding="0x36:8 'addr32' 'mand' 'op' 0:2 'mod':3 0x00x5:3 'mem':32"/>
    <Address Name="['seg:segment':'mem:address32']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,mmrm,sserm,rm32bit" Coding="'seg.Prefix':8 'addr32' 'mand' 'op' 0:2 'mod':3 0x00x5:3 'mem':32"/>

    <Address Name="[esp+'z:zero']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,mmrm,sserm,rm32bit" Coding="'addr32' 'mand' 'op' 0:2 'mod':3 0x4:3 0:2 0x4:3 0x4:3"/>
    <Address Name="[ebp+'z:zero']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,mmrm,sserm,rm32bit" Coding="'addr32' 'mand' 'op' 1:2 'mod':3 0x5:3 0x0:8"/>
    <Address Name="['base:base32'+'z:zero']"	Class="rmx,rm,frm,rm8,rm16,rm32,rm64,mmrm,sserm,rm32bit" Coding="'addr32' 'mand' 'op' 0:2 'mod':3 'base.Ord':3"/>
    <Address Name="[ss:esp+'z:zero']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,mmrm,sserm,rm32bit" Coding="'addr32' 'mand' 'op' 0:2 'mod':3 0x4:3 0:2 0x4:3 0x4:3"/>
    <Address Name="[ss:ebp+'z:zero']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,mmrm,sserm,rm32bit" Coding="'addr32' 'mand' 'op' 1:2 'mod':3 0x5:3 0x0:8"/>
    <Address Name="[ss:'base:base32'+'z:zero']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,mmrm,sserm,rm32bit" Coding="'addr32' 0x36:8 'mand' 'op' 1:2 'mod':3 0x5:3 0x0:8"/>
    <Address Name="[ds:esp+'z:zero']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,mmrm,sserm,rm32bit" Coding="'addr32' 0x3e:8 'mand' 'op' 0:2 'mod':3 0x4:3 0:2 0x4:3 0x4:3"/>
    <Address Name="[ds:ebp+'z:zero']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,mmrm,sserm,rm32bit" Coding="'addr32' 0x3e:8 'mand' 'op' 1:2 'mod':3 0x5:3 0x0:8"/>
    <Address Name="[ds:'base:base32'+'z:zero']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,mmrm,sserm,rm32bit" Coding="'addr32' 'mand' 'op' 0:2 'mod':3 'base.Ord':3"/>
    <Address Name="['seg:segment':esp+'z:zero']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,mmrm,sserm,rm32bit" Coding="'seg.Prefix':8 'addr32' 'mand' 'op' 0:2 'mod':3 0x4:3 0:2 0x4:3 0x4:3"/>
    <Address Name="['seg:segment':ebp+'z:zero']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,mmrm,sserm,rm32bit" Coding="'seg.Prefix':8 'addr32' 'mand' 'op' 1:2 'mod':3 0x5:3 0x0:8"/>
    <Address Name="['seg:segment':'base:base32'+'z:zero']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,mmrm,sserm,rm32bit" Coding="'seg.Prefix':8 'addr32' 'mand' 'op' 0:2 'mod':3 'base.Ord':3"/>

    <Address Name="[esp+'signed:signed8offset']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,mmrm,sserm,rm32bit" Coding="'addr32' 'mand' 'op' 1:2 'mod':3 0x4:3 0:2 0x4:3 0x4:3 'signed':8"/>
    <Address Name="[ebp+'signed:signed8offset']"	Class="rmx,rm,frm,rm8,rm16,rm32,rm64,mmrm,sserm,rm32bit" Coding="'addr32' 'mand' 'op' 1:2 'mod':3 0x5:3 'signed':8"/>
    <Address Name="['base:base32'+'signed:signed8offset']"	Class="rmx,rm,frm,rm8,rm16,rm32,rm64,mmrm,sserm,rm32bit" Coding="'addr32' 'mand' 'op' 1:2 'mod':3 'base.Ord':3 'signed':8"/>
    <Address Name="[ss:esp+'signed:signed8offset']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,mmrm,sserm,rm32bit" Coding="'addr32' 'mand' 'op' 1:2 'mod':3 0x4:3 0:2 0x4:3 0x4:3 'signed':8"/>
    <Address Name="[ss:ebp+'signed:signed8offset']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,mmrm,sserm,rm32bit" Coding="'addr32' 'mand' 'op' 1:2 'mod':3 0x5:3 'signed':8"/>
    <Address Name="[ss:'base:base32'+'signed:signed8offset']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,mmrm,sserm,rm32bit" Coding="'addr32' 0x36:8 'mand' 'op' 1:2 'mod':3 0x3:3 'signed':8"/>
    <Address Name="[ds:esp+'signed:signed8offset']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,mmrm,sserm,rm32bit" Coding="'addr32' 0x3e:8 'mand' 'op' 1:2 'mod':3 0x4:3 0:2 0x4:3 0x4:3 'signed':8"/>
    <Address Name="[ds:ebp+'signed:signed8offset']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,mmrm,sserm,rm32bit" Coding="'addr32' 0x3e:8 'mand' 'op' 1:2 'mod':3 0x5:3 'signed':8"/>
    <Address Name="[ds:'base:base32'+'signed:signed8offset']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,mmrm,sserm,rm32bit" Coding="'addr32' 'mand' 'op' 1:2 'mod':3 'base.Ord':3 'signed':8"/>
    <Address Name="['seg:segment':esp+'signed:signed8offset']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,mmrm,sserm,rm32bit" Coding="'seg.Prefix':8 'addr32' 'mand' 'op' 1:2 'mod':3 0x4:3 0:2 0x4:3 0x4:3 'signed':8"/>
    <Address Name="['seg:segment':ebp+'signed:signed8offset']"	Class="rmx,rm,frm,rm8,rm16,rm32,rm64,mmrm,sserm,rm32bit" Coding="'seg.Prefix':8 'addr32' 'mand' 'op' 1:2 'mod':3 0x5:3 'signed':8"/>
    <Address Name="['seg:segment':'base:base32'+'signed:signed8offset']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,mmrm,sserm,rm32bit" Coding="'seg.Prefix':8 'addr32' 'mand' 'op' 1:2 'mod':3 'base.Ord':3 'signed':8"/>

    <Address Name="[ebp+'mem:mem32']"	Class="rmx,rm,frm,rm8,rm16,rm32,rm64,mmrm,sserm,rm32bit" Coding="'addr32' 'mand' 'op' 2:2 'mod':3 0x5:3 'mem':32"/>
    <Address Name="[esp+'mem:mem32']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,mmrm,sserm,rm32bit" Coding="'addr32' 'mand' 'op' 2:2 'mod':3 0x4:3 0:2 0x4:3 0x4:3 'mem':32"/>
    <Address Name="['base:base32'+'mem:mem32']"	Class="rmx,rm,frm,rm8,rm16,rm32,rm64,mmrm,sserm,rm32bit" Coding="'addr32' 'mand' 'op' 2:2 'mod':3 'base.Ord':3 'mem':32"/>
    <Address Name="[ss:esp+'mem:mem32']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,mmrm,sserm,rm32bit" Coding="'addr32' 'mand' 'op' 2:2 'mod':3 0x4:3 0:2 0x4:3 0x4:3 'mem':32"/>
    <Address Name="[ss:ebp+'mem:mem32']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,mmrm,sserm,rm32bit" Coding="'addr32' 'mand' 'op' 2:2 'mod':3 0x5:3 'mem':32"/>
    <Address Name="[ss:'base:base32'+'mem:mem32']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,mmrm,sserm,rm32bit" Coding="'addr32' 0x36:8 'mand' 'op' 2:2 'mod':3 'base.Ord':3"/>
    <Address Name="[ds:esp+'mem:mem32']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,mmrm,sserm,rm32bit" Coding="'addr32' 0x3e:8 'mand' 'op' 2:2 'mod':3 0x4:3 0:2 0x4:3 0x4:3 'mem':32"/>
    <Address Name="[ds:ebp+'mem:mem32']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,mmrm,sserm,rm32bit" Coding="'addr32' 0x3e:8 'mand' 'op' 2:2 'mod':3 0x5:3 'mem':32"/>
    <Address Name="[ds:'base:base32'+'mem:mem32']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,mmrm,sserm,rm32bit" Coding="'addr32' 'mand' 'op' 2:2 'mod':3 'base.Ord':3 'mem':32"/>
    <Address Name="['seg:segment':ebp+'mem:mem32']"	Class="rmx,rm,frm,rm8,rm16,rm32,rm64,mmrm,sserm,rm32bit" Coding="'seg.Prefix':8 'addr32' 'mand' 'op' 2:2 'mod':3 0x5:3 'mem':32"/>
    <Address Name="['seg:segment':esp+'mem:mem32']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,mmrm,sserm,rm32bit" Coding="'seg.Prefix':8 'addr32' 'mand' 'op' 2:2 'mod':3 0x4:3 0:2 0x4:3 0x4:3 'mem':32"/>
    <Address Name="['seg:segment':'base:base32'+'mem:mem32']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,mmrm,sserm,rm32bit" Coding="'seg.Prefix':8 'addr32' 'mand' 'op' 2:2 'mod':3 'base.Ord':3 'mem':32"/>


    <Address Name="[ebp*'sc:scale']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,mmrm,sserm,rm32bit" Coding="'addr32' 'mand' 'op' 0:2 'mod':3 0x4:3 'sc':2 0x5:3 0x5:3 0:32"/>
    <Address Name="[ebp*'sc:scale'+'mem:mem32']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,mmrm,sserm,rm32bit" Coding="'addr32' 'mand' 'op' 0:2 'mod':3 0x4:3 'sc':2 0x5:3 0x5:3 'mem':32"/>
    <Address Name="['base:base32'*'sc:scale']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,mmrm,sserm,rm32bit" Coding="'addr32' 'mand' 'op' 0:2 'mod':3 0x4:3 'sc':2 'base.Ord':3 0x5:3 0:32"/>
    <Address Name="['base:base32'*'sc:scale'+'mem:mem32']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,mmrm,sserm,rm32bit" Coding="'addr32' 'mand' 'op' 0:2 'mod':3 0x4:3 'sc':2 'base.Ord':3 0x5:3 'mem':32"/>
    <Address Name="[ss:ebp*'sc:scale']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,mmrm,sserm,rm32bit" Coding="'addr32' 0x36:8 'mand' 'op' 0:2 'mod':3 0x4:3 'sc':2 0x5:3 0x5:3 0:32"/>
    <Address Name="[ss:ebp*'sc:scale'+'mem:mem32']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,mmrm,sserm,rm32bit" Coding="'addr32' 0x36:8 'mand' 'op' 0:2 'mod':3 0x4:3 'sc':2 0x5:3 0x5:3 'mem':32"/>
    <Address Name="[ss:'base:base32'*'sc:scale']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,mmrm,sserm,rm32bit" Coding="'addr32' 0x36:8 'mand' 'op' 0:2 'mod':3 0x4:3 'sc':2 'base.Ord':3 0x5:3 0:32"/>
    <Address Name="[ss:'base:base32'*'sc:scale'+'mem:mem32']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,mmrm,sserm,rm32bit" Coding="'addr32' 0x36:8 'mand' 'op' 0:2 'mod':3 0x4:3 'sc':2 'base.Ord':3 0x5:3 'mem':32"/>
    <Address Name="[ds:ebp*'sc:scale']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,mmrm,sserm,rm32bit" Coding="'addr32' 'mand' 'op' 0:2 'mod':3 0x4:3 'sc':2 0x5:3 0x5:3 0:32"/>
    <Address Name="[ds:ebp*'sc:scale'+'mem:mem32']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,mmrm,sserm,rm32bit" Coding="'addr32' 'mand' 'op' 0:2 'mod':3 0x4:3 'sc':2 0x5:3 0x5:3 'mem':32"/>
    <Address Name="[ds:'base:base32'*'sc:scale']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,mmrm,sserm,rm32bit" Coding="'addr32' 'mand' 'op' 0:2 'mod':3 0x4:3 'sc':2 'base.Ord':3 0x5:3 0:32"/>
    <Address Name="[ds:'base:base32'*'sc:scale'+'mem:mem32']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,mmrm,sserm,rm32bit" Coding="'addr32' 'mand' 'op' 0:2 'mod':3 0x4:3 'sc':2 'base.Ord':3 0x5:3 'mem':32"/>
    <Address Name="['seg:segment':ebp*'sc:scale']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,mmrm,sserm,rm32bit" Coding="'seg.Prefix':8 'addr32' 'mand' 'op' 0:2 'mod':3 0x4:3 'sc':2 0x5:3 0x5:3 0:32"/>
    <Address Name="['seg:segment':ebp*'sc:scale'+'mem:mem32']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,mmrm,sserm,rm32bit" Coding="'seg.Prefix':8 'addr32' 'mand' 'op' 0:2 'mod':3 0x4:3 'sc':2 0x5:3 0x5:3 'mem':32"/>
    <Address Name="['seg:segment':'base:base32'*'sc:scale']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,mmrm,sserm,rm32bit" Coding="'seg.Prefix':8 'addr32' 'mand' 'op' 0:2 'mod':3 0x4:3 'sc':2 'base.Ord':3 0x5:3 0:32"/>
    <Address Name="['seg:segment':'base:base32'*'sc:scale'+'mem:mem32']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,mmrm,sserm,rm32bit" Coding="'seg.Prefix':8 'addr32' 'mand' 'op' 0:2 'mod':3 0x4:3 'sc':2 'base.Ord':3 0x5:3 'mem':32"/>

    <Address Name="[ebp+'index:index32'*'sc:scale'+'z:zero']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,mmrm,sserm,rm32bit" Coding="'addr32' 'mand' 'op' 1:2 'mod':3 0x4:3 'sc':2 'index.Ord':3 0x5:3 0:8"/>
    <Address Name="[ebp+'index:index32'+'z:zero']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,mmrm,sserm,rm32bit" Coding="'addr32' 'mand' 'op' 1:2 'mod':3 0x4:3 0:2 'index.Ord':3 0x5:3 0:8"/>
    <Address Name="[esp+'index:index32'*'sc:scale'+'z:zero']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,mmrm,sserm,rm32bit" Coding="'addr32' 'mand' 'op' 0:2 'mod':3 0x4:3 'sc':2 'index.Ord':3 4:3"/>
    <Address Name="[esp+'index:index32'+'z:zero']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,mmrm,sserm,rm32bit" Coding="'addr32' 'mand' 'op' 0:2 'mod':3 0x4:3 0:2 'index.Ord':3 4:3"/>
    <Address Name="['base:base32'+'index:index32'*'sc:scale'+'z:zero']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,mmrm,sserm,rm32bit" Coding="'addr32' 'mand' 'op' 0:2 'mod':3 0x4:3 'sc':2 'index.Ord':3 'base.Ord':3"/>
    <Address Name="['base:base32'+'index:index32'+'z:zero']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,mmrm,sserm,rm32bit" Coding="'addr32' 'mand' 'op' 0:2 'mod':3 0x4:3 0:2 'index.Ord':3 'base.Ord':3"/>
    <Address Name="[ss:ebp + 'index:index32'*'sc:scale'+'z:zero']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,mmrm,sserm,rm32bit" Coding="'addr32' 'mand' 'op' 1:2 'mod':3 0x4:3 'sc':2 'index.Ord':3 0x5:3 0:8"/>
    <Address Name="[ss:ebp + 'index:index32'+'z:zero']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,mmrm,sserm,rm32bit" Coding="'addr32' 'mand' 'op' 1:2 'mod':3 0x4:3 0:2 'index.Ord':3 0x5:3 0:8"/>
    <Address Name="[ss:esp + 'index:index32'*'sc:scale'+'z:zero']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,mmrm,sserm,rm32bit" Coding="'addr32' 'mand' 'op' 0:2 'mod':3 0x4:3 'sc':2 'index.Ord':3 4:3"/>
    <Address Name="[ss:esp + 'index:index32'+'z:zero']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,mmrm,sserm,rm32bit" Coding="'addr32' 'mand' 'op' 0:2 'mod':3 0x4:3 0:2 'index.Ord':3 4:3"/>
    <Address Name="[ss:'base:base32' + 'index:index32'*'sc:scale'+'z:zero']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,mmrm,sserm,rm32bit" Coding="'addr32' 0x36:8 'mand' 'op' 0:2 'mod':3 0x4:3 'sc':2 'index.Ord':3 'base.Ord':3"/>
    <Address Name="[ss:'base:base32' + 'index:index32'+'z:zero']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,mmrm,sserm,rm32bit" Coding="'addr32' 0x36:8 'mand' 'op' 0:2 'mod':3 0x4:3 0:2 'index.Ord':3 'base.Ord':3"/>
    <Address Name="[ds:ebp + 'index:index32'*'sc:scale'+'z:zero']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,mmrm,sserm,rm32bit" Coding="'addr32' 0x3e:8 'mand' 'op' 1:2 'mod':3 0x4:3 'sc':2 'index.Ord':3 0x5:3 0:8"/>
    <Address Name="[ds:ebp + 'index:index32'+'z:zero']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,mmrm,sserm,rm32bit" Coding="'addr32' 0x3e:8 'mand' 'op' 1:2 'mod':3 0x4:3 0:2 'index.Ord':3 0x5:3 0:8"/>
    <Address Name="[ds:esp + 'index:index32'*'sc:scale'+'z:zero']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,mmrm,sserm,rm32bit" Coding="'addr32' 0x3e:8 'mand' 'op' 0:2 'mod':3 0x4:3 'sc':2 'index.Ord':3 4:3"/>
    <Address Name="[ds:esp + 'index:index32'+'z:zero']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,mmrm,sserm,rm32bit" Coding="'addr32' 0x3e:8 'mand' 'op' 0:2 'mod':3 0x4:3 0:2 'index.Ord':3 4:3"/>
    <Address Name="[ds:'base:base32' + 'index:index32'*'sc:scale'+'z:zero']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,mmrm,sserm,rm32bit" Coding="'addr32' 'mand' 'op' 0:2 'mod':3 0x4:3 'sc':2 'index.Ord':3 'base.Ord':3"/>
    <Address Name="[ds:'base:base32' + 'index:index32'+'z:zero']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,mmrm,sserm,rm32bit" Coding="'addr32' 'mand' 'op' 0:2 'mod':3 0x4:3 0:2 'index.Ord':3 'base.Ord':3"/>
    <Address Name="['seg:segment':ebp+'index:index32'*'sc:scale'+'z:zero']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,mmrm,sserm,rm32bit" Coding="'seg.Prefix':8 'addr32' 'mand' 'op' 1:2 'mod':3 0x4:3 'sc':2 'index.Ord':3 0x5:3 0:8"/>
    <Address Name="['seg:segment':ebp+'index:index32'+'z:zero']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,mmrm,sserm,rm32bit" Coding="'seg.Prefix':8 'addr32' 'mand' 'op' 1:2 'mod':3 0x4:3 0:2 'index.Ord':3 0x5:3 0:8"/>
    <Address Name="['seg:segment':esp+'index:index32'*'sc:scale'+'z:zero']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,mmrm,sserm,rm32bit" Coding="'seg.Prefix':8 'addr32' 'mand' 'op' 0:2 'mod':3 0x4:3 'sc':2 'index.Ord':3 4:3"/>
    <Address Name="['seg:segment':esp+'index:index32'+'z:zero']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,mmrm,sserm,rm32bit" Coding="'seg.Prefix':8 'addr32' 'mand' 'op' 0:2 'mod':3 0x4:3 0:2 'index.Ord':3 4:3"/>
    <Address Name="['seg:segment':'base:base32'+'index:index32'*'sc:scale'+'z:zero']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,mmrm,sserm,rm32bit" Coding="'seg.Prefix':8 'addr32' 'mand' 'op' 0:2 'mod':3 0x4:3 'sc':2 'index.Ord':3 'base.Ord':3"/>
    <Address Name="['seg:segment':'base:base32'+'index:index32'+'z:zero']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,mmrm,sserm,rm32bit" Coding="'seg.Prefix':8 'addr32' 'mand' 'op' 0:2 'mod':3 0x4:3 0:2 'index.Ord':3 'base.Ord':3"/>

    <Address Name="[ebp+'index:index32'*'sc:scale']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,mmrm,sserm,rm32bit" Coding="'addr32' 'mand' 'op' 1:2 'mod':3 0x4:3 'sc':2 'index.Ord':3 0x5:3 0:8"/>
    <Address Name="[ebp+'index:index32']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,mmrm,sserm,rm32bit" Coding="'addr32' 'mand' 'op' 1:2 'mod':3 0x4:3 0:2 'index.Ord':3 0x5:3 0:8"/>
    <Address Name="[esp+'index:index32'*'sc:scale']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,mmrm,sserm,rm32bit" Coding="'addr32' 'mand' 'op' 0:2 'mod':3 0x4:3 'sc':2 'index.Ord':3 4:3"/>
    <Address Name="[esp+'index:index32']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,mmrm,sserm,rm32bit" Coding="'addr32' 'mand' 'op' 0:2 'mod':3 0x4:3 0:2 'index.Ord':3 4:3"/>
    <Address Name="['base:base32'+'index:index32'*'sc:scale']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,mmrm,sserm,rm32bit" Coding="'addr32' 'mand' 'op' 0:2 'mod':3 0x4:3 'sc':2 'index.Ord':3 'base.Ord':3"/>
    <Address Name="['base:base32'+'index:index32']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,mmrm,sserm,rm32bit" Coding="'addr32' 'mand' 'op' 0:2 'mod':3 0x4:3 0:2 'index.Ord':3 'base.Ord':3"/>
    <Address Name="[ss:ebp + 'index:index32'*'sc:scale']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,mmrm,sserm,rm32bit" Coding="'addr32' 'mand' 'op' 1:2 'mod':3 0x4:3 'sc':2 'index.Ord':3 0x5:3 0:8"/>
    <Address Name="[ss:ebp + 'index:index32']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,mmrm,sserm,rm32bit" Coding="'addr32' 'mand' 'op' 1:2 'mod':3 0x4:3 0:2 'index.Ord':3 0x5:3 0:8"/>
    <Address Name="[ss:esp + 'index:index32'*'sc:scale']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,mmrm,sserm,rm32bit" Coding="'addr32' 'mand' 'op' 0:2 'mod':3 0x4:3 'sc':2 'index.Ord':3 4:3"/>
    <Address Name="[ss:esp + 'index:index32']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,mmrm,sserm,rm32bit" Coding="'addr32' 'mand' 'op' 0:2 'mod':3 0x4:3 0:2 'index.Ord':3 4:3"/>
    <Address Name="[ss:'base:base32' + 'index:index32'*'sc:scale']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,mmrm,sserm,rm32bit" Coding="'addr32' 0x36:8 'mand' 'op' 0:2 'mod':3 0x4:3 'sc':2 'index.Ord':3 'base.Ord':3"/>
    <Address Name="[ss:'base:base32' + 'index:index32']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,mmrm,sserm,rm32bit" Coding="'addr32' 0x36:8 'mand' 'op' 0:2 'mod':3 0x4:3 0:2 'index.Ord':3 'base.Ord':3"/>
    <Address Name="[ds:ebp + 'index:index32'*'sc:scale']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,mmrm,sserm,rm32bit" Coding="'addr32' 0x3e:8 'mand' 'op' 1:2 'mod':3 0x4:3 'sc':2 'index.Ord':3 0x5:3 0:8"/>
    <Address Name="[ds:ebp + 'index:index32']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,mmrm,sserm,rm32bit" Coding="'addr32' 0x3e:8 'mand' 'op' 1:2 'mod':3 0x4:3 0:2 'index.Ord':3 0x5:3 0:8"/>
    <Address Name="[ds:esp + 'index:index32'*'sc:scale']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,mmrm,sserm,rm32bit" Coding="'addr32' 0x3e:8 'mand' 'op' 0:2 'mod':3 0x4:3 'sc':2 'index.Ord':3 4:3"/>
    <Address Name="[ds:esp + 'index:index32']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,mmrm,sserm,rm32bit" Coding="'addr32' 0x3e:8 'mand' 'op' 0:2 'mod':3 0x4:3 0:2 'index.Ord':3 4:3"/>
    <Address Name="[ds:'base:base32' + 'index:index32'*'sc:scale']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,mmrm,sserm,rm32bit" Coding="'addr32' 'mand' 'op' 0:2 'mod':3 0x4:3 'sc':2 'index.Ord':3 'base.Ord':3"/>
    <Address Name="[ds:'base:base32' + 'index:index32']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,mmrm,sserm,rm32bit" Coding="'addr32' 'mand' 'op' 0:2 'mod':3 0x4:3 0:2 'index.Ord':3 'base.Ord':3"/>
    <Address Name="['seg:segment':ebp+'index:index32'*'sc:scale']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,mmrm,sserm,rm32bit" Coding="'seg.Prefix':8 'addr32' 'mand' 'op' 1:2 'mod':3 0x4:3 'sc':2 'index.Ord':3 0x5:3 0:8"/>
    <Address Name="['seg:segment':ebp+'index:index32']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,mmrm,sserm,rm32bit" Coding="'seg.Prefix':8 'addr32' 'mand' 'op' 1:2 'mod':3 0x4:3 0:2 'index.Ord':3 0x5:3 0:8"/>
    <Address Name="['seg:segment':esp+'index:index32'*'sc:scale']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,mmrm,sserm,rm32bit" Coding="'seg.Prefix':8 'addr32' 'mand' 'op' 0:2 'mod':3 0x4:3 'sc':2 'index.Ord':3 4:3"/>
    <Address Name="['seg:segment':esp+'index:index32']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,mmrm,sserm,rm32bit" Coding="'seg.Prefix':8 'addr32' 'mand' 'op' 0:2 'mod':3 0x4:3 0:2 'index.Ord':3 4:3"/>
    <Address Name="['seg:segment':'base:base32'+'index:index32'*'sc:scale']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,mmrm,sserm,rm32bit" Coding="'seg.Prefix':8 'addr32' 'mand' 'op' 0:2 'mod':3 0x4:3 'sc':2 'index.Ord':3 'base.Ord':3"/>
    <Address Name="['seg:segment':'base:base32'+'index:index32']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,mmrm,sserm,rm32bit" Coding="'seg.Prefix':8 'addr32' 'mand' 'op' 0:2 'mod':3 0x4:3 0:2 'index.Ord':3 'base.Ord':3"/>

    <Address Name="[ebp+'index:index32'*'sc:scale'+'signed:signed8offset']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,mmrm,sserm,rm32bit" Coding="'addr32' 'mand' 'op' 1:2 'mod':3 0x4:3 'sc':2 'index.Ord':3 0x5:3 'signed.Ord':8"/>
    <Address Name="[ebp+'index:index32'+'signed:signed8offset']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,mmrm,sserm,rm32bit" Coding="'addr32' 'mand' 'op' 1:2 'mod':3 0x4:3 0:2 'index.Ord':3 0x5:3 'signed.Ord':8"/>
    <Address Name="[esp+'index:index32'*'sc:scale'+'signed:signed8offset']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,mmrm,sserm,rm32bit" Coding="'addr32' 'mand' 'op' 1:2 'mod':3 0x4:3 'sc':2 'index.Ord':3 4:3 'signed.Ord':8"/>
    <Address Name="[esp+'index:index32'+'signed:signed8offset']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,mmrm,sserm,rm32bit" Coding="'addr32' 'mand' 'op' 1:2 'mod':3 0x4:3 0:2 'index.Ord':3 4:3 'signed.Ord':8"/>
    <Address Name="['base:base32'+'index:index32'*'sc:scale'+'signed:signed8offset']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,mmrm,sserm,rm32bit" Coding="'addr32' 'mand' 'op' 1:2 'mod':3 0x4:3 'sc':2 'index.Ord':3 'base.Ord':3 'signed.Ord':8"/>
    <Address Name="['base:base32'+'index:index32'+'signed:signed8offset']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,mmrm,sserm,rm32bit" Coding="'addr32' 'mand' 'op' 1:2 'mod':3 0x4:3 0:2 'index.Ord':3 'base.Ord':3 'signed.Ord':8"/>
    <Address Name="[ss:ebp + 'index:index32'*'sc:scale'+'signed:signed8offset']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,mmrm,sserm,rm32bit" Coding="'addr32' 'mand' 'op' 1:2 'mod':3 0x4:3 'sc':2 'index.Ord':3 0x5:3 'signed.Ord':8"/>
    <Address Name="[ss:ebp + 'index:index32'+'signed:signed8offset']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,mmrm,sserm,rm32bit" Coding="'addr32' 'mand' 'op' 1:2 'mod':3 0x4:3 0:2 'index.Ord':3 0x5:3 'signed.Ord':8"/>
    <Address Name="[ss:esp + 'index:index32'*'sc:scale'+'signed:signed8offset']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,mmrm,sserm,rm32bit" Coding="'addr32' 'mand' 'op' 1:2 'mod':3 0x4:3 'sc':2 'index.Ord':3 4:3 'signed.Ord':8"/>
    <Address Name="[ss:esp + 'index:index32'+'signed:signed8offset']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,mmrm,sserm,rm32bit" Coding="'addr32' 'mand' 'op' 1:2 'mod':3 0x4:3 0:2 'index.Ord':3 4:3 'signed.Ord':8"/>
    <Address Name="[ss:'base:base32' + 'index:index32'*'sc:scale'+'signed:signed8offset']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,mmrm,sserm,rm32bit" Coding="'addr32' 0x36:8 'mand' 'op' 1:2 'mod':3 0x4:3 'sc':2 'index.Ord':3 'base.Ord':3 'signed.Ord':8"/>
    <Address Name="[ss:'base:base32' + 'index:index32'+'signed:signed8offset']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,mmrm,sserm,rm32bit" Coding="'addr32' 0x36:8 'mand' 'op' 1:2 'mod':3 0x4:3 0:2 'index.Ord':3 'base.Ord':3 'signed.Ord':8"/>
    <Address Name="[ds:ebp + 'index:index32'*'sc:scale'+'signed:signed8offset']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,mmrm,sserm,rm32bit" Coding="'addr32' 0x3e:8 'mand' 'op' 1:2 'mod':3 0x4:3 'sc':2 'index.Ord':3 0x5:3 'signed.Ord':8"/>
    <Address Name="[ds:ebp + 'index:index32'+'signed:signed8offset']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,mmrm,sserm,rm32bit" Coding="'addr32' 0x3e:8 'mand' 'op' 1:2 'mod':3 0x4:3 0:2 'index.Ord':3 0x5:3 'signed.Ord':8"/>
    <Address Name="[ds:esp + 'index:index32'*'sc:scale'+'signed:signed8offset']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,mmrm,sserm,rm32bit" Coding="'addr32' 0x3e:8 'mand' 'op' 1:2 'mod':3 0x4:3 'sc':2 'index.Ord':3 4:3 'signed.Ord':8"/>
    <Address Name="[ds:esp + 'index:index32'+'signed:signed8offset']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,mmrm,sserm,rm32bit" Coding="'addr32' 0x3e:8 'mand' 'op' 1:2 'mod':3 0x4:3 0:2 'index.Ord':3 4:3 'signed.Ord':8"/>
    <Address Name="[ds:'base:base32' + 'index:index32'*'sc:scale'+'signed:signed8offset']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,mmrm,sserm,rm32bit" Coding="'addr32' 'mand' 'op' 1:2 'mod':3 0x4:3 'sc':2 'index.Ord':3 'base.Ord':3 'signed.Ord':8"/>
    <Address Name="[ds:'base:base32' + 'index:index32'+'signed:signed8offset']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,mmrm,sserm,rm32bit" Coding="'addr32' 'mand' 'op' 1:2 'mod':3 0x4:3 0:2 'index.Ord':3 'base.Ord':3 'signed.Ord':8"/>
    <Address Name="['seg:segment':ebp+'index:index32'*'sc:scale'+'signed:signed8offset']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,mmrm,sserm,rm32bit" Coding="'seg.Prefix':8 'addr32' 'mand' 'op' 1:2 'mod':3 0x4:3 'sc':2 'index.Ord':3 0x5:3 'signed.Ord':8"/>
    <Address Name="['seg:segment':ebp+'index:index32'+'signed:signed8offset']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,mmrm,sserm,rm32bit" Coding="'seg.Prefix':8 'addr32' 'mand' 'op' 1:2 'mod':3 0x4:3 0:2 'index.Ord':3 0x5:3 'signed.Ord':8"/>
    <Address Name="['seg:segment':esp+'index:index32'*'sc:scale'+'signed:signed8offset']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,mmrm,sserm,rm32bit" Coding="'seg.Prefix':8 'addr32' 'mand' 'op' 1:2 'mod':3 0x4:3 'sc':2 'index.Ord':3 4:3 'signed.Ord':8"/>
    <Address Name="['seg:segment':esp+'index:index32'+'signed:signed8offset']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,mmrm,sserm,rm32bit" Coding="'seg.Prefix':8 'addr32' 'mand' 'op' 1:2 'mod':3 0x4:3 0:2 'index.Ord':3 4:3 'signed.Ord':8"/>
    <Address Name="['seg:segment':'base:base32'+'index:index32'*'sc:scale'+'signed:signed8offset']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,mmrm,sserm,rm32bit" Coding=" 'seg.Prefix':8 'addr32' 'mand' 'op' 1:2 'mod':3 0x4:3 'sc':2 'index.Ord':3 'base.Ord':3 'signed.Ord':8"/>
    <Address Name="['seg:segment':'base:base32'+'index:index32'+'signed:signed8offset']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,mmrm,sserm,rm32bit" Coding="'seg.Prefix':8 'addr32' 'mand' 'op' 1:2 'mod':3 0x4:3 0:2 'index.Ord':3 'base.Ord':3 'signed.Ord':8"/>

    <Address Name="[ebp+'index:index32'*'sc:scale'+'mem:mem32']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,mmrm,sserm,rm32bit" Coding="'addr32' 'mand' 'op' 2:2 'mod':3 0x4:3 'sc':2 'index.Ord':3 0x5:3 'mem':32"/>
    <Address Name="[ebp+'index:index32'+'mem:mem32']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,mmrm,sserm,rm32bit" Coding="'addr32' 'mand' 'op' 2:2 'mod':3 0x4:3 0:2 'index.Ord':3 0x5:3 'mem':32"/>
    <Address Name="[esp+'index:index32'*'sc:scale'+'mem:mem32']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,mmrm,sserm,rm32bit" Coding="'addr32' 'mand' 'op' 2:2 'mod':3 0x4:3 'sc':2 'index.Ord':3 4:3 'mem':32"/>
    <Address Name="[esp+'index:index32'+'mem:mem32']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,mmrm,sserm,rm32bit" Coding="'addr32' 'mand' 'op' 2:2 'mod':3 0x4:3 0:2 'index.Ord':3 4:3 'mem':32"/>
    <Address Name="['base:base32'+'index:index32'*'sc:scale'+'mem:mem32']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,mmrm,sserm,rm32bit" Coding="'addr32' 'mand' 'op' 2:2 'mod':3 0x4:3 'sc':2 'index.Ord':3 'base.Ord':3 'mem':32"/>
    <Address Name="['base:base32'+'index:index32'+'mem:mem32']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,mmrm,sserm,rm32bit" Coding="'addr32' 'mand' 'op' 2:2 'mod':3 0x4:3 0:2 'index.Ord':3 'base.Ord':3 'mem':32"/>
    <Address Name="[ss:ebp + 'index:index32'*'sc:scale'+'mem:mem32']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,mmrm,sserm,rm32bit" Coding="'addr32' 'mand' 'op' 2:2 'mod':3 0x4:3 'sc':2 'index.Ord':3 0x5:3 'mem':32"/>
    <Address Name="[ss:ebp + 'index:index32'+'mem:mem32']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,mmrm,sserm,rm32bit" Coding="'addr32' 'mand' 'op' 2:2 'mod':3 0x4:3 0:2 'index.Ord':3 0x5:3 'mem':32"/>
    <Address Name="[ss:esp + 'index:index32'*'sc:scale'+'mem:mem32']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,mmrm,sserm,rm32bit" Coding="'addr32' 'mand' 'op' 2:2 'mod':3 0x4:3 'sc':2 'index.Ord':3 4:3 'mem':32"/>
    <Address Name="[ss:esp + 'index:index32'+'mem:mem32']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,mmrm,sserm,rm32bit" Coding="'addr32' 'mand' 'op' 2:2 'mod':3 0x4:3 0:2 'index.Ord':3 4:3 'mem':32"/>
    <Address Name="[ss:'base:base32' + 'index:index32'*'sc:scale'+'mem:mem32']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,mmrm,sserm,rm32bit" Coding="'addr32' 0x36:8 'mand' 'op' 2:2 'mod':3 0x4:3 'sc':2 'index.Ord':3 'base.Ord':3 'mem':32"/>
    <Address Name="[ss:'base:base32' + 'index:index32'+'mem:mem32']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,mmrm,sserm,rm32bit" Coding="'addr32' 0x36:8 'mand' 'op' 2:2 'mod':3 0x4:3 0:2 'index.Ord':3 'base.Ord':3 'mem':32"/>
    <Address Name="[ds:ebp + 'index:index32'*'sc:scale'+'mem:mem32']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,mmrm,sserm,rm32bit" Coding="'addr32' 0x3e:8 'mand' 'op' 2:2 'mod':3 0x4:3 'sc':2 'index.Ord':3 0x5:3 'mem':32"/>
    <Address Name="[ds:ebp + 'index:index32'+'mem:mem32']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,mmrm,sserm,rm32bit" Coding="'addr32' 0x3e:8 'mand' 'op' 2:2 'mod':3 0x4:3 0:2 'index.Ord':3 0x5:3 'mem':32"/>
    <Address Name="[ds:esp + 'index:index32'*'sc:scale'+'mem:mem32']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,mmrm,sserm,rm32bit" Coding="'addr32' 0x3e:8 'mand' 'op' 2:2 'mod':3 0x4:3 'sc':2 'index.Ord':3 4:3 'mem':32"/>
    <Address Name="[ds:esp + 'index:index32'+'mem:mem32']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,mmrm,sserm,rm32bit" Coding="'addr32' 0x3e:8 'mand' 'op' 2:2 'mod':3 0x4:3 0:2 'index.Ord':3 4:3 'mem':32"/>
    <Address Name="[ds:'base:base32' + 'index:index32'*'sc:scale'+'mem:mem32']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,mmrm,sserm,rm32bit" Coding="'addr32' 'mand' 'op' 2:2 'mod':3 0x4:3 'sc':2 'index.Ord':3 'base.Ord':3 'mem':32"/>
    <Address Name="[ds:'base:base32' + 'index:index32'+'mem:mem32']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,mmrm,sserm,rm32bit" Coding="'addr32' 'mand' 'op' 2:2 'mod':3 0x4:3 0:2 'index.Ord':3 'base.Ord':3 'mem':32"/>
    <Address Name="['seg:segment':ebp+'index:index32'*'sc:scale'+'mem:mem32']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,mmrm,sserm,rm32bit" Coding="'seg.Prefix':8 'addr32' 'mand' 'op' 2:2 'mod':3 0x4:3 'sc':2 'index.Ord':3 0x5:3 'mem':32"/>
    <Address Name="['seg:segment':ebp+'index:index32'+'mem:mem32']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,mmrm,sserm,rm32bit" Coding="'seg.Prefix':8 'addr32' 'mand' 'op' 2:2 'mod':3 0x4:3 0:2 'index.Ord':3 0x5:3 'mem':32"/>
    <Address Name="['seg:segment':esp+'index:index32'*'sc:scale'+'mem:mem32']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,mmrm,sserm,rm32bit" Coding="'seg.Prefix':8 'addr32' 'mand' 'op' 2:2 'mod':3 0x4:3 'sc':2 'index.Ord':3 4:3 'mem':32"/>
    <Address Name="['seg:segment':esp+'index:index32'+'mem:mem32']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,mmrm,sserm,rm32bit" Coding="'seg.Prefix':8 'addr32' 'mand' 'op' 2:2 'mod':3 0x4:3 0:2 'index.Ord':3 4:3 'mem':32"/>
    <Address Name="['seg:segment':'base:base32'+'index:index32'*'sc:scale'+'mem:mem32']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,mmrm,sserm,rm32bit" Coding="'seg.Prefix':8 'addr32' 'mand' 'op' 2:2 'mod':3 0x4:3 'sc':2 'index.Ord':3 'base.Ord':3 'mem':32"/>
    <Address Name="['seg:segment':'base:base32'+'index:index32'+'mem:mem32']" Class="rmx,rm,frm,rm8,rm16,rm32,rm64,mmrm,sserm,rm32bit" Coding="'seg.Prefix':8 'addr32' 'mand' 'op' 2:2 'mod':3 0x4:3 0:2 'index.Ord':3 'base.Ord':3 'mem':32"/>











    <Address Name="[esp]" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr32' 'mand' 0x40+'W'+'R':8 'op' 0:2 'mod':3 0x4:3 0:2 0x4:3 0x4:3"/>
    <Address Name="[ebp]" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr32' 'mand' 0x40+'W'+'R':8 'op' 1:2 'mod':3 0x5:3 0x0:8"/>
    <Address Name="['seg:segment':esp]" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr32' 'seg.Prefix' 'mand' 0x40+'W'+'R':8 'op' 0:2 'mod':3 0x4:3 0:2 0x4:3 0x4:3"/>
    <Address Name="['seg:segment':ebp]" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr32' 'seg.Prefix' 'mand' 0x40+'W'+'R':8 'op' 1:2 'mod':3 0x5:3 0x0:8"/>
    <Address Name="[r13d]" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr32' 'mand' 0x41+'W'+'R':8 'op' 1:2 'mod':3 0x5:3 0x0:8"/>
    <Address Name="['base:base32b']"	class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr32' 'mand' 0x41+'W'+'R':8 'op' 0:2 'mod':3 'base.Ord':3"/>
    <Address Name="['seg:segment':r13d]" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr32' 'seg.Prefix' 'mand' 0x41+'W'+'R':8 'op' 1:2 'mod':3 0x5:3 0x0:8"/>
    <Address Name="['seg:segment':'base:base32b']" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr32' 'seg.Prefix' 'mand' 0x41+'W'+'R':8 'op' 0:2 'mod':3 'base.Ord':3"/>
    <Address Name="[eip+'mem:rel32']" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr32' 'mand' 0x40+'W'+'R':8 'op' 0:2 'mod':3 0x5:3 'mem':32"/>

    <Address Name="[esp+'z:zero']" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr32' 'mand' 0x40+'W'+'R':8 'op' 0:2 'mod':3 0x4:3 0:2 0x4:3 0x4:3"/>
    <Address Name="[ebp+'z:zero']" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr32' 'mand' 0x40+'W'+'R':8 'op' 1:2 'mod':3 0x5:3 0x0:8"/>
    <Address Name="['seg:segment':esp+'z:zero']" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr32' 'seg.Prefix' 'mand' 0x40+'W'+'R':8 'op' 0:2 'mod':3 0x4:3 0:2 0x4:3 0x4:3"/>
    <Address Name="['seg:segment':ebp+'z:zero']" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr32' 'seg.Prefix' 'mand' 0x40+'W'+'R':8 'op' 1:2 'mod':3 0x5:3 0x0:8"/>
    <Address Name="[r13d+'z:zero']" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr32' 'mand' 0x41+'W'+'R':8 'op' 1:2 'mod':3 0x5:3 0x0:8"/>
    <Address Name="['base:base32b'+'z:zero']"	class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr32' 'mand' 0x41+'W'+'R':8 'op' 0:2 'mod':3 'base.Ord':3"/>
    <Address Name="['seg:segment':r13d+'z:zero']" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr32' 'seg.Prefix' 'mand' 0x41+'W'+'R':8 'op' 1:2 'mod':3 0x5:3 0x0:8"/>
    <Address Name="['seg:segment':'base:base32b'+'z:zero']" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr32' 'seg.Prefix' 'mand' 0x41+'W'+'R':8 'op' 0:2 'mod':3 'base.Ord':3"/>

    <Address Name="[esp+'signed:signed8offset']" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr32' 'mand' 0x40+'W'+'R':8 'op' 1:2 'mod':3 0x4:3 0:2 0x4:3 0x4:3 'signed':8"/>
    <Address Name="[ebp+'signed:signed8offset']"	class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr32' 'mand' 0x40+'W'+'R':8 'op' 1:2 'mod':3 0x5:3 'signed':8"/>
    <Address Name="['seg:segment':esp+'signed:signed8offset']" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr32' 'seg.Prefix' 'mand' 0x40+'W'+'R':8 'op' 1:2 'mod':3 0x4:3 0:2 0x4:3 0x4:3 'signed':8"/>
    <Address Name="['seg:segment':ebp+'signed:signed8offset']"	class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr32' 'seg.Prefix' 'mand' 0x40+'W'+'R':8 'op' 1:2 'mod':3 0x5:3 'signed':8"/>
    <Address Name="[r13d+'signed:signed8offset']"	class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr32' 'mand' 0x41+'W'+'R':8 'op' 1:2 'mod':3 0x5:3 'signed':8"/>
    <Address Name="['base:base32b'+'signed:signed8offset']"	class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr32' 'mand' 0x41+'W'+'R':8 'op' 1:2 'mod':3 'base.Ord':3 'signed':8"/>
    <Address Name="['seg:segment':r13d+'signed:signed8offset']"	class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr32' 'seg.Prefix' 'mand' 0x41+'W'+'R':8 'op' 1:2 'mod':3 0x5:3 'signed':8"/>
    <Address Name="['seg:segment':'base:base32b'+'signed:signed8offset']" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr32' 'seg.Prefix' 'mand' 0x41+'W'+'R':8 'op' 1:2 'mod':3 'base.Ord':3 'signed':8"/>

    <Address Name="[esp+'mem:mem32']" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr32' 'mand' 0x40+'W'+'R':8 'op' 2:2 'mod':3 0x4:3 0:2 0x4:3 0x4:3 'signed':8"/>
    <Address Name="[ebp+'mem:mem32']"	class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr32' 'mand' 0x40+'W'+'R':8 'op' 2:2 'mod':3 0x5:3 'signed':8"/>
    <Address Name="['seg:segment':esp+'mem:mem32']" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr32' 'seg.Prefix' 'mand' 0x40+'W'+'R':8 'op' 2:2 'mod':3 0x4:3 0:2 0x4:3 0x4:3 'signed':8"/>
    <Address Name="['seg:segment':ebp+'mem:mem32']"	class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr32' 'seg.Prefix' 'mand' 0x40+'W'+'R':8 'op' 2:2 'mod':3 0x5:3 'signed':8"/>
    <Address Name="[r13d+'mem:mem32']"	class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr32' 'mand' 0x41+'W'+'R':8 'op' 2:2 'mod':3 0x5:3 'signed':8"/>
    <Address Name="['base:base32b'+'mem:mem32']"	class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr32' 'mand' 0x41+'W'+'R':8 'op' 2:2 'mod':3 'base.Ord':3 'signed':8"/>
    <Address Name="['seg:segment':r13d+'mem:mem32']"	class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr32' 'seg.Prefix' 'mand' 0x41+'W'+'R':8 'op' 2:2 'mod':3 0x5:3 'signed':8"/>
    <Address Name="['seg:segment':'base:base32b'+'mem:mem32']" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr32' 'seg.Prefix' 'mand' 0x41+'W'+'R':8 'op' 2:2 'mod':3 'base.Ord':3 'signed':8"/>



    <Address Name="[ebp*'sc:scale']" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr32' 'mand' 0x40+'W'+'R':8 'op' 0:2 'mod':3 0x4:3 'sc':2 0x5:3 0x5:3 0:32"/>
    <Address Name="[ebp*'sc:scale'+'mem:mem32']" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr32' 'mand' 0x40+'W'+'R':8 'op' 0:2 'mod':3 0x4:3 'sc':2 0x5:3 0x5:3 'mem':32"/>
    <Address Name="['seg:segment':ebp*'sc:scale']" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr32' 'seg.Prefix' 'mand' 0x40+'W'+'R':8 'op' 0:2 'mod':3 0x4:3 'sc':2 0x5:3 0x5:3 0:32"/>
    <Address Name="['seg:segment':ebp*'sc:scale'+'mem:mem32']" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr32' 'seg.Prefix' 'mand' 0x40+'W'+'R':8 'op' 0:2 'mod':3 0x4:3 'sc':2 0x5:3 0x5:3 'mem':32"/>
    <Address Name="[r13d*'sc:scale']" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr32' 'mand' 0x42+'W'+'R':8 'op' 0:2 'mod':3 0x4:3 'sc':2 0x5:3 0x5:3 0:32"/>
    <Address Name="[r13d*'sc:scale'+'mem:mem32']" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr32' 'mand' 0x42+'W'+'R':8 'op' 0:2 'mod':3 0x4:3 'sc':2 0x5:3 0x5:3 'mem':32"/>
    <Address Name="['base:base32b'*'sc:scale']" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr32' 'mand' 0x42+'W'+'R':8 'op' 0:2 'mod':3 0x4:3 'sc':2 'base.Ord':3 0x5:3 0:32"/>
    <Address Name="['base:base32b'*'sc:scale'+'mem:mem32']" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr32' 'mand' 0x42+'W'+'R':8 'op' 0:2 'mod':3 0x4:3 'sc':2 'base.Ord':3 0x5:3 'mem':32"/>
    <Address Name="['seg:segment':r13d*'sc:scale']" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr32' 'seg.Prefix' 'mand' 0x42+'W'+'R':8 'op' 0:2 'mod':3 0x4:3 'sc':2 0x5:3 0x5:3 0:32"/>
    <Address Name="['seg:segment':r13d*'sc:scale'+'mem:mem32']" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr32' 'seg.Prefix' 'mand' 0x42+'W'+'R':8 'op' 0:2 'mod':3 0x4:3 'sc':2 0x5:3 0x5:3 'mem':32"/>
    <Address Name="['seg:segment':'base:base32b'*'sc:scale']" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr32' 'seg.Prefix' 'mand' 0x42+'W'+'R':8 'op' 0:2 'mod':3 0x4:3 'sc':2 'base.Ord':3 0x5:3 0:32"/>
    <Address Name="['seg:segment':'base:base32b'*'sc:scale'+'mem:mem32']" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr32' 'seg.Prefix' 'mand' 0x42+'W'+'R':8 'op' 0:2 'mod':3 0x4:3 'sc':2 'base.Ord':3 0x5:3 'mem':32"/>

    <Address Name="[ebp+'index:index32b'*'sc:scale'+'z:zero']" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr32' 'mand' 0x41+'W'+'R':8 'op' 1:2 'mod':3 0x4:3 'sc':2 'index.Ord':3 0x5:3 0:8"/>
    <Address Name="[ebp+'index:index32b'+'z:zero']" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr32' 'mand' 0x41+'W'+'R':8 'op' 1:2 'mod':3 0x4:3 0:2 'index.Ord':3 0x5:3 0:8"/>
    <Address Name="[esp+'index:index32b'*'sc:scale'+'z:zero']" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr32' 'mand' 0x41+'W'+'R':8 'op' 0:2 'mod':3 0x4:3 'sc':2 'index.Ord':3 4:3"/>
    <Address Name="[esp+'index:index32b'+'z:zero']" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr32' 'mand' 0x41+'W'+'R':8 'op' 0:2 'mod':3 0x4:3 0:2 'index.Ord':3 4:3"/>
    <Address Name="['seg:segment':ebp+'index:index32b'*'sc:scale'+'z:zero']" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr32' 'seg.Prefix' 'mand' 0x41+'W'+'R':8 'op' 1:2 'mod':3 0x4:3 'sc':2 'index.Ord':3 0x5:3 0:8"/>
    <Address Name="['seg:segment':ebp+'index:index32b'+'z:zero']" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr32' 'seg.Prefix' 'mand' 0x41+'W'+'R':8 'op' 1:2 'mod':3 0x4:3 0:2 'index.Ord':3 0x5:3 0:8"/>
    <Address Name="['seg:segment':esp+'index:index32b'*'sc:scale'+'z:zero']" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr32' 'seg.Prefix' 'mand' 0x41+'W'+'R':8 'op' 0:2 'mod':3 0x4:3 'sc':2 'index.Ord':3 4:3"/>
    <Address Name="['seg:segment':esp+'index:index32b'+'z:zero']" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr32' 'seg.Prefix' 'mand' 0x41+'W'+'R':8 'op' 0:2 'mod':3 0x4:3 0:2 'index.Ord':3 4:3"/>
    <Address Name="[r13d+'index:index32b'*'sc:scale'+'z:zero']" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr32' 'mand' 0x43+'W'+'R':8 'op' 1:2 'mod':3 0x4:3 'sc':2 'index.Ord':3 0x5:3 0:8"/>
    <Address Name="[r13d+'index:index32b'+'z:zero']" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr32' 0x43+'W'+'R':8 'hop' 1:2 'mod':3 0x4:3 0:2 'index.Ord':3 0x5:3 0:8"/>
    <Address Name="['base:base32b'+'index:index32b'*'sc:scale'+'z:zero']" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr32' 'mand' 0x43+'W'+'R':8 'op' 0:2 'mod':3 0x4:3 'sc':2 'index.Ord':3 'base.Ord':3"/>
    <Address Name="['base:base32b'+'index:index32b'+'z:zero']" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr32' 'mand' 0x43+'W'+'R':8 'op' 0:2 'mod':3 0x4:3 0:2 'index.Ord':3 'base.Ord':3"/>
    <Address Name="['seg:segment':r13d+'index:index32b'*'sc:scale'+'z:zero']" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr32' 'seg.Prefix' 'mand' 0x43+'W'+'R':8 'op' 1:2 'mod':3 0x4:3 'sc':2 'index.Ord':3 0x5:3 0:8"/>
    <Address Name="['seg:segment':r13d+'index:index32b'+'z:zero']" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr32' 'seg.Prefix' 'mand' 0x43+'W'+'R':8 'op' 1:2 'mod':3 0x4:3 0:2 'index.Ord':3 0x5:3 0:8"/>
    <Address Name="['seg:segment':'base:base32b'+'index:index32b'*'sc:scale'+'z:zero']" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr32' 'seg.Prefix' 'mand' 0x43+'W'+'R':8 'op' 0:2 'mod':3 0x4:3 'sc':2 'index.Ord':3 'base.Ord':3"/>
    <Address Name="['seg:segment':'base:base32b'+'index:index32b'+'z:zero']" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr32' 'seg.Prefix' 'mand' 0x43+'W'+'R':8 'op' 0:2 'mod':3 0x4:3 0:2 'index.Ord':3 'base.Ord':3"/>

    <Address Name="[ebp+'index:index32b'*'sc:scale']" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr32' 'mand' 0x41+'W'+'R':8 'op' 1:2 'mod':3 0x4:3 'sc':2 'index.Ord':3 0x5:3 0:8"/>
    <Address Name="[ebp+'index:index32b']" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr32' 'mand' 0x41+'W'+'R':8 'op' 1:2 'mod':3 0x4:3 0:2 'index.Ord':3 0x5:3 0:8"/>
    <Address Name="[esp+'index:index32b'*'sc:scale']" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr32' 'mand' 0x41+'W'+'R':8 'op' 0:2 'mod':3 0x4:3 'sc':2 'index.Ord':3 4:3"/>
    <Address Name="[esp+'index:index32b']" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr32' 'mand' 0x41+'W'+'R':8 'op' 0:2 'mod':3 0x4:3 0:2 'index.Ord':3 4:3"/>
    <Address Name="['seg:segment':ebp+'index:index32b'*'sc:scale']" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr32' 'seg.Prefix' 'mand' 0x41+'W'+'R':8 'op' 1:2 'mod':3 0x4:3 'sc':2 'index.Ord':3 0x5:3 0:8"/>
    <Address Name="['seg:segment':ebp+'index:index32b']" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr32' 'seg.Prefix' 'mand' 0x41+'W'+'R':8 'op' 1:2 'mod':3 0x4:3 0:2 'index.Ord':3 0x5:3 0:8"/>
    <Address Name="['seg:segment':esp+'index:index32b'*'sc:scale']" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr32' 'seg.Prefix' 'mand' 0x41+'W'+'R':8 'op' 0:2 'mod':3 0x4:3 'sc':2 'index.Ord':3 4:3"/>
    <Address Name="['seg:segment':esp+'index:index32b']" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr32' 'seg.Prefix' 'mand' 0x41+'W'+'R':8 'op' 0:2 'mod':3 0x4:3 0:2 'index.Ord':3 4:3"/>
    <Address Name="[r13d+'index:index32b'*'sc:scale']" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr32' 'mand' 0x43+'W'+'R':8 'op' 1:2 'mod':3 0x4:3 'sc':2 'index.Ord':3 0x5:3 0:8"/>
    <Address Name="[r13d+'index:index32b']" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr32' 'mand' 0x43+'W'+'R':8 'op' 1:2 'mod':3 0x4:3 0:2 'index.Ord':3 0x5:3 0:8"/>
    <Address Name="['base:base32b'+'index:index32b'*'sc:scale']" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr32' 'mand' 0x43+'W'+'R':8 'op' 0:2 'mod':3 0x4:3 'sc':2 'index.Ord':3 'base.Ord':3"/>
    <Address Name="['base:base32b'+'index:index32b']" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr32' 'mand' 0x43+'W'+'R':8 'op' 0:2 'mod':3 0x4:3 0:2 'index.Ord':3 'base.Ord':3"/>
    <Address Name="['seg:segment':r13d+'index:index32b'*'sc:scale']" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr32' 'seg.Prefix' 'mand' 0x43+'W'+'R':8 'op' 1:2 'mod':3 0x4:3 'sc':2 'index.Ord':3 0x5:3 0:8"/>
    <Address Name="['seg:segment':r13d+'index:index32b']" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr32' 'seg.Prefix' 'mand' 0x43+'W'+'R':8 'op' 1:2 'mod':3 0x4:3 0:2 'index.Ord':3 0x5:3 0:8"/>
    <Address Name="['seg:segment':'base:base32b'+'index:index32b'*'sc:scale']" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr32' 'seg.Prefix' 'mand' 0x43+'W'+'R':8 'op' 0:2 'mod':3 0x4:3 'sc':2 'index.Ord':3 'base.Ord':3"/>
    <Address Name="['seg:segment':'base:base32b'+'index:index32b']" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr32' 'seg.Prefix' 'mand' 0x43+'W'+'R':8 'op' 0:2 'mod':3 0x4:3 0:2 'index.Ord':3 'base.Ord':3"/>

    <Address Name="[ebp+'index:index32b'*'sc:scale'+'signed:signed8offset']" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr32' 'mand' 0x41+'W'+'R':8 'op' 1:2 'mod':3 0x4:3 'sc':2 'index.Ord':3 0x5:3 'signed.Ord':8"/>
    <Address Name="[ebp+'index:index32b'+'signed:signed8offset']" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr32' 'mand' 0x41+'W'+'R':8 'op' 1:2 'mod':3 0x4:3 0:2 'index.Ord':3 0x5:3 'signed.Ord':8"/>
    <Address Name="[esp+'index:index32b'*'sc:scale'+'signed:signed8offset']" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr32' 'mand' 0x41+'W'+'R':8 'op' 1:2 'mod':3 0x4:3 'sc':2 'index.Ord':3 4:3 'signed.Ord':8"/>
    <Address Name="[esp+'index:index32b'+'signed:signed8offset']" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr32' 'mand' 0x41+'W'+'R':8 'op' 1:2 'mod':3 0x4:3 0:2 'index.Ord':3 4:3 'signed.Ord':8"/>
    <Address Name="['seg:segment':ebp+'index:index32b'*'sc:scale'+'signed:signed8offset']" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr32' 'seg.Prefix' 'mand' 0x41+'W'+'R':8 'op' 1:2 'mod':3 0x4:3 'sc':2 'index.Ord':3 0x5:3 'signed.Ord':8"/>
    <Address Name="['seg:segment':ebp+'index:index32b'+'signed:signed8offset']" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr32' 'seg.Prefix' 'mand' 0x41+'W'+'R':8 'op' 1:2 'mod':3 0x4:3 0:2 'index.Ord':3 0x5:3 'signed.Ord':8"/>
    <Address Name="['seg:segment':esp+'index:index32b'*'sc:scale'+'signed:signed8offset']" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr32' 'seg.Prefix' 'mand' 0x41+'W'+'R':8 'op' 1:2 'mod':3 0x4:3 'sc':2 'index.Ord':3 4:3 'signed.Ord':8"/>
    <Address Name="['seg:segment':esp+'index:index32b'+'signed:signed8offset']" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr32' 'seg.Prefix' 'mand' 0x41+'W'+'R':8 'op' 1:2 'mod':3 0x4:3 0:2 'index.Ord':3 4:3 'signed.Ord':8"/>
    <Address Name="[r13d+'index:index32b'*'sc:scale'+'signed:signed8offset']" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr32' 'mand' 0x43+'W'+'R':8 'op' 1:2 'mod':3 0x4:3 'sc':2 'index.Ord':3 0x5:3 'signed.Ord':8"/>
    <Address Name="[r13d+'index:index32b'+'signed:signed8offset']" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr32' 'mand' 0x43+'W'+'R':8 'op' 1:2 'mod':3 0x4:3 0:2 'index.Ord':3 0x5:3 'signed.Ord':8"/>
    <Address Name="['base:base32b'+'index:index32b'*'sc:scale'+'signed:signed8offset']" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr32' 'mand' 0x43+'W'+'R':8 'op' 1:2 'mod':3 0x4:3 'sc':2 'index.Ord':3 'base.Ord':3 'signed.Ord':8"/>
    <Address Name="['base:base32b'+'index:index32b'+'signed:signed8offset']" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr32' 'mand' 0x43+'W'+'R':8 'op' 1:2 'mod':3 0x4:3 0:2 'index.Ord':3 'base.Ord':3 'signed.Ord':8"/>
    <Address Name="['seg:segment':r13d+'index:index32b'*'sc:scale'+'signed:signed8offset']" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr32' 'seg.Prefix' 'mand' 0x43+'W'+'R':8 'op' 1:2 'mod':3 0x4:3 'sc':2 'index.Ord':3 0x5:3 'signed.Ord':8"/>
    <Address Name="['seg:segment':r13d+'index:index32b'+'signed:signed8offset']" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr32' 'seg.Prefix' 'mand' 0x43+'W'+'R':8 'op' 1:2 'mod':3 0x4:3 0:2 'index.Ord':3 0x5:3 'signed.Ord':8"/>
    <Address Name="['seg:segment':'base:base32b'+'index:index32b'*'sc:scale'+'signed:signed8offset']" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding=" 'addr32' 'seg.Prefix' 'mand' 0x43+'W'+'R':8 'op' 1:2 'mod':3 0x4:3 'sc':2 'index.Ord':3 'base.Ord':3 'signed.Ord':8"/>
    <Address Name="['seg:segment':'base:base32b'+'index:index32b'+'signed:signed8offset']" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr32' 'seg.Prefix' 'mand' 0x43+'W'+'R':8 'op' 1:2 'mod':3 0x4:3 0:2 'index.Ord':3 'base.Ord':3 'signed.Ord':8"/>

    <Address Name="[ebp+'index:index32b'*'sc:scale'+'mem:mem32']" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr32' 'mand' 0x41+'W'+'R':8 'op' 2:2 'mod':3 0x4:3 'sc':2 'index.Ord':3 0x5:3 'mem':32"/>
    <Address Name="[ebp+'index:index32b'+'mem:mem32']" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr32' 'mand' 0x41+'W'+'R':8 'op' 2:2 'mod':3 0x4:3 0:2 'index.Ord':3 0x5:3 'mem':32"/>
    <Address Name="[esp+'index:index32b'*'sc:scale'+'mem:mem32']" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr32' 'mand' 0x41+'W'+'R':8 'op' 2:2 'mod':3 0x4:3 'sc':2 'index.Ord':3 4:3 'mem':32"/>
    <Address Name="[esp+'index:index32b'+'mem:mem32']" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr32' 'mand' 0x41+'W'+'R':8 'op' 2:2 'mod':3 0x4:3 0:2 'index.Ord':3 4:3 'mem':32"/>
    <Address Name="['seg:segment':ebp+'index:index32b'*'sc:scale'+'mem:mem32']" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr32' 'seg.Prefix' 'mand' 0x41+'W'+'R':8 'op' 2:2 'mod':3 0x4:3 'sc':2 'index.Ord':3 0x5:3 'mem':32"/>
    <Address Name="['seg:segment':ebp+'index:index32b'+'mem:mem32']" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr32' 'seg.Prefix' 'mand' 0x41+'W'+'R':8 'op' 2:2 'mod':3 0x4:3 0:2 'index.Ord':3 0x5:3 'mem':32"/>
    <Address Name="['seg:segment':esp+'index:index32b'*'sc:scale'+'mem:mem32']" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr32' 'seg.Prefix' 'mand' 0x41+'W'+'R':8 'op' 2:2 'mod':3 0x4:3 'sc':2 'index.Ord':3 4:3 'mem':32"/>
    <Address Name="['seg:segment':esp+'index:index32b'+'mem:mem32']" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr32' 'seg.Prefix' 'mand' 0x41+'W'+'R':8 'op' 2:2 'mod':3 0x4:3 0:2 'index.Ord':3 4:3 'mem':32"/>
    <Address Name="[r13d+'index:index32b'*'sc:scale'+'mem:mem32']" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr32' 'mand' 0x43+'W'+'R':8 'op' 2:2 'mod':3 0x4:3 'sc':2 'index.Ord':3 0x5:3 'mem':32"/>
    <Address Name="[r13d+'index:index32b'+'mem:mem32']" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr32' 'mand' 0x43+'W'+'R':8 'op' 2:2 'mod':3 0x4:3 0:2 'index.Ord':3 0x5:3 'mem':32"/>
    <Address Name="['base:base32b'+'index:index32b'*'sc:scale'+'mem:mem32']" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr32' 'mand' 0x43+'W'+'R':8 'op' 2:2 'mod':3 0x4:3 'sc':2 'index.Ord':3 'base.Ord':3 'mem':32"/>
    <Address Name="['base:base32b'+'index:index32b'+'mem:mem32']" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr32' 'mand' 0x43+'W'+'R':8 'op' 2:2 'mod':3 0x4:3 0:2 'index.Ord':3 'base.Ord':3 'mem':32"/>
    <Address Name="['seg:segment':r13d+'index:index32b'*'sc:scale'+'mem:mem32']" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr32' 'seg.Prefix' 'mand' 0x43+'W'+'R':8 'op' 2:2 'mod':3 0x4:3 'sc':2 'index.Ord':3 0x5:3 'mem':32"/>
    <Address Name="['seg:segment':r13d+'index:index32b'+'mem:mem32']" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr32' 'seg.Prefix' 'mand' 0x43+'W'+'R':8 'op' 2:2 'mod':3 0x4:3 0:2 'index.Ord':3 0x5:3 'mem':32"/>
    <Address Name="['seg:segment':'base:base32b'+'index:index32b'*'sc:scale'+'mem:mem32']" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr32' 'seg.Prefix' 'mand' 0x43+'W'+'R':8 'op' 2:2 'mod':3 0x4:3 'sc':2 'index.Ord':3 'base.Ord':3 'mem':32"/>
    <Address Name="['seg:segment':'base:base32b'+'index:index32b'+'mem:mem32']" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr32' 'seg.Prefix' 'mand' 0x43+'W'+'R':8 'op' 2:2 'mod':3 0x4:3 0:2 'index.Ord':3 'base.Ord':3 'mem':32"/>




    <Address Name="[rsp]" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr64' 'mand' 0x40+'W'+'R':8 'op' 0:2 'mod':3 0x4:3 0:2 0x4:3 0x4:3"/>
    <Address Name="[rbp]" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr64' 'mand' 0x40+'W'+'R':8 'op' 1:2 'mod':3 0x5:3 0x0:8"/>
    <Address Name="['seg:segment':rsp]" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr64' 'seg.Prefix' 'mand' 0x40+'W'+'R':8 'op' 0:2 'mod':3 0x4:3 0:2 0x4:3 0x4:3"/>
    <Address Name="['seg:segment':rbp]" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr64' 'seg.Prefix' 'mand' 0x40+'W'+'R':8 'op' 1:2 'mod':3 0x5:3 0x0:8"/>
    <Address Name="[r13]" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr64' 'mand' 0x41+'W'+'R':8 'op' 1:2 'mod':3 0x5:3 0x0:8"/>
    <Address Name="['base:base64b']"	class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr64' 'mand' 0x41+'W'+'R':8 'op' 0:2 'mod':3 'base.Ord':3"/>
    <Address Name="['seg:segment':r13]" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr64' 'seg.Prefix' 'mand' 0x41+'W'+'R':8 'op' 1:2 'mod':3 0x5:3 0x0:8"/>
    <Address Name="['seg:segment':'base:base64b']" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr64' 'seg.Prefix' 'mand' 0x41+'W'+'R':8 'op' 0:2 'mod':3 'base.Ord':3"/>
    <Address Name="[rip+'mem:rel32']" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr64' 'mand' 0x40+'W'+'R':8 'op' 0:2 'mod':3 0x00x5:3 'mem':32"/>

    <Address Name="[rsp+'z:zero']" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr64' 'mand' 0x40+'W'+'R':8 'op' 0:2 'mod':3 0x4:3 0:2 0x4:3 0x4:3"/>
    <Address Name="[rbp+'z:zero']" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr64' 'mand' 0x40+'W'+'R':8 'op' 1:2 'mod':3 0x5:3 0x0:8"/>
    <Address Name="['seg:segment':rsp+'z:zero']" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr64' 'seg.Prefix' 'mand' 0x40+'W'+'R':8 'op' 0:2 'mod':3 0x4:3 0:2 0x4:3 0x4:3"/>
    <Address Name="['seg:segment':rbp+'z:zero']" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr64' 'seg.Prefix' 'mand' 0x40+'W'+'R':8 'op' 1:2 'mod':3 0x5:3 0x0:8"/>
    <Address Name="[r13+'z:zero']" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr64' 'mand' 0x41+'W'+'R':8 'op' 1:2 'mod':3 0x5:3 0x0:8"/>
    <Address Name="['base:base64b'+'z:zero']"	class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr64' 'mand' 0x41+'W'+'R':8 'op' 0:2 'mod':3 'base.Ord':3"/>
    <Address Name="['seg:segment':r13+'z:zero']" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr64' 'seg.Prefix' 'mand' 0x41+'W'+'R':8 'op' 1:2 'mod':3 0x5:3 0x0:8"/>
    <Address Name="['seg:segment':'base:base64b'+'z:zero']" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr64' 'seg.Prefix' 'mand' 0x41+'W'+'R':8 'op' 0:2 'mod':3 'base.Ord':3"/>

    <Address Name="[rsp+'signed:signed8offset']" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr64' 'mand' 0x40+'W'+'R':8 'op' 1:2 'mod':3 0x4:3 0:2 0x4:3 0x4:3 'signed':8"/>
    <Address Name="[rbp+'signed:signed8offset']"	class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr64' 'mand' 0x40+'W'+'R':8 'op' 1:2 'mod':3 0x5:3 'signed':8"/>
    <Address Name="['seg:segment':rsp+'signed:signed8offset']" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr64' 'seg.Prefix' 'mand' 0x40+'W'+'R':8 'op' 1:2 'mod':3 0x4:3 0:2 0x4:3 0x4:3 'signed':8"/>
    <Address Name="['seg:segment':rbp+'signed:signed8offset']"	class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr64' 'seg.Prefix' 'mand' 0x40+'W'+'R':8 'op' 1:2 'mod':3 0x5:3 'signed':8"/>
    <Address Name="[r13+'signed:signed8offset']"	class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr64' 'mand' 0x41+'W'+'R':8 'op' 1:2 'mod':3 0x5:3 'signed':8"/>
    <Address Name="['base:base64b'+'signed:signed8offset']"	class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr64' 'mand' 0x41+'W'+'R':8 'op' 1:2 'mod':3 'base.Ord':3 'signed':8"/>
    <Address Name="['seg:segment':r13+'signed:signed8offset']"	class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr64' 'seg.Prefix' 'mand' 0x41+'W'+'R':8 'op' 1:2 'mod':3 0x5:3 'signed':8"/>
    <Address Name="['seg:segment':'base:base64b'+'signed:signed8offset']" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr64' 'seg.Prefix' 'mand' 0x41+'W'+'R':8 'op' 1:2 'mod':3 'base.Ord':3 'signed':8"/>

    <Address Name="[rsp+'mem:mem32']" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr64' 'mand' 0x40+'W'+'R':8 'op' 2:2 'mod':3 0x4:3 0:2 0x4:3 0x4:3 'signed':8"/>
    <Address Name="[rbp+'mem:mem32']"	class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr64' 'mand' 0x40+'W'+'R':8 'op' 2:2 'mod':3 0x5:3 'signed':8"/>
    <Address Name="['seg:segment':rsp+'mem:mem32']" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr64' 'seg.Prefix' 'mand' 0x40+'W'+'R':8 'op' 2:2 'mod':3 0x4:3 0:2 0x4:3 0x4:3 'signed':8"/>
    <Address Name="['seg:segment':rbp+'mem:mem32']"	class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr64' 'seg.Prefix' 'mand' 0x40+'W'+'R':8 'op' 2:2 'mod':3 0x5:3 'signed':8"/>
    <Address Name="[r13+'mem:mem32']"	class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr64' 'mand' 0x41+'W'+'R':8 'op' 2:2 'mod':3 0x5:3 'signed':8"/>
    <Address Name="['base:base64b'+'mem:mem32']"	class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr64' 'mand' 0x41+'W'+'R':8 'op' 2:2 'mod':3 'base.Ord':3 'signed':8"/>
    <Address Name="['seg:segment':r13+'mem:mem32']"	class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr64' 'seg.Prefix' 'mand' 0x41+'W'+'R':8 'op' 2:2 'mod':3 0x5:3 'signed':8"/>
    <Address Name="['seg:segment':'base:base64b'+'mem:mem32']" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr64' 'seg.Prefix' 'mand' 0x41+'W'+'R':8 'op' 2:2 'mod':3 'base.Ord':3 'signed':8"/>


    <Address Name="[rbp*'sc:scale']" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr64' 'mand' 0x40+'W'+'R':8 'op' 0:2 'mod':3 0x4:3 'sc':2 0x5:3 0x5:3 0:32"/>
    <Address Name="[rbp*'sc:scale'+'mem:mem32']" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr64' 'mand' 0x40+'W'+'R':8 'op' 0:2 'mod':3 0x4:3 'sc':2 0x5:3 0x5:3 'mem':32"/>
    <Address Name="['seg:segment':rbp*'sc:scale']" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr64' 'seg.Prefix' 'mand' 0x40+'W'+'R':8 'op' 0:2 'mod':3 0x4:3 'sc':2 0x5:3 0x5:3 0:32"/>
    <Address Name="['seg:segment':rbp*'sc:scale'+'mem:mem32']" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr64' 'seg.Prefix' 'mand' 0x40+'W'+'R':8 'op' 0:2 'mod':3 0x4:3 'sc':2 0x5:3 0x5:3 'mem':32"/>
    <Address Name="[r13*'sc:scale']" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr64' 'mand' 0x42+'W'+'R':8 'op' 0:2 'mod':3 0x4:3 'sc':2 0x5:3 0x5:3 0:32"/>
    <Address Name="[r13*'sc:scale'+'mem:mem32']" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr64' 'mand' 0x42+'W'+'R':8 'op' 0:2 'mod':3 0x4:3 'sc':2 0x5:3 0x5:3 'mem':32"/>
    <Address Name="['base:base64b'*'sc:scale']" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr64' 'mand' 0x42+'W'+'R':8 'op' 0:2 'mod':3 0x4:3 'sc':2 'base.Ord':3 0x5:3 0:32"/>
    <Address Name="['base:base64b'*'sc:scale'+'mem:mem32']" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr64' 'mand' 0x42+'W'+'R':8 'op' 0:2 'mod':3 0x4:3 'sc':2 'base.Ord':3 0x5:3 'mem':32"/>
    <Address Name="['seg:segment':r13*'sc:scale']" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr64' 'seg.Prefix' 'mand' 0x42+'W'+'R':8 'op' 0:2 'mod':3 0x4:3 'sc':2 0x5:3 0x5:3 0:32"/>
    <Address Name="['seg:segment':r13*'sc:scale'+'mem:mem32']" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr64' 'seg.Prefix' 'mand' 0x42+'W'+'R':8 'op' 0:2 'mod':3 0x4:3 'sc':2 0x5:3 0x5:3 'mem':32"/>
    <Address Name="['seg:segment':'base:base64b'*'sc:scale']" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr64' 'seg.Prefix' 'mand' 0x42+'W'+'R':8 'op' 0:2 'mod':3 0x4:3 'sc':2 'base.Ord':3 0x5:3 0:32"/>
    <Address Name="['seg:segment':'base:base64b'*'sc:scale'+'mem:mem32']" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr64' 'seg.Prefix' 'mand' 0x42+'W'+'R':8 'op' 0:2 'mod':3 0x4:3 'sc':2 'base.Ord':3 0x5:3 'mem':32"/>




    <Address Name="[rbp+'index:index64b'*'sc:scale'+'z:zero']" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr64' 'mand' 0x41+'W'+'R':8 'op' 1:2 'mod':3 0x4:3 'sc':2 'index.Ord':3 0x5:3 0:8"/>
    <Address Name="[rbp+'index:index64b'+'z:zero']" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr64' 'mand' 0x41+'W'+'R':8 'op' 1:2 'mod':3 0x4:3 0:2 'index.Ord':3 0x5:3 0:8"/>
    <Address Name="[rsp+'index:index64b'*'sc:scale'+'z:zero']" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr64' 'mand' 0x41+'W'+'R':8 'op' 0:2 'mod':3 0x4:3 'sc':2 'index.Ord':3 4:3"/>
    <Address Name="[rsp+'index:index64b'+'z:zero']" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr64' 'mand' 0x41+'W'+'R':8 'op' 0:2 'mod':3 0x4:3 0:2 'index.Ord':3 4:3"/>
    <Address Name="['seg:segment':rbp+'index:index64b'*'sc:scale'+'z:zero']" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr64' 'seg.Prefix' 'mand' 0x41+'W'+'R':8 'op' 1:2 'mod':3 0x4:3 'sc':2 'index.Ord':3 0x5:3 0:8"/>
    <Address Name="['seg:segment':rbp+'index:index64b'+'z:zero']" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr64' 'seg.Prefix' 'mand' 0x41+'W'+'R':8 'op' 1:2 'mod':3 0x4:3 0:2 'index.Ord':3 0x5:3 0:8"/>
    <Address Name="['seg:segment':rsp+'index:index64b'*'sc:scale'+'z:zero']" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr64' 'seg.Prefix' 'mand' 0x41+'W'+'R':8 'op' 0:2 'mod':3 0x4:3 'sc':2 'index.Ord':3 4:3"/>
    <Address Name="['seg:segment':rsp+'index:index64b'+'z:zero']" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr64' 'seg.Prefix' 'mand' 0x41+'W'+'R':8 'op' 0:2 'mod':3 0x4:3 0:2 'index.Ord':3 4:3"/>
    <Address Name="[r13+'index:index64b'*'sc:scale'+'z:zero']" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr64' 'mand' 0x43+'W'+'R':8 'op' 1:2 'mod':3 0x4:3 'sc':2 'index.Ord':3 0x5:3 0:8"/>
    <Address Name="[r13+'index:index64b'+'z:zero']" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr64' 'mand' 0x43+'W'+'R':8 'op' 1:2 'mod':3 0x4:3 0:2 'index.Ord':3 0x5:3 0:8"/>
    <Address Name="['base:base64b'+'index:index64b'*'sc:scale'+'z:zero']" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr64' 'mand' 0x43+'W'+'R':8 'op' 0:2 'mod':3 0x4:3 'sc':2 'index.Ord':3 'base.Ord':3"/>
    <Address Name="['base:base64b'+'index:index64b'+'z:zero']" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr64' 'mand' 0x43+'W'+'R':8 'op' 0:2 'mod':3 0x4:3 0:2 'index.Ord':3 'base.Ord':3"/>
    <Address Name="['seg:segment':r13+'index:index64b'*'sc:scale'+'z:zero']" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr64' 'seg.Prefix' 'mand' 0x43+'W'+'R':8 'op' 1:2 'mod':3 0x4:3 'sc':2 'index.Ord':3 0x5:3 0:8"/>
    <Address Name="['seg:segment':r13+'index:index64b'+'z:zero']" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr64' 'seg.Prefix' 'mand' 0x43+'W'+'R':8 'op' 1:2 'mod':3 0x4:3 0:2 'index.Ord':3 0x5:3 0:8"/>
    <Address Name="['seg:segment':'base:base64b'+'index:index64b'*'sc:scale'+'z:zero']" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr64' 'seg.Prefix' 'mand' 0x43+'W'+'R':8 'op' 0:2 'mod':3 0x4:3 'sc':2 'index.Ord':3 'base.Ord':3"/>
    <Address Name="['seg:segment':'base:base64b'+'index:index64b'+'z:zero']" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr64' 'seg.Prefix' 'mand' 0x43+'W'+'R':8 'op' 0:2 'mod':3 0x4:3 0:2 'index.Ord':3 'base.Ord':3"/>

    <Address Name="[rbp+'index:index64b'*'sc:scale']" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr64' 'mand' 0x41+'W'+'R':8 'op' 1:2 'mod':3 0x4:3 'sc':2 'index.Ord':3 0x5:3 0:8"/>
    <Address Name="[rbp+'index:index64b']" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr64' 'mand' 0x41+'W'+'R':8 'op' 1:2 'mod':3 0x4:3 0:2 'index.Ord':3 0x5:3 0:8"/>
    <Address Name="[rsp+'index:index64b'*'sc:scale']" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr64' 'mand' 0x41+'W'+'R':8 'op' 0:2 'mod':3 0x4:3 'sc':2 'index.Ord':3 4:3"/>
    <Address Name="[rsp+'index:index64b']" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr64' 'mand' 0x41+'W'+'R':8 'op' 0:2 'mod':3 0x4:3 0:2 'index.Ord':3 4:3"/>
    <Address Name="['seg:segment':rbp+'index:index64b'*'sc:scale']" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr64' 'seg.Prefix' 'mand' 0x41+'W'+'R':8 'op' 1:2 'mod':3 0x4:3 'sc':2 'index.Ord':3 0x5:3 0:8"/>
    <Address Name="['seg:segment':rbp+'index:index64b']" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr64' 'seg.Prefix' 'mand' 0x41+'W'+'R':8 'op' 1:2 'mod':3 0x4:3 0:2 'index.Ord':3 0x5:3 0:8"/>
    <Address Name="['seg:segment':rsp+'index:index64b'*'sc:scale']" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr64' 'seg.Prefix' 'mand' 0x41+'W'+'R':8 'op' 0:2 'mod':3 0x4:3 'sc':2 'index.Ord':3 4:3"/>
    <Address Name="['seg:segment':rsp+'index:index64b']" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr64' 'seg.Prefix' 'mand' 0x41+'W'+'R':8 'op' 0:2 'mod':3 0x4:3 0:2 'index.Ord':3 4:3"/>
    <Address Name="[r13+'index:index64b'*'sc:scale']" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr64' 'mand' 0x43+'W'+'R':8 'op' 1:2 'mod':3 0x4:3 'sc':2 'index.Ord':3 0x5:3 0:8"/>
    <Address Name="[r13+'index:index64b']" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr64' 'mand' 0x43+'W'+'R':8 'op' 1:2 'mod':3 0x4:3 0:2 'index.Ord':3 0x5:3 0:8"/>
    <Address Name="['base:base64b'+'index:index64b'*'sc:scale']" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr64' 'mand' 0x43+'W'+'R':8 'op' 0:2 'mod':3 0x4:3 'sc':2 'index.Ord':3 'base.Ord':3"/>
    <Address Name="['base:base64b'+'index:index64b']" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr64' 'mand' 0x43+'W'+'R':8 'op' 0:2 'mod':3 0x4:3 0:2 'index.Ord':3 'base.Ord':3"/>
    <Address Name="['seg:segment':r13+'index:index64b'*'sc:scale']" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr64' 'seg.Prefix' 'mand' 0x43+'W'+'R':8 'op' 1:2 'mod':3 0x4:3 'sc':2 'index.Ord':3 0x5:3 0:8"/>
    <Address Name="['seg:segment':r13+'index:index64b']" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr64' 'seg.Prefix' 'mand' 0x43+'W'+'R':8 'op' 1:2 'mod':3 0x4:3 0:2 'index.Ord':3 0x5:3 0:8"/>
    <Address Name="['seg:segment':'base:base64b'+'index:index64b'*'sc:scale']" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr64' 'seg.Prefix' 'mand' 0x43+'W'+'R':8 'op' 0:2 'mod':3 0x4:3 'sc':2 'index.Ord':3 'base.Ord':3"/>
    <Address Name="['seg:segment':'base:base64b'+'index:index64b']" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr64' 'seg.Prefix' 'mand' 0x43+'W'+'R':8 'op' 0:2 'mod':3 0x4:3 0:2 'index.Ord':3 'base.Ord':3"/>

    <Address Name="[rbp+'index:index64b'*'sc:scale'+'signed:signed8offset']" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr64' 'mand' 0x41+'W'+'R':8 'op' 1:2 'mod':3 0x4:3 'sc':2 'index.Ord':3 0x5:3 'signed.Ord':8"/>
    <Address Name="[rbp+'index:index64b'+'signed:signed8offset']" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr64' 'mand' 0x41+'W'+'R':8 'op' 1:2 'mod':3 0x4:3 0:2 'index.Ord':3 0x5:3 'signed.Ord':8"/>
    <Address Name="[rsp+'index:index64b'*'sc:scale'+'signed:signed8offset']" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr64' 'mand' 0x41+'W'+'R':8 'op' 1:2 'mod':3 0x4:3 'sc':2 'index.Ord':3 4:3 'signed.Ord':8"/>
    <Address Name="[rsp+'index:index64b'+'signed:signed8offset']" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr64' 'mand' 0x41+'W'+'R':8 'op' 1:2 'mod':3 0x4:3 0:2 'index.Ord':3 4:3 'signed.Ord':8"/>
    <Address Name="['seg:segment':rbp+'index:index64b'*'sc:scale'+'signed:signed8offset']" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr64' 'seg.Prefix' 'mand' 0x41+'W'+'R':8 'op' 1:2 'mod':3 0x4:3 'sc':2 'index.Ord':3 0x5:3 'signed.Ord':8"/>
    <Address Name="['seg:segment':rbp+'index:index64b'+'signed:signed8offset']" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr64' 'seg.Prefix' 'mand' 0x41+'W'+'R':8 'op' 1:2 'mod':3 0x4:3 0:2 'index.Ord':3 0x5:3 'signed.Ord':8"/>
    <Address Name="['seg:segment':rsp+'index:index64b'*'sc:scale'+'signed:signed8offset']" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr64' 'seg.Prefix' 'mand' 0x41+'W'+'R':8 'op' 1:2 'mod':3 0x4:3 'sc':2 'index.Ord':3 4:3 'signed.Ord':8"/>
    <Address Name="['seg:segment':rsp+'index:index64b'+'signed:signed8offset']" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr64' 'seg.Prefix' 'mand' 0x41+'W'+'R':8 'op' 1:2 'mod':3 0x4:3 0:2 'index.Ord':3 4:3 'signed.Ord':8"/>
    <Address Name="[r13+'index:index64b'*'sc:scale'+'signed:signed8offset']" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr64' 'mand' 0x43+'W'+'R':8 'op' 1:2 'mod':3 0x4:3 'sc':2 'index.Ord':3 0x5:3 'signed.Ord':8"/>
    <Address Name="[r13+'index:index64b'+'signed:signed8offset']" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr64' 'mand' 0x43+'W'+'R':8 'op' 1:2 'mod':3 0x4:3 0:2 'index.Ord':3 0x5:3 'signed.Ord':8"/>
    <Address Name="['base:base64b'+'index:index64b'*'sc:scale'+'signed:signed8offset']" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr64' 'mand' 0x43+'W'+'R':8 'op' 1:2 'mod':3 0x4:3 'sc':2 'index.Ord':3 'base.Ord':3 'signed.Ord':8"/>
    <Address Name="['base:base64b'+'index:index64b'+'signed:signed8offset']" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr64' 'mand' 0x43+'W'+'R':8 'op' 1:2 'mod':3 0x4:3 0:2 'index.Ord':3 'base.Ord':3 'signed.Ord':8"/>
    <Address Name="['seg:segment':r13+'index:index64b'*'sc:scale'+'signed:signed8offset']" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr64' 'seg.Prefix' 'mand' 0x43+'W'+'R':8 'op' 1:2 'mod':3 0x4:3 'sc':2 'index.Ord':3 0x5:3 'signed.Ord':8"/>
    <Address Name="['seg:segment':r13+'index:index64b'+'signed:signed8offset']" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr64' 'seg.Prefix' 'mand' 0x43+'W'+'R':8 'op' 1:2 'mod':3 0x4:3 0:2 'index.Ord':3 0x5:3 'signed.Ord':8"/>
    <Address Name="['seg:segment':'base:base64b'+'index:index64b'*'sc:scale'+'signed:signed8offset']" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding=" 'addr64' 'seg.Prefix' 'mand' 0x43+'W'+'R':8 'op' 1:2 'mod':3 0x4:3 'sc':2 'index.Ord':3 'base.Ord':3 'signed.Ord':8"/>
    <Address Name="['seg:segment':'base:base64b'+'index:index64b'+'signed:signed8offset']" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr64' 'seg.Prefix' 'mand' 0x43+'W'+'R':8 'op' 1:2 'mod':3 0x4:3 0:2 'index.Ord':3 'base.Ord':3 'signed.Ord':8"/>

    <Address Name="[rbp+'index:index64b'*'sc:scale'+'mem:mem32']" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr64' 'mand' 0x41+'W'+'R':8 'op' 2:2 'mod':3 0x4:3 'sc':2 'index.Ord':3 0x5:3 'mem':32"/>
    <Address Name="[rbp+'index:index64b'+'mem:mem32']" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr64' 'mand' 0x41+'W'+'R':8 'op' 2:2 'mod':3 0x4:3 0:2 'index.Ord':3 0x5:3 'mem':32"/>
    <Address Name="[rsp+'index:index64b'*'sc:scale'+'mem:mem32']" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr64' 'mand' 0x41+'W'+'R':8 'op' 2:2 'mod':3 0x4:3 'sc':2 'index.Ord':3 4:3 'mem':32"/>
    <Address Name="[rsp+'index:index64b'+'mem:mem32']" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr64' 'mand' 0x41+'W'+'R':8 'op' 2:2 'mod':3 0x4:3 0:2 'index.Ord':3 4:3 'mem':32"/>
    <Address Name="['seg:segment':rbp+'index:index64b'*'sc:scale'+'mem:mem32']" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr64' 'seg.Prefix' 'mand' 0x41+'W'+'R':8 'op' 2:2 'mod':3 0x4:3 'sc':2 'index.Ord':3 0x5:3 'mem':32"/>
    <Address Name="['seg:segment':rbp+'index:index64b'+'mem:mem32']" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr64' 'seg.Prefix' 'mand' 0x41+'W'+'R':8 'op' 2:2 'mod':3 0x4:3 0:2 'index.Ord':3 0x5:3 'mem':32"/>
    <Address Name="['seg:segment':rsp+'index:index64b'*'sc:scale'+'mem:mem32']" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr64' 'seg.Prefix' 'mand' 0x41+'W'+'R':8 'op' 2:2 'mod':3 0x4:3 'sc':2 'index.Ord':3 4:3 'mem':32"/>
    <Address Name="['seg:segment':rsp+'index:index64b'+'mem:mem32']" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr64' 'seg.Prefix' 'mand' 0x41+'W'+'R':8 'op' 2:2 'mod':3 0x4:3 0:2 'index.Ord':3 4:3 'mem':32"/>
    <Address Name="[r13+'index:index64b'*'sc:scale'+'mem:mem32']" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr64' 'mand' 0x43+'W'+'R':8 'op' 2:2 'mod':3 0x4:3 'sc':2 'index.Ord':3 0x5:3 'mem':32"/>
    <Address Name="[r13+'index:index64b'+'mem:mem32']" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr64' 'mand' 0x43+'W'+'R':8 'op' 2:2 'mod':3 0x4:3 0:2 'index.Ord':3 0x5:3 'mem':32"/>
    <Address Name="['base:base64b'+'index:index64b'*'sc:scale'+'mem:mem32']" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr64' 'mand' 0x43+'W'+'R':8 'op' 2:2 'mod':3 0x4:3 'sc':2 'index.Ord':3 'base.Ord':3 'mem':32"/>
    <Address Name="['base:base64b'+'index:index64b'+'mem:mem32']" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr64' 'mand' 0x43+'W'+'R':8 'op' 2:2 'mod':3 0x4:3 0:2 'index.Ord':3 'base.Ord':3 'mem':32"/>
    <Address Name="['seg:segment':r13+'index:index64b'*'sc:scale'+'mem:mem32']" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr64' 'seg.Prefix' 'mand' 0x43+'W'+'R':8 'op' 2:2 'mod':3 0x4:3 'sc':2 'index.Ord':3 0x5:3 'mem':32"/>
    <Address Name="['seg:segment':r13+'index:index64b'+'mem:mem32']" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr64' 'seg.Prefix' 'mand' 0x43+'W'+'R':8 'op' 2:2 'mod':3 0x4:3 0:2 'index.Ord':3 0x5:3 'mem':32"/>
    <Address Name="['seg:segment':'base:base64b'+'index:index64b'*'sc:scale'+'mem:mem32']" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr64' 'seg.Prefix' 'mand' 0x43+'W'+'R':8 'op' 2:2 'mod':3 0x4:3 'sc':2 'index.Ord':3 'base.Ord':3 'mem':32"/>
    <Address Name="['seg:segment':'base:base64b'+'index:index64b'+'mem:mem32']" class="rm,frm64,rm8b,rm16b,rm32b,rm64b,mmrm,sserm,rm64bit" Coding="'addr64' 'seg.Prefix' 'mand' 0x43+'W'+'R':8 'op' 2:2 'mod':3 0x4:3 0:2 'index.Ord':3 'base.Ord':3 'mem':32"/>





    <Address Name="'reg:reg8'" Class="rm8,rm8b,rmx,reg8rm" Coding="'op' 3:2 'mod':3 'reg.Ord':3"/>
    <Address Name="'reg:reg16'" Class="rm16,rm16b,rmx,reg16rm" Coding="'op' 3:2 'mod':3 'reg.Ord':3"/>
    <Address Name="'reg:reg32'" Class="rm32,rm32b,rmx,reg32rm" Coding="'op' 3:2 'mod':3 'reg.Ord':3"/>
    <Address Name="'reg:reg64'" Class="rm64,rm64b" Coding="0x48:8 'op' 3:2 'mod':3 'reg.Ord':3"/>
    <Address Name="'reg:reg64d'" Class="reg64rmd" Coding="'op' 3:2 'mod':3 'reg.Ord':3"/>
    <Address Name="'reg:floatreg'" Class="frm, frm64, regfloat" Coding="'op' 3:2 'mod':3 'reg.Ord':3"/>
    <Address Name="'reg:reg8b'" Class="rm8b, reg8b, reg8rmb" Coding="0x41+'reg.R'+'reg.W':8 'op' 3:2 'mod':3 'reg.Ord':3"/>
    <Address Name="'reg:reg16b'" Class="rm16b, reg16b, reg16rmb" Coding="0x41+'reg.R'+'reg.W':8 'op' 3:2 'mod':3 'reg.Ord':3"/>
    <Address Name="'reg:reg32b'" Class="rm32b, reg32b, reg32rmb" Coding="0x41+'reg.R'+'reg.W':8 'op' 3:2 'mod':3 'reg.Ord':3"/>
    <Address Name="'reg:reg64b'" Class="rm64b, reg64b, reg64rmb" Coding="0x41+'reg.R'+'reg.W':8 'op' 3:2 'mod':3 'reg.Ord':3"/>

    <Address Name="'reg:regmm'" Class="mmr, regmmr" Coding="'mand' 'op' 3:2 'mod':3 'reg.Ord':3"/>
    <Address Name="'reg:regsse'" Class="mmx, regmmx" Coding="'mand' 'op' 3:2 'mod':3 'reg.Ord':3"/>
    <Address Name="'reg:regsseb'" Class="mmxb, regmmxb" Coding="'mand' 0x41:8 'op' 3:2 'mod':3 'reg.Ord':3"/>


    <Opcode Class="single">
      <Operands Name="empty" Coding="'op'"/>
    </Opcode>
    <Opcode Class="twobyte">
      <Operands Name="empty" Coding="0x0f:8 'op'"/>
    </Opcode>
    <Opcode Class="reg16rmx">
      <Operands Name="'modreg:reg16', {word} 'rm:rm16'" op="'data16' 'op1'" mod="'modreg.Ord" R="modreg.R" W="modreg.W" />
      <Operands Name="'modreg:reg32', {dword} 'rm:rm32'" op="'data32' 'op1'" mod="'modreg.Ord" R="modreg.R" W="modreg.W" />
      <Operands Name="'modreg:reg16', {word} 'rm:rm16b'" op="'data16' 'op1'" mod="'modreg.Ord" R="modreg.R" W="modreg.W"/>
      <Operands Name="'modreg:reg32', {dword} 'rm:rm32b'" op="'data32' 'op1'" mod="'modreg.Ord" R="modreg.R" W="modreg.W"/>
      <Operands Name="'modreg:reg16b', {word} 'rm:rm16b'" op="'data16' 'op1'" mod="'modreg.Ord" R="modreg.R" W="modreg.W"/>
      <Operands Name="'modreg:reg32b', {dword} 'rm:rm32b'" op="'data32' 'op1'" mod="'modreg.Ord" R="modreg.R" W="modreg.W"/>
      <Operands Name="'modreg:reg64b', {qword} 'rm:rm64b'" op="'data64' 'op1'" mod="'modreg.Ord" R="modreg.R" W="modreg.W"/>
    </Opcode>
    <Opcode Class="reg16rmnrx">
      <Operands Name="'modreg:reg16', {word} 'rm:rm16'" op="'data16' 'op1'" mod="'modreg.Ord" R="modreg.R" W="modreg.W"/>
      <Operands Name="'modreg:reg32', {dword} 'rm:rm32'" op="'data32' 'op1'" mod="'modreg.Ord" R="modreg.R" W="modreg.W"/>
      <Operands Name="'modreg:reg16', {word} 'rm:rm16b'" op="'data16' 'op1'" mod="'modreg.Ord" R="modreg.R" W="modreg.W"/>
      <Operands Name="'modreg:reg32', {dword} 'rm:rm32b'" op="'data32' 'op1'" mod="'modreg.Ord" R="modreg.R" W="modreg.W"/>
      <Operands Name="'modreg:reg16b', {word} 'rm:rm16b'" op="'data16' 'op1'" mod="'modreg.Ord" R="modreg.R" W="modreg.W"/>
      <Operands Name="'modreg:reg32b', {dword} 'rm:rm32b'" op="'data32' 'op1'" mod="'modreg.Ord" R="modreg.R" W="modreg.W"/>
      <Operands Name="'modreg:reg64b', {qword} 'rm:rm64b'" op="'data64' 'op1'" mod="'modreg.Ord" R="modreg.R" W="modreg.W"/>
    </Opcode>
    <Opcode Class="math">
      <Operands Name="al, {byte} 'omem:mem8'" Coding="'op1':8 'omem':8"/>
      <Operands Name="ax, {word} 'omem:mem16'" Coding="'data16' 'op1'+1:8 'omem':16"/>
      <Operands Name="eax, {dword} 'omem:mem32'" Coding="'data32' 'op1'+1:8 'omem':32"/>
      <Operands Name="rax, {dword} 'omem:mem32'" Coding="0x48:8 'data64' 'op1'+1:8 'omem':32"/>
      <Operands Name="'modreg:reg8', {byte} 'rm:rm8'" mod="'modreg.Ord" R="modreg.R" W="modreg.W" op="'op2'+2:8" />
      <Operands Name="'modreg:reg16', {word} 'rm:rm16'" mod="'modreg.Ord" R="modreg.R" W="modreg.W" op="'data16' 'op2'+3:8" />
      <Operands Name="'modreg:reg32', {dword} 'rm:rm32'" mod="'modreg.Ord" R="modreg.R" W="modreg.W" op="'data32' 'op2'+3:8" />
      <Operands Name="'modreg:reg8b', {byte} 'rm:rm8b'" mod="'modreg.Ord" R="modreg.R" W="modreg.W" op="'op2'+2:8" />
      <Operands Name="'modreg:reg16b', {word} 'rm:rm16b'" mod="'modreg.Ord" R="modreg.R" W="modreg.W" op="'data16' 'op2'+3:8" />
      <Operands Name="'modreg:reg32b', {dword} 'rm:rm32b'" mod="'modreg.Ord" R="modreg.R" W="modreg.W" op="'data32' 'op2'+3:8" />
      <Operands Name="'modreg:reg64b', {qword} 'rm:rm64b'" mod="'modreg.Ord" R="modreg.R" W="modreg.W" op="'data64' 'op2'+3:8" />
      <Operands Name="{byte} 'rm:rm8', 'modreg:reg8'" mod="'modreg.Ord" R="modreg.R" W="modreg.W" op="'op2':8" />
      <Operands Name="{word} 'rm:rm16', 'modreg:reg16'" mod="'modreg.Ord" R="modreg.R" W="modreg.W" op="'data16' 'op2'+1:8" />
      <Operands Name="{dword} 'rm:rm32', 'modreg:reg32'" mod="'modreg.Ord" R="modreg.R" W="modreg.W" op="'data32' 'op2'+1:8" />
      <Operands Name="{byte} 'rm:rm8b', 'modreg:reg8b'" mod="'modreg.Ord" R="modreg.R" W="modreg.W" op="'op2':8" />
      <Operands Name="{word} 'rm:rm16b', 'modreg:reg16b'" mod="'modreg.Ord" R="modreg.R" W="modreg.W" op="'data16' 'op2'+1:8" />
      <Operands Name="{dword} 'rm:rm32b', 'modreg:reg32b'" mod="'modreg.Ord" R="modreg.R" W="modreg.W" op="'data32' 'op2'+1:8" />
      <Operands Name="{qword} 'rm:rm64b', 'modreg:reg64b'" mod="'modreg.Ord" R="modreg.R" W="modreg.W" op="'data64' 'op2'+1:8" />
      <Operands Name="byte 'rm:rm8',  {byte} 'omem:mem8'" op="0x80:8" Coding="native 'omem':8"/>
      <Operands Name="word 'rm:rm16', byte 'signedimm:signed8'" op="0x83:8" Coding="'data16' native 'signedimm':8"/>
      <Operands Name="word 'rm:rm16', {word} 'omem:mem16'" op="0x81:8" Coding="'data16' native 'omem':16"/>
      <Operands Name="dword 'rm:rm32', byte 'signedimm:signed8'" op="0x83:8" Coding="'data32' native 'signedimm':8"/>
      <Operands Name="dword 'rm:rm32', {dword} 'omem:mem32'" op="0x81:8" Coding="'data32' native 'omem':32"/>
      <Operands Name="qword 'rm:rm64', byte 'signedimm:signed8'" op="0x83:8" Coding="'data32' native 'signedimm':8"/>
      <Operands Name="qword 'rm:rm64', {qword} 'omem:mem32'" op="0x81:8" Coding="'data32' native 'omem':32"/>
      <Operands Name="byte 'rm:rm8b',  {byte} 'omem:mem8'" op="0x80:8" Coding="native 'omem':8"/>
      <Operands Name="word 'rm:rm16b', byte 'signedimm:signed8'" op="0x83:8" Coding="'data16' native 'signedimm':8"/>
      <Operands Name="word 'rm:rm16b', {word} 'omem:mem16'" op="0x81:8" Coding="'data16' native 'omem':16"/>
      <Operands Name="dword 'rm:rm32b', byte 'signedimm:signed8'" op="0x83:8" Coding="'data32' native 'signedimm':8"/>
      <Operands Name="dword 'rm:rm32b', {qword} 'omem:mem32'" op="0x81:8" Coding="'data32' native 'omem':32"/>
      <Operands Name="qword 'rm:rm64b', byte 'signedimm:signed8'" op="0x83:8" Coding="'data32' native 'signedimm':8"/>
      <Operands Name="qword 'rm:rm64b', {qword} 'omem:mem32'" op="0x81:8" Coding="'data32' native 'omem':32"/>
      <Operands Name="'modreg:reg8rm', {byte} 'omem:mem8'" op="0x80:8" Coding="native 'omem':8"/>
      <Operands Name="'modreg:reg8rmb', {byte} 'omem:mem8'" op="0x80:8" Coding="native 'omem':8"/>
      <Operands Name="'modreg:reg16rm', byte 'signedimm:signed8'" op="0x83:8" Coding="'data16' native 'signedimm':8"/>
      <Operands Name="'modreg:reg16rm', {word} 'omem:mem16'" op="0x81:8" Coding="'data16' native 'omem':16"/>
      <Operands Name="'modreg:reg16rmb', byte 'signedimm:signed8'" op="0x83:8" Coding="'data16' native 'signedimm':8"/>
      <Operands Name="'modreg:reg16rmb', {word} 'omem:mem16'" op="0x81:8" Coding="'data16' native 'omem':16"/>
      <Operands Name="'modreg:reg32rm', byte 'signedimm:signed8'" op="0x83:8" Coding="'data32' native 'signedimm':8"/>
      <Operands Name="'modreg:reg32rm', {dword} 'omem:mem32'" op="0x81:8" Coding="'data32' native 'omem':32"/>
      <Operands Name="'modreg:reg32rmb', byte 'signedimm:signed8'" op="0x83:8" Coding="'data32' native 'signedimm':8"/>
      <Operands Name="'modreg:reg32rmb', {dword} 'omem:mem32'" op="0x81:8" Coding="'data32' native 'omem':32"/>
      <Operands Name="'modreg:reg64rmb', byte 'signedimm:signed8'" op="0x83:8" Coding="0x48:8 'data64' native 'signedimm':8"/>
      <Operands Name="'modreg:reg64rmb', {qword} 'omem:mem64'" op="0x81:8" Coding="0x48:8 'data64' native 'omem':32"/>
    </Opcode>
    <Opcode Class="bit">
      <Operands Name="{word} 'rm:rm16', {word} 'omem:mem8'" op="'op1'" Coding="'data16' native 'omem':8"/>
      <Operands Name="{dword} 'rm:rm32', {dword} 'omem:mem8'" op="'op1'" Coding="'data32' native 'omem':8"/>
      <Operands Name="{word} 'rm:rm16b', {word} 'omem:mem8'" op="'op1'" Coding="'data16' native 'omem':8"/>
      <Operands Name="{dword} 'rm:rm32b', {dword} 'omem:mem8'" op="'op1'" Coding="'data32' native 'omem':8"/>
      <Operands Name="{word} 'rm:rm16', 'modreg:reg16'" op="'data16' 'op2'" mod="'modreg.Ord" R="modreg.R" W="modreg.W" />
      <Operands Name="{dword} 'rm:rm32', 'modreg:reg32'" op="'data32' 'op2'" mod="'modreg.Ord" R="modreg.R" W="modreg.W" />
      <Operands Name="{word} 'rm:rm16b', 'modreg:reg16b'" op="'data16' 'op2'" mod="'modreg.Ord" R="modreg.R" W="modreg.W" />
      <Operands Name="{dword} 'rm:rm32b', 'modreg:reg32b'" op="'data32' 'op2'" mod="'modreg.Ord" R="modreg.R" W="modreg.W" />
      <Operands Name="{qword} 'rm:rm64b', 'modreg:reg64b'" op="'data32' 'op2'" mod="'modreg.Ord" R="modreg.R" W="modreg.W" />
    </Opcode>
    <Opcode Class="incdec">
      <Operands Name="'modreg:reg8rm'" op="0xfe:8"/>
      <Operands Name="'modreg:reg16'" Coding="'data16' 'op':5 'modreg.Ord':3"/>
      <Operands Name="'modreg:reg32'" Coding="'data32' 'op':5 'modreg.Ord':3"/>
      <Operands Name="'modreg:reg8rmb'" op="0xfe:8"/>
      <Operands Name="'modreg:reg16b'" Coding="'data16' 'op':5 'modreg.Ord':3"/>
      <Operands Name="'modreg:reg32b'" Coding="'data32' 'op':5 'modreg.Ord':3"/>
      <Operands Name="'modreg:reg64b'" Coding="0x48:8 'data64' 'op':5 'modreg.Ord':3"/>
      <Operands Name="byte 'rm:rm8'" op="0xfe:8" />
      <Operands Name="word 'rm:rm16'" op="'data16' 0xff:8" />
      <Operands Name="dword 'rm:rm32'" op="'data32' 0xff:8" />
      <Operands Name="byte 'rm:rm8b'" op="0xfe:8" />
      <Operands Name="word 'rm:rm16b'" op="'data16' 0xff:8" />
      <Operands Name="dword 'rm:rm32b'" op="'data32' 0xff:8" />
      <Operands Name="qword 'rm:rm64b'" op="'data64' 0xff:8" />
    </Opcode>
    <Opcode Class="sizedrm">
      <Operands Name="'rm:reg8rm'" op="0xf6:8 " />
      <Operands Name="'rm:reg16rm'" op="'data16' 0xf7:8" />
      <Operands Name="'rm:reg32rm'" op="'data32' 0xf7:8" />
      <Operands Name="'rm:reg8rmb'" op="0xf6:8 " />
      <Operands Name="'rm:reg16rmb'" op="'data16' 0xf7:8" />
      <Operands Name="'rm:reg32rmb'" op="'data32' 0xf7:8" />
      <Operands Name="'rm:reg64rmb'" op="'data64' 0xf7:8" />
      <Operands Name="byte 'rm:rm8'" op="0xf6:8 " />
      <Operands Name="word 'rm:rm16'" op="'data16' 0xf7:8" />
      <Operands Name="dword 'rm:rm32'" op="'data32' 0xf7:8" />
      <Operands Name="byte 'rm:rm8b'" op="0xf6:8 " />
      <Operands Name="word 'rm:rm16b'" op="'data16' 0xf7:8" />
      <Operands Name="dword 'rm:rm32b'" op="'data32' 0xf7:8" />
      <Operands Name="dword 'rm:rm64b'" op="'data64' 0xf7:8" />
    </Opcode>
    <Opcode Class="floatmath">
      <Operands Name="st0,'reg:floatreg'" Coding="'op1' 3:2 'mod':3 'reg.Ord':3"/>
      <Operands Name="'reg:floatreg', st0" Coding="'op1'+4 3:2 'mod1':3 'reg.Ord':3"/>
      <Operands Name="'reg:floatreg'" Coding="'op1' 3:2 'mod1':3 'reg.Ord':3"/>
      <Operands Name="dword 'reg:frm'" op="'op1'"/>
      <Operands Name="qword 'reg:frm'" op="'op1'+4"/>
      <Operands Name="dword 'reg:frm64'" op="'op1'"/>
      <Operands Name="qword 'reg:frm64'" op="'op1'+4"/>
    </Opcode>
    <Opcode Class="floatmathp">
      <Operands Name="'reg:floatreg',st0" Coding="'op' 3:2 'mod':3 'reg.Ord':3"/>
      <Operands Name="'reg:floatreg'" Coding="'op' 3:2 'mod':3 'reg.Ord':3"/>
      <Operands Name="empty" Coding="'op' 3:2 'mod':3 1:3"/>
    </Opcode>
    <Opcode Class="floatimath">
      <Operands Name="word 'rm:rm'" op="'op1'+4:8" />
      <Operands Name="dword 'rm:rm'" op="'op1':8" />
      <Operands Name="word 'rm:rm64'" op="'op1'+4:8" />
      <Operands Name="dword 'rm:rm64'" op="'op1':8" />
    </Opcode>
    <Opcode Class="fbld">
      <Operands Name="{ tword } 'rm:rmx'" />
    </Opcode>
    <Opcode Class="branch">
      <Operands Name="short 'rel:rel8'" Coding="0x7:4 'sel':4 'rel':8"/>
      <Operands Name="near 'rel:rel16n'" Coding="'data16' 0x0f 0x8:4 'sel':4 'rel':16"/>
      <Operands Name="near 'rel:rel32'" Coding="'data32' 0x0f 0x8:4 'sel':4 'rel':32"/>
      <Operands Name="'rel:rel16'" Coding="'data16' 0x0f 0x8:4 'sel':4 'rel':16"/>
      <Operands Name="'rel:rel32'" Coding="'data32' 0x0f 0x8:4 'sel':4 'rel':32"/>
    </Opcode>
    <Opcode Class="cmov">
      <Operands Name="'modreg:reg16', {word}'rm:rm16'" op="'data16' 0x0f:8 0x4:4 'sel':4" mod="'modreg.Ord" R="modreg.R" W="modreg.W" />
      <Operands Name="'modreg:reg32', {dword}'rm:rm32'" op="'data32' 0x0f:8 0x4:4 'sel':4" mod="'modreg.Ord" R="modreg.R" W="modreg.W" />
      <Operands Name="'modreg:reg16b', {word}'rm:rm16b'" op="'data16' 0x0f:8 0x4:4 'sel':4" mod="'modreg.Ord" R="modreg.R" W="modreg.W" />
      <Operands Name="'modreg:reg32b', {dword}'rm:rm32b'" op="'data32' 0x0f:8 0x4:4 'sel':4" mod="'modreg.Ord" R="modreg.R" W="modreg.W" />
      <Operands Name="'modreg:reg64b', {qword}'rm:rm64b'" op="'data64' 0x0f:8 0x4:4 'sel':4" mod="'modreg.Ord" R="modreg.R" W="modreg.W" />
    </Opcode>
    <Opcode Class="set">
      <Operands Name="{byte}'rm:rm8'" op="0x0f:8 0x9:4 'sel':4" mod="0"/>
      <Operands Name="{byte}'rm:rm8b'" op="0x0f:8 0x9:4 'sel':4" mod="0"/>
    </Opcode>
    <Opcode Class="movx">
      <Operands Name="'modreg:reg16','rm:reg8rm'" op="'data16' 0x0f:8 'op1':8" mod="'modreg.Ord" R="modreg.R" W="modreg.W" />
      <Operands Name="'modreg:reg32','rm:reg8rm'" op="'data32' 0x0f:8 'op1':8" mod="'modreg.Ord" R="modreg.R" W="modreg.W" />
      <Operands Name="'modreg:reg32','rm:reg16rm'" op="'data32' 0x0f:8 'op1'+1:8" mod="'modreg.Ord" R="modreg.R" W="modreg.W" />
      <Operands Name="'modreg:reg16',byte 'rm:rm8'" op="'data16' 0x0f:8 'op1':8" mod="'modreg.Ord" R="modreg.R" W="modreg.W" />
      <Operands Name="'modreg:reg32',byte 'rm:rm16'" op="'data32' 0x0f:8 'op1':8" mod="'modreg.Ord" R="modreg.R" W="modreg.W" />
      <Operands Name="'modreg:reg32',word 'rm:rm32'" op="'data32' 0x0f:8 'op1'+1:8" mod="'modreg.Ord" R="modreg.R" W="modreg.W" />
      <Operands Name="'modreg:reg16b','rm:reg8rmb'" op="'data16' 0x0f:8 'op1':8" mod="'modreg.Ord" R="modreg.R" W="modreg.W" />
      <Operands Name="'modreg:reg32b','rm:reg8rmb'" op="'data32' 0x0f:8 'op1':8" mod="'modreg.Ord" R="modreg.R" W="modreg.W" />
      <Operands Name="'modreg:reg32b','rm:reg16rmb'" op="'data32' 0x0f:8 'op1'+1:8" mod="'modreg.Ord" R="modreg.R" W="modreg.W" />
      <Operands Name="'modreg:reg64b','rm:reg8rmb'" op="'data64' 0x0f:8 'op1':8" mod="'modreg.Ord" R="modreg.R" W="modreg.W" />
      <Operands Name="'modreg:reg64b','rm:reg16rmb'" op="'data64' 0x0f:8 'op1'+1:8" mod="'modreg.Ord" R="modreg.R" W="modreg.W" />
      <Operands Name="'modreg:reg64b','rm:reg32rmb'" op="'data64' 0x0f:8 'op1'+1:8" mod="'modreg.Ord" R="modreg.R" W="modreg.W" />
      <Operands Name="'modreg:reg16b',byte 'rm:rm8b'" op="'data16' 0x0f:8 'op1':8" mod="'modreg.Ord" R="modreg.R" W="modreg.W" />
      <Operands Name="'modreg:reg32b',byte 'rm:rm16b'" op="'data32' 0x0f:8 'op1':8" mod="'modreg.Ord" R="modreg.R" W="modreg.W" />
      <Operands Name="'modreg:reg32b',word 'rm:rm32b'" op="'data32' 0x0f:8 'op1'+1:8" mod="'modreg.Ord" R="modreg.R" W="modreg.W" />
      <Operands Name="'modreg:reg64b',byte 'rm:rm8b'" op="'data64' 0x0f:8 'op1':8" mod="'modreg.Ord" R="modreg.R" W="modreg.W" />
      <Operands Name="'modreg:reg64b',word 'rm:rm16b'" op="'data64' 0x0f:8 'op1'+1:8" mod="'modreg.Ord" R="modreg.R" W="modreg.W" />
      <Operands Name="'modreg:reg64b',dword 'rm:rm32b'" op="'data64' 0x0f:8 'op1'+1:8" mod="'modreg.Ord" R="modreg.R" W="modreg.W" />
    </Opcode>
    <Opcode Class="shift">
      <Operands Name="'modreg:reg8rm', 'one:one'" op="0xd0:8" />
      <Operands Name="'modreg:reg8rm', 'omem:mem8'" op="0xc0:8" Coding="native 'omem':8" />
      <Operands Name="'modreg:reg8rm', cl" op="0xd2:8" />
      <Operands Name="'modreg:reg8rmb', 'one:one'" op="0xd0:8" />
      <Operands Name="'modreg:reg8rmb', 'omem:mem8'" op="0xc0:8" Coding="native 'omem':8" />
      <Operands Name="'modreg:reg8rmb', cl" op="0xd2:8" />
      <Operands Name="byte 'rm:rm8', {byte}'one:one'" op="0xd0:8" />
      <Operands Name="byte 'rm:rm8',{byte} 'omem:mem8'" op="0xc0:8" Coding="native 'omem':8"/>
      <Operands Name="byte 'rm:rm8',cl" op="0xd2:8" />
      <Operands Name="byte 'rm:rm8b', {byte}'one:one'" op="0xd0:8" />
      <Operands Name="byte 'rm:rm8b',{byte} 'omem:mem8'" op="0xc0:8" Coding="native 'omem':8"/>
      <Operands Name="byte 'rm:rm8b',cl" op="0xd2:8" />
      <Operands Name="'modreg:reg16rm', 'one:one'" op="'data16' 0xd1:8" />
      <Operands Name="'modreg:reg16rm', 'omem:mem8'" op="'data16' 0xc1:8" Coding="native 'omem':8"/>
      <Operands Name="'modreg:reg16rm', cl" op="'data16' 0xd3:8" />
      <Operands Name="'modreg:reg16rmb', 'one:one'" op="'data16' 0xd1:8" />
      <Operands Name="'modreg:reg16rmb', 'omem:mem8'" op="'data16' 0xc1:8" Coding="native 'omem':8"/>
      <Operands Name="'modreg:reg16rmb', cl" op="'data16' 0xd3:8" />
      <Operands Name="word 'rm:rm16', {byte}'one:one'" op="'data16' 0xd1:8" />
      <Operands Name="word 'rm:rm16',{byte} 'omem:mem8'" op="'data16' 0xc1:8" Coding="native 'omem':8"/>
      <Operands Name="word 'rm:rm16',cl" op="'data16' 0xd3:8" />
      <Operands Name="word 'rm:rm16b', {byte}'one:one'" op="'data16' 0xd1:8" />
      <Operands Name="word 'rm:rm16b',{byte} 'omem:mem8'" op="'data16' 0xc1:8" Coding="native 'omem':8"/>
      <Operands Name="word 'rm:rm16b',cl" op="'data16' 0xd3:8" />
      <Operands Name="'modreg:reg32rm', 'one:one'" op="'data32' 0xd1:8" />
      <Operands Name="'modreg:reg32rm', {byte} 'omem:mem8'" op="'data32' 0xc1:8" Coding="native 'omem':8"/>
      <Operands Name="'modreg:reg32rm', cl" op="'data32' 0xd3:8" />
      <Operands Name="'modreg:reg32rmb', 'one:one'" op="'data32' 0xd1:8" />
      <Operands Name="'modreg:reg32rmb', {byte} 'omem:mem8'" op="'data32' 0xc1:8" Coding="native 'omem':8"/>
      <Operands Name="'modreg:reg32rmb', cl" op="'data32' 0xd3:8" />
      <Operands Name="dword 'rm:rm32',{byte} 'one:one'" op="'data32' 0xd1:8" />
      <Operands Name="dword 'rm:rm32',{byte}'omem:mem8'" op="'data32' 0xc1:8" Coding="native 'omem':8"/>
      <Operands Name="dword 'rm:rm32',cl" op="'data32' 0xd3:8" />
      <Operands Name="dword 'rm:rm32b',{byte} 'one:one'" op="'data32' 0xd1:8" />
      <Operands Name="dword 'rm:rm32b',{byte}'omem:mem8'" op="'data32' 0xc1:8" Coding="native 'omem':8"/>
      <Operands Name="dword 'rm:rm32b',cl" op="'data32' 0xd3:8" />
      <Operands Name="qword 'rm:rm64',{byte} 'one:one'" op="'data64' 0xd1:8" />
      <Operands Name="qword 'rm:rm64',{byte}'omem:mem8'" op="'data64' 0xc1:8" Coding="native 'omem':8"/>
      <Operands Name="qword 'rm:rm64',cl" op="'data64' 0xd3:8" />
      <Operands Name="qword 'rm:rm64b',{byte} 'one:one'" op="'data64' 0xd1:8" />
      <Operands Name="qword 'rm:rm64b',{byte}'omem:mem8'" op="'data64' 0xc1:8" Coding="native 'omem':8"/>
      <Operands Name="qword 'rm:rm64b',cl" op="'data64' 0xd3:8" />
    </Opcode>
    <Opcode Class="regshift">
      <Operands Name="{word}'rm:rm16', 'modreg:reg16', 'omem:mem8'" op="'data16' 0x0f:8 'op1':8" mod="'modreg.Ord" R="modreg.R" W="modreg.W" Coding="native 'omem':8"/>
      <Operands Name="{word}'rm:rm16', 'modreg:reg16', cl" op="'data16' 0x0f:8 'op1'+1:8" mod="'modreg.Ord" R="modreg.R" W="modreg.W" />
      <Operands Name="{word}'rm:rm16b', 'modreg:reg16b', 'omem:mem8'" op="'data16' 0x0f:8 'op1':8" mod="'modreg.Ord" R="modreg.R" W="modreg.W" Coding="native 'omem':8"/>
      <Operands Name="{word}'rm:rm16b', 'modreg:reg16b', cl" op="'data16' 0x0f:8 'op1'+1:8" mod="'modreg.Ord" R="modreg.R" W="modreg.W" />
      <Operands Name="{dword}'rm:rm32', 'modreg:reg32', 'omem:mem8'" op="'data32' 0x0f:8 'op1':8" mod="'modreg.Ord" R="modreg.R" W="modreg.W" Coding="native 'omem':8" />
      <Operands Name="{dword}'rm:rm32', 'modreg:reg32', cl" op="'data32' 0x0f:8 'op1'+1:8" mod="'modreg.Ord" R="modreg.R" W="modreg.W" />
      <Operands Name="{dword}'rm:rm32b', 'modreg:reg32b', 'omem:mem8'" op="'data32' 0x0f:8 'op1':8" mod="'modreg.Ord" R="modreg.R" W="modreg.W" Coding="native 'omem':8" />
      <Operands Name="{dword}'rm:rm32b', 'modreg:reg32b', cl" op="'data32' 0x0f:8 'op1'+1:8" mod="'modreg.Ord" R="modreg.R" W="modreg.W" />
      <Operands Name="{qword}'rm:rm64b', 'modreg:reg64b', 'omem:mem8'" op="'data32' 0x0f:8 'op1':8" mod="'modreg.Ord" R="modreg.R" W="modreg.W" Coding="native 'omem':8" />
      <Operands Name="{qword}'rm:rm64b', 'modreg:reg64b', cl" op="'data32' 0x0f:8 'op1'+1:8" mod="'modreg.Ord" R="modreg.R" W="modreg.W" />
    </Opcode>
    <Opcode Class="nostrictrm">
      <Operands Name="'rm:rm'" />
    </Opcode>
    <Opcode Class="ssemmxrm">
      <Operands Name="'modreg:regsse', 'rm:sserm'" mod="'modreg.Ord" R="modreg.R" W="modreg.W" />
      <Operands Name="'modreg:regsseb', 'rm:ssermb'" mod="'modreg.Ord" R="modreg.R" W="modreg.W" />
    </Opcode>
    <Opcode Class="ssemove">
      <Operands Name="'modreg:regsse', 'rm:sserm'" op="0x0f:8 'op1'" mod="'modreg.Ord" R="modreg.R" W="modreg.W" />
      <Operands Name="'modreg:regsseb', 'rm:sserm'" op="0x0f:8 'op1'" mod="'modreg.Ord" R="modreg.R" W="modreg.W" />
      <Operands Name="'rm:sserm', 'modreg:regsse'" op="0x0f:8 'op1'+1:8" mod="'modreg.Ord" R="modreg.R" W="modreg.W" />
      <Operands Name="'rm:ssermb', 'modreg:regsseb'" op="0x0f:8 'op1'+1:8" mod="'modreg.Ord" R="modreg.R" W="modreg.W" />
    </Opcode>
    <Opcode Class="ssemove2">
      <Operands Name="'modreg:regsse', 'rm:sserm'" op="0x0f:8 'op1'" mod="'modreg.Ord" R="modreg.R" W="modreg.W" />
      <Operands Name="'modreg:regsseb', 'rm:sserm'" op="0x0f:8 'op1'" mod="'modreg.Ord" R="modreg.R" W="modreg.W" />
      <Operands Name="'rm:sserm', 'modreg:regsse'" op="0x0f:8 'op1'+0x10:8" mod="'modreg.Ord" R="modreg.R" W="modreg.W" />
      <Operands Name="'rm:ssermb', 'modreg:regsseb'" op="0x0f:8 'op1'+0x10:8" mod="'modreg.Ord" R="modreg.R" W="modreg.W" />
    </Opcode>
    <Opcode Class="ssemove3">
      <Operands Name="'modreg:regsse', 'rm:rm'" op="0x0f:8 'op1'" mod="'modreg.Ord" R="modreg.R" W="modreg.W" />
      <Operands Name="'modreg:regsseb', 'rm:mm'" op="0x0f:8 'op1'" mod="'modreg.Ord" R="modreg.R" W="modreg.W" />
      <Operands Name="'rm:rm', 'modreg:regsse'" op="0x0f:8 'op1'+1:8" mod="'modreg.Ord" R="modreg.R" W="modreg.W" />
      <Operands Name="'rm:rmb', 'modreg:regsseb'" op="0x0f:8 'op1'+1:8" mod="'modreg.Ord" R="modreg.R" W="modreg.W" />
    </Opcode>
    <Opcode Class="mmsserm">
      <Operands Name="'modreg:regmm', 'rm:sserm'" mod="'modreg.Ord" R="modreg.R" W="modreg.W" />
      <Operands Name="'modreg:regmmb', 'rm:ssermb'" mod="'modreg.Ord" R="modreg.R" W="modreg.W" />
    </Opcode>
    <Opcode Class="ssemmrm">
      <Operands Name="'modreg:regsse', 'rm:mmrm'" mod="'modreg.Ord" R="modreg.R" W="modreg.W" />
      <Operands Name="'modreg:regsseb', 'rm:mmrm'" mod="'modreg.Ord" R="modreg.R" W="modreg.W" />
    </Opcode>
    <Opcode Class="regsse">
      <Operands Name="'modreg:reg32', 'rm:sserm'" mod="'modreg.Ord" R="modreg.R" W="modreg.W" />
      <Operands Name="'modreg:reg32b', 'rm:ssermb'" mod="'modreg.Ord" R="modreg.R" W="modreg.W" />
      <Operands Name="'modreg:reg64b', 'rm:ssermb'" mod="'modreg.Ord" R="modreg.R" W="modreg.W" />
    </Opcode>
    <Opcode Class="sserm">
      <Operands Name="'modreg:regsse', dword 'rm:rm32'" mod="'modreg.Ord" R="modreg.R" W="modreg.W" />
      <Operands Name="'modreg:regsseb', dword 'rm:rm32b'" mod="'modreg.Ord" R="modreg.R" W="modreg.W" />
      <Operands Name="'modreg:regsse', qword 'rm:rm64'" mod="'modreg.Ord" R="modreg.R" W="modreg.W" />
      <Operands Name="'modreg:regsseb', qword 'rm:rm64b'" mod="'modreg.Ord" R="modreg.R" W="modreg.W" />
    </Opcode>
    <Opcode Class="ssepack">
      <Operands Name="'modreg:regmm', 'rm:mmrm'" mand="" mod="'modreg.Ord" R="modreg.R" W="modreg.W" />
      <Operands Name="'modreg:regsse', 'rm:sserm'" mand="0x66:8" mod="'modreg.Ord" R="modreg.R" W="modreg.W" />
      <Operands Name="'modreg:regsseb', 'rm:ssermb'" mand="0x66:8" mod="'modreg.Ord" R="modreg.R" W="modreg.W" />
    </Opcode>"
    <Opcode Class="ssepshu">
      <Operands Name="'modreg:regsse', 'rm:sserm', 'imm:mem8'" mod="'modreg.Ord" R="modreg.R" W="modreg.W" Coding="native 'imm':8"/>
      <Operands Name="'modreg:regsseb', 'rm:ssermb', 'imm:mem8'" mod="'modreg.Ord" R="modreg.R" W="modreg.W" Coding="native 'imm':8" />
    </Opcode>
    <Opcode Class="sseps">
      <Operands Name="'modreg:regmm', 'imm:mem8'" op="0x0f:8 'op1'" mand="" mod="'mod1'" Coding="native 'imm':8" />
      <Operands Name="'modreg:regsse', 'imm:mem8'" op="0x0f:8 'op1'" mand="0x66:8" mod="'mod1'"  Coding="native 'imm':8"/>
      <Operands Name="'modreg:regsseb', 'imm:mem8'" op="0x0f:8 'op1'" mand="0x66:8" mod="'mod1'"  Coding="native 'imm':8"/>
      <Operands Name="'modreg:regmm', 'rm:mmrm'" mand="" op="0x0f:8 'op2'" mod="'modreg.Ord'" R="modreg.R'" W="modreg.W" />
      <Operands Name="'modreg:regsse', 'rm:sserm'" mand="0x66:8" op="0x0f:8 'op2'" mod="'modreg.Ord" R="modreg.R" W="modreg.W" />
      <Operands Name="'modreg:regsseb', 'rm:ssermb'" mand="0x66:8" op="0x0f:8 'op2" mod="'modreg.Ord" R="modreg.R" W="modreg.W" />
    </Opcode>
    <Opcode Class="sseimm">
      <Operands Name="'modreg:regsse', 'rm:sserm', 'imm:mem8'" mod="'modreg.Ord" R="modreg.R" W="modreg.W" Coding="native 'imm':8"/>
      <Operands Name="'modreg:regsseb', 'rm:ssermb', 'imm:mem8'" mod="'modreg.Ord" R="modreg.R" W="modreg.W" Coding="native 'imm':8"/>
    </Opcode>
    <Opcode Class="mmimm">
      <Operands Name="'modreg:regmm', 'rm:mmrm', 'imm:mem8'" mod="'modreg.Ord" R="modreg.R" W="modreg.W" Coding="native 'imm':8"/>
    </Opcode>

    <Opcode Name="aaa" op="0x37:8" Class="single"/>
    <Opcode Name="aad" op="0xd5 0x0a:8" Class="single"/>
    <Opcode Name="aam" op="0xd4:8 0x0a:8" Class="single"/>
    <Opcode Name="aas" op="0x3f:8" Class="single"/>
    <Opcode Name="adc" op1="0x14:8" op2="0x10" mod="2" Class="math"/>
    <Opcode Name="add" op1="0x04:8" op2="0x00" mod="0" Class="math"/>
    <Opcode Name="and" op1="0x24:8" op2="0x20" mod="4" Class="math"/>
    <Opcode Name="arpl">
      <Operands Name="'rm:rm16', 'modreg:reg16'" op="0x63:8" mod="'modreg.Ord" R="modreg.R" W="modreg.W" />
      <Operands Name="'rm:rm16b', 'modreg:reg16b'" op="0x63:8" mod="'modreg.Ord" R="modreg.R" W="modreg.W" />
    </Opcode>
    <Opcode Name="bound" op1="0x62:8" Class="reg16rmx"/>
    <Opcode Name="bsf" op1="0x0f:8 0xbc:8" Class="reg16rmx"/>
    <Opcode Name="bsr" op1="0x0f:8 0xbd:8" Class="reg16rmx"/>
    <Opcode Name="bswap">
      <Operands Name="'modreg:reg32'" mod="'modreg.Ord" R="modreg.R" W="modreg.W" Coding="'data32' 0x0f:8 0x19:5 'modreg.Ord':3"/>
      <Operands Name="'modreg:reg32b'" mod="'modreg.Ord" R="modreg.R" W="modreg.W" Coding="'data32' 0x0f:8 0x19:5 'modreg.Ord':3"/>
      <Operands Name="'modreg:reg64b'" mod="'modreg.Ord" R="modreg.R" W="modreg.W" Coding="0x48:8 'data64' 0x0f:8 0x19:5 'modreg.Ord':3"/>
    </Opcode>
    <Opcode Name="bt" Class="bit" op1= "0x0f:8 0xba:8" op2="0x0f:8 0xa3:8" mod="4"/>
    <Opcode Name="btc" Class="bit" op1= "0x0f:8 0xba:8" op2="0x0f:8 0xbb:8" mod="7"/>
    <Opcode Name="btr" Class="bit" op1= "0x0f:8 0xba:8" op2="0x0f:8 0xb3:8" mod="6"/>
    <Opcode Name="bts" Class="bit" op1= "0x0f:8 0xba:8" op2="0x0f:8 0xab:8" mod="5"/>
    <Opcode Name="call">
      <Operands Name="'seg:mem16':{word}'omem:address16'" Coding="'data16' 0x9a:8 'omem':16 'seg':16"/>
      <Operands Name="'seg:mem16':{dword}'omem:address32'" Coding="'data32' 0x9a:8 'omem':32 'seg':16"/>
      <Operands Name="'rel:rel16j'" Coding="'data16' 0xe8:8 'rel':16"/>
      <Operands Name="'rel:rel32'" Coding="'data32' 0xe8:8 'rel':32"/>
      <Operands Name="'modreg:reg16rm'" op="'data16' 0xff:8" mod="2" />
      <Operands Name="'modreg:reg32rm'" op="'data32' 0xff:8" mod="2" />
      <Operands Name="'modreg:reg64rmd'" op="'data64' 0xff:8" mod="2" />
      <Operands Name="'modreg:reg64rmb'" op="'data64' 0xff:8" mod="2" />
      <Operands Name="{word} 'rm:rm16bit'" op="'data16' 0xff:8" mod="2" />
      <Operands Name="{dword} 'rm:rm32bit'" op="'data32' 0xff:8" mod="2" />
      <Operands Name="{qword} 'rm:rm64bit'" op="'data32' 0xff:8" mod="2" />
      <Operands Name="far 'omem:address16'" Coding="0xf:8 0xf:8 'data16' 0x9a:8 'omem':16 0:16"/>
      <Operands Name="far 'omem:address32'" Coding="0xf:8 0xf:8 'data32' 0x9a:8 'omem':32 0:16"/>
      <Operands Name="far 'rm:rm16bit'" op= "'data16' 0xff:8" mod="3" />
      <Operands Name="far 'rm:rm32bit'" op= "'data32' 0xff:8" mod="3" />
    </Opcode>
    <Opcode Name="cbw" op="'data16' 0x98:8" Class="single"/>
    <Opcode Name="cdq" op="'data32' 0x99:8" Class="single"/>
    <Opcode Name="cdqe" op="0x48:8 'data64' 0x99:8" Class="single"/>
    <Opcode Name="clc" op="0xf8:8" Class="single"/>
    <Opcode Name="cld" op="0xfc:8" Class="single"/>
    <Opcode Name="cli" op="0xfa:8" Class="single"/>
    <Opcode Name="clts" op="0x06:8" Class="twobyte"/>
    <Opcode Name="cmc" op="0xf5" Class="single"/>
    <Opcode Name="cmova" sel="7" Class="cmov"/>
    <Opcode Name="cmovae" sel="3" Class="cmov"/>
    <Opcode Name="cmovb" sel="2" Class="cmov"/>
    <Opcode Name="cmovbe" sel="6" Class="cmov"/>
    <Opcode Name="cmovc" sel="2" Class="cmov"/>
    <Opcode Name="cmove" sel="4" Class="cmov"/>
    <Opcode Name="cmovg" sel="0xf" Class="cmov"/>
    <Opcode Name="cmovge" sel="0xd" Class="cmov"/>
    <Opcode Name="cmovl" sel="0xc" Class="cmov"/>
    <Opcode Name="cmovle" sel="0xe" Class="cmov"/>
    <Opcode Name="cmovna" sel="6" Class="cmov"/>
    <Opcode Name="cmovnae" sel="2" Class="cmov"/>
    <Opcode Name="cmovnb" sel="3" Class="cmov"/>
    <Opcode Name="cmovnbe" sel="7" Class="cmov"/>
    <Opcode Name="cmovnc" sel="3" Class="cmov"/>
    <Opcode Name="cmovne" sel="5" Class="cmov"/>
    <Opcode Name="cmovng" sel="0xe" Class="cmov"/>
    <Opcode Name="cmovnge" sel="0xc" Class="cmov"/>
    <Opcode Name="cmovnl" sel="0xd" Class="cmov"/>
    <Opcode Name="cmovnle" sel="0xf" Class="cmov"/>
    <Opcode Name="cmovno" sel="1" Class="cmov"/>
    <Opcode Name="cmovnp" sel="0xb" Class="cmov"/>
    <Opcode Name="cmovns" sel="9" Class="cmov"/>
    <Opcode Name="cmovnz" sel="5" Class="cmov"/>
    <Opcode Name="cmovo" sel="0" Class="cmov"/>
    <Opcode Name="cmovp" sel="0xa" Class="cmov"/>
    <Opcode Name="cmovpe" sel="0xa" Class="cmov"/>
    <Opcode Name="cmovpo" sel="0xb" Class="cmov"/>
    <Opcode Name="cmovs" sel="8" Class="cmov"/>
    <Opcode Name="cmovz" sel="4" Class="cmov"/>
    <Opcode Name="cmp" op1="0x3c:8" op2="0x38" mod="7" Class="math"/>
    <Opcode Name="cmps">
      <Operands Name="byte [ds:si], byte es:[di]" Coding="'addr16' 0xa6:8"/>
      <Operands Name="byte ['seg:segment':si], byte es:[di]" Coding="'addr16' 'seg.Prefix':8 0xa6:8"/>
      <Operands Name="byte [ds:esi], byte es:[edi]" Coding="'addr32' 0xa6:8"/>
      <Operands Name="byte ['seg:segment':esi], byte es:[edi]" Coding="'addr32' 'seg.Prefix':8 0xa6:8"/>
      <Operands Name="byte [rsi], byte [rdi]" Coding="'addr64' 0xa6:8"/>
      <Operands Name="byte ['seg:segment':rsi], byte es:[rdi]" Coding="'addr64' 'seg.Prefix':8 0xa6:8"/>

      <Operands Name="word [ds:si], word es:[di]" Coding="'data16' 'addr16' 0xa7:8"/>
      <Operands Name="word ['seg:segment':si], word es:[di]" Coding="'data16' 'addr16' 'seg.Prefix':8 0xa7:8"/>
      <Operands Name="word [ds:esi], word es:[edi]" Coding="'data16' 'addr32' 0xa7:8"/>
      <Operands Name="word ['seg:segment':esi], word es:[edi]" Coding="'data16' 'addr32' 'seg.Prefix':8 0xa7:8"/>
      <Operands Name="word [rsi], word [rdi]" Coding="'data16' 'addr64' 0xa7:8"/>
      <Operands Name="word ['seg:segment':rsi], word [rdi]" Coding="'data16' 'addr64' 'seg.Prefix':8 0xa7:8"/>

      <Operands Name="dword [ds:si], dword es:[di]" Coding="'data32' 'addr16' 0xa7:8"/>
      <Operands Name="dword ['seg:segment':si], dword es:[di]" Coding="'data32' 'addr16' 'seg.Prefix':8 0xa7:8"/>
      <Operands Name="dword [ds:esi], dword es:[edi]" Coding="'data32' 'addr32' 0xa7:8"/>
      <Operands Name="dword ['seg:segment':esi], dword es:[edi]" Coding="'data32' 'addr32' 'seg.Prefix':8 0xa7:8"/>
      <Operands Name="dword [rsi], dword [rdi]" Coding="'data32' 'addr64' 0xa7:8"/>
      <Operands Name="dword ['seg:segment':rsi], dword [rdi]" Coding="'data32' 'addr64' 'seg.Prefix':8 0xa7:8"/>

      <Operands Name="qword [ds:esi], qword es:[edi]" Coding="0x48:8 'data64' 'addr32' 0xa7:8"/>
      <Operands Name="qword ['seg:segment':esi], qword es:[edi]" Coding="0x48:8 'data64' 'addr32' 'seg.Prefix':8 0xa7:8"/>
      <Operands Name="qword [rsi], qword [rdi]" Coding="0x48:8 'data64' 'addr64' 0xa7:8"/>
      <Operands Name="qword ['seg:segment':rsi], qword [rdi]" Coding="0x48:8 'data64' 'addr64' 'seg.Prefix':8 0xa7:8"/>
    </Opcode>
    <Opcode Name="cmpsb" op="0xa6:8" Class="single"/>
    <Opcode Name="cmpsw" op="'data16' 0xa7:8" Class="single"/>
    <Opcode Name="cmpsd" op="'data32' 0xa7:8" Class="single"/>
    <Opcode Name="cmpsq" op="0x48:8 'data64' 0xa7:8" Class="single"/>
    <Opcode Name="cmpxchg" op="0x0f:8 0xb0:8">
      <Operands Name="{byte} 'rm:rm8', 'modreg:reg8'" mod="'modreg.Ord" R="modreg.R" W="modreg.W"/>
      <Operands Name="{byte} 'rm:rm8b', 'modreg:reg8b'" mod="'modreg.Ord" R="modreg.R" W="modreg.W"/>
      <Operands Name="{word} 'rm:rm16', 'modreg:reg16'" mod="'modreg.Ord" R="modreg.R" W="modreg.W"/>
      <Operands Name="{word} 'rm:rm16b', 'modreg:reg16b'" mod="'modreg.Ord" R="modreg.R" W="modreg.W"/>
      <Operands Name="{dword} 'rm:rm32', 'modreg:reg32'" mod="'modreg.Ord" R="modreg.R" W="modreg.W"/>
      <Operands Name="{dword} 'rm:rm32b', 'modreg:reg32b'" mod="'modreg.Ord" R="modreg.R" W="modreg.W"/>
      <Operands Name="{qword} 'rm:rm64b', 'modreg:reg64b'" mod="'modreg.Ord" R="modreg.R" W="modreg.W"/>
    </Opcode>
    <Opcode Name="cmpxchg8b">
      <Operands Name="'rm:rm'" mod="1" op="0x0f:8 0xc7:8"/>
    </Opcode>
    <Opcode Name="cmpxchg16b">
      <Operands Name="'rm:rm'" mod="1" op="0x0f:8 0xc7:8" Coding="0x48:8 native"/>
    </Opcode>
    <Opcode Name="cpuid" op="0xA2:8" Class="twobyte"/>
    <Opcode Name="cqo" op="0x48:8 'data64' 0x99:8" Class="single"/>
    <Opcode Name="cwd" op="'data16' 0x99:8" Class="single"/>
    <Opcode Name="cwde" op="'data32' 0x98:8" Class="single"/>
    <Opcode Name="daa" op="0x27:8" Class="single"/>
    <Opcode Name="das" op="0x2f" Class="single"/>
    <Opcode Name="dec" op="0x9" mod="1" Class="incdec"/>
    <Opcode Name="div" mod="6" Class="sizedrm"/>
    <Opcode Name="enter">
      <Operands Name="{word} 'omem:mem16', {byte} 'mem1:mem8'" Coding="0xc8:8 'omem':16 'mem1':8"/>
    </Opcode>
    <Opcode Name="esc">
      <Operands Name="'omem:mem6', 'rm:rmx'" op="0x1b:5 'omem'>>3:3" mod="'omem'&amp;7" />
    </Opcode>
    <Opcode Name="f2xm1" op="0xd9:8 0xf0:8" Class="single"/>
    <Opcode Name="fabs" op="0xd9:8 0xe1:8" Class="single"/>
    <Opcode Name="fadd" op1="0xd8:8" mod="0" mod1="0" Class="floatmath"/>
    <Opcode Name="faddp" op="0xde:8" mod="0" Class="floatmathp"/>
    <Opcode Name="fbld" op="0xdf:8" mod="4" Class="fbld"/>
    <Opcode Name="fbstp" op="0xdf:8" mod="6" Class="fbld"/>
    <Opcode Name="fchs" op="0xd9:8 0xe0:8" Class="single"/>
    <Opcode Name="fclex" op="0x9b:8 0xdb:8 0xe2:8" Class="single"/>
    <Opcode Name="fnclex" op="0xdb:8 0xe2:8" Class="single"/>
    <Opcode Name="fcmovb" op1="0xda:8" mod="0">
      <Operands Name="st0,'reg:floatreg'" Coding="'op1' 3:2 'mod':3 'reg.Ord':3"/>
    </Opcode>
    <Opcode Name="fcmovbe" op1="0xda:8" mod="2">
      <Operands Name="st0,'reg:floatreg'" Coding="'op1' 3:2 'mod':3 'reg.Ord':3"/>
    </Opcode>
    <Opcode Name="fcmove" op1="0xda:8" mod="1">
      <Operands Name="st0,'reg:floatreg'" Coding="'op1' 3:2 'mod':3 'reg.Ord':3"/>
    </Opcode>
    <Opcode Name="fcmovnb" op1="0xdb:8" mod="0">
      <Operands Name="st0,'reg:floatreg'" Coding="'op1' 3:2 'mod':3 'reg.Ord':3"/>
    </Opcode>
    <Opcode Name="fcmovnbe" op1="0xdb:8" mod="2">
      <Operands Name="st0,'reg:floatreg'" Coding="'op1' 3:2 'mod':3 'reg.Ord':3"/>
    </Opcode>
    <Opcode Name="fcmovne" op1="0xdb:8" mod="1">
      <Operands Name="st0,'reg:floatreg'" Coding="'op1' 3:2 'mod':3 'reg.Ord':3"/>
    </Opcode>
    <Opcode Name="fcmovnu" op1="0xdb:8" mod="3">
      <Operands Name="st0,'reg:floatreg'" Coding="'op1' 3:2 'mod':3 'reg.Ord':3"/>
    </Opcode>
    <Opcode Name="fcmovu" op1="0xda:8" mod="3">
      <Operands Name="st0,'reg:floatreg'" Coding="'op1' 3:2 'mod':3 'reg.Ord':3"/>
    </Opcode>
    <Opcode Name="fcom" op1="0xd8:8" mod="2">
      <Operands Name="st0,'reg:floatreg'" Coding="'op1' 3:2 'mod':3 'reg.Ord':3"/>
      <Operands Name="'reg:floatreg'" Coding="'op1' 3:2 'mod':3 'reg.Ord':3"/>
      <Operands Name="dword 'reg:frm'" op="'op1'"/>
      <Operands Name="qword 'reg:frm'" op="'op1'+4"/>
      <Operands Name="dword 'reg:frm64'" op="'op1'"/>
      <Operands Name="qword 'reg:frm64'" op="'op1'+4"/>
    </Opcode>
    <Opcode Name="fcom2" op1="0xdc:8" mod="2">
      <Operands Name="st0,'reg:floatreg'" Coding="'op1' 3:2 'mod':3 'reg.Ord':3"/>
    </Opcode>
    <Opcode Name="fcomi" op1="0xdb:8" mod="6">
      <Operands Name="st0,'reg:floatreg'" Coding="'op1' 3:2 'mod':3 'reg.Ord':3"/>
    </Opcode>
    <Opcode Name="fcomip" op1="0xdf:8" mod="6">
      <Operands Name="st0,'reg:floatreg'" Coding="'op1' 3:2 'mod':3 'reg.Ord':3"/>
    </Opcode>
    <Opcode Name="fcomp" op1="0xd8:8" mod="3">
      <Operands Name="'reg:floatreg'" Coding="'op1' 3:2 'mod':3 'reg.Ord':3"/>
      <Operands Name="dword 'reg:frm'" op="'op1'"/>
      <Operands Name="qword 'reg:frm'" op="'op1'+4"/>
      <Operands Name="dword 'reg:frm64'" op="'op1'"/>
      <Operands Name="qword 'reg:frm64'" op="'op1'+4"/>
    </Opcode>
    <Opcode Name="fcomp3" op1="0xdc:8" mod="3">
      <Operands Name="st0,'reg:floatreg'" Coding="'op1' 3:2 'mod':3 'reg.Ord':3"/>
    </Opcode>
    <Opcode Name="fcomp5" op1="0xde:8" mod="2">
      <Operands Name="st0,'reg:floatreg'" Coding="'op1' 3:2 'mod':3 'reg.Ord':3"/>
    </Opcode>
    <Opcode Name="fcompp" op="0xde:8 0xd9:8" Class="single"/>
    <Opcode Name="fcos" op="0xd9:8 0xff:8" Class="single"/>
    <Opcode Name="fdecstp" op="0xd9:8 0xf6:8" Class="single"/>
    <Opcode Name="fdisi" op="0xdb:8 0xe1:8" Class="single"/>
    <Opcode Name="fdiv" op1="0xd8:8" mod="6" mod1="7" Class="floatmath"/>
    <Opcode Name="fdivp" op="0xde:8" mod="7" Class="floatmathp"/>
    <Opcode Name="fdivr" op1="0xd8:8" mod="7" mod1="6" Class="floatmath"/>
    <Opcode Name="fdivrp" op="0xde:8" mod="6" Class="floatmathp"/>
    <Opcode Name="feni" op="0xdb:8 0xe0:8" Class="single"/>
    <Opcode Name="ffree">
      <Operands Name="'reg:regfloat'" op="0xdd" mod="0"/>
    </Opcode>
    <Opcode Name="ffreep">
      <Operands Name="'reg:regfloat'" op="0xdf" mod="0"/>
    </Opcode>
    <Opcode Name="fiadd" op1="0xda:8" mod="0" Class="floatimath"/>
    <Opcode Name="ficom" op1="0xda:8" mod="2" Class="floatimath"/>
    <Opcode Name="ficomp" op1="0xda:8" mod="3" Class="floatimath"/>
    <Opcode Name="fidiv" op1="0xda:8" mod="6" Class="floatimath"/>
    <Opcode Name="fidivr" op1="0xda:8" mod="7" Class="floatimath"/>
    <Opcode Name="fild" op1="0xdb:8" mod="0" Class="floatimath">
      <Operands Name="qword 'rm:rm'" op="0xdf:8" mod="5"/>
    </Opcode>
    <Opcode Name="fimul" op1="0xda:8" mod="1" Class="floatimath"/>
    <Opcode Name="fincstp" op="0xd9:8 0xf7:8" Class="single"/>
    <Opcode Name="finit" op="0x9b:8 0xdb:8 0xe3:8" Class="single"/>
    <Opcode Name="fninit" op="0xdb:8 0xe3:8" Class="single"/>
    <Opcode Name="fist" op1="0xdb:8" mod="2" Class="floatimath"/>
    <Opcode Name="fistp" op1="0xdb:8" mod="3" Class="floatimath">
      <Operands Name="qword 'rm:rm'" op="0xdf:8" mod="7"/>
    </Opcode>
    <Opcode Name="fisub" op1="0xda:8" mod="4" Class="floatimath"/>
    <Opcode Name="fisubr" op1="0xda:8" mod="5" Class="floatimath"/>
    <Opcode Name="fld">
      <Operands Name="'reg:regfloat'" op="0xd9" mod="0"/>
      <Operands Name="dword 'rm:rm'" op="0xd9" mod="0" />
      <Operands Name="qword 'rm:rm'" op="0xdd" mod="0" />
      <Operands Name="tword 'rm:rm'" op="0xdb" mod="5" />
    </Opcode>
    <Opcode Name="fld1" op="0xd9:8 0xe8:8" Class="single"/>
    <Opcode Name="fldcw">
      <Operands Name="{word}'rm:rm'" op="0xd9:8" mod="5"/>
    </Opcode>
    <Opcode Name="fldenv">
      <Operands Name="'rm:rm'" op="0xd9:8" mod="4"/>
    </Opcode>
    <Opcode Name="fldl2e" op="0xd9:8 0xea:8" Class="single"/>
    <Opcode Name="fldl2t" op="0xd9:8 0xe9:8" Class="single"/>
    <Opcode Name="fldlg2" op="0xd9:8 0xec:8" Class="single"/>
    <Opcode Name="fldln2" op="0xd9:8 0xed:8" Class="single"/>
    <Opcode Name="fldpi" op="0xd9:8 0xeb:8" Class="single"/>
    <Opcode Name="fldz" op="0xd9:8 0xee:8" Class="single"/>
    <Opcode Name="fmul" op1="0xd8:8" mod="1" mod1="1" Class="floatmath"/>
    <Opcode Name="fmulp" op="0xde:8" mod="1" Class="floatmathp"/>
    <Opcode Name="fnop" op="0xd9:8 0xd0:8" Class="single"/>
    <Opcode Name="fnsave">
      <Operands Name="'rm:rm'" op="0xdd:8" mod="6"/>
    </Opcode>
    <Opcode Name="fpatan" op="0xd9:8 0xf3:8" Class="single"/>
    <Opcode Name="fprem" op="0xd9:8 0xf8:8" Class="single"/>
    <Opcode Name="fprem1" op="0xd9:8 0xf5" Class="single"/>
    <Opcode Name="fptan" op="0xd9:8 0xf2:8" Class="single"/>
    <Opcode Name="frndint" op="0xd9:8 0xfc:8" Class="single"/>
    <Opcode Name="frstor">
      <Operands Name="'rm:rm'" op="0xdd:8" mod="4"/>
    </Opcode>
    <Opcode Name="fsave">
      <Operands Name="'rm:rm'" op="0x9b:8 0xdd:8" mod="6"/>
    </Opcode>
    <Opcode Name="fscale" op="0xd9:8 0xfd:8" Class="single"/>
    <Opcode Name="fsetpm" op="0xdb:8 0xe4:8" Class="single"/>
    <Opcode Name="fsin" op="0xd9:8 0xfe:8" Class="single"/>
    <Opcode Name="fsincos" op="0xd9:8 0xfb:8" Class="single"/>
    <Opcode Name="fsqrt" op="0xd9:8 0xfa:8" Class="single"/>
    <Opcode Name="fst">
      <Operands Name="'reg:regfloat'" op="0xdd" mod="2"/>
      <Operands Name="dword 'rm:frm'" op="0xd9" mod="2" />
      <Operands Name="qword 'rm:frm'" op="0xdd" mod="2" />
    </Opcode>
    <Opcode Name="fstcw">
      <Operands Name="{word}'rm:rm'" op="0x9b:8 0xd9:8" mod="7"/>
    </Opcode>
    <Opcode Name="fnstcw">
      <Operands Name="{word}'rm:rm'" op="0xd9:8" mod="7"/>
    </Opcode>
    <Opcode Name="fstenv">
      <Operands Name="'rm:rm'" op="0x9b:8 0xd9:8" mod="6"/>
    </Opcode>
    <Opcode Name="fnstenv">
      <Operands Name="'rm:rm'" op="0xd9:8" mod="6"/>
    </Opcode>
    <Opcode Name="fstp">
      <Operands Name="'reg:regfloat'" op="0xdd" mod="3"/>
      <Operands Name="dword 'rm:frm'" op="0xd9" mod="3" />
      <Operands Name="qword 'rm:frm'" op="0xdd" mod="3" />
      <Operands Name="tword 'rm:frm'" op="0xdb" mod="7" />
      <Operands Name="dword 'rm:frm64'" op="0xd9" mod="3" />
      <Operands Name="qword 'rm:frm64'" op="0xdd" mod="3" />
      <Operands Name="tword 'rm:frm64'" op="0xdb" mod="7" />
    </Opcode>
    <Opcode Name="fstp1" op1="0xd9:8" mod="3">
      <Operands Name="'reg:floatreg',st0" Coding="'op1' 3:2 'mod':3 'reg.Ord':3"/>
    </Opcode>
    <Opcode Name="fstp8" op1="0xdf:8" mod="2">
      <Operands Name="'reg:floatreg',st0" Coding="'op1' 3:2 'mod':3 'reg.Ord':3"/>
    </Opcode>
    <Opcode Name="fstp9" op1="0xdf:8" mod="3">
      <Operands Name="'reg:floatreg',st0" Coding="'op1' 3:2 'mod':3 'reg.Ord':3"/>
    </Opcode>
    <Opcode Name="fstsw">
      <Operands Name="{word}'rm:rm'" op="0x9b:8 0xdd:8" mod="7"/>
      <Operands Name="ax" Coding="0x9b:8 0xdf:8 0xe0:8"/>
    </Opcode>
    <Opcode Name="fnstsw">
      <Operands Name="{word}'rm:rm'" op="0xdd:8" mod="7"/>
      <Operands Name="ax" Coding="0xdf:8 0xe0:8"/>
    </Opcode>
    <Opcode Name="fsub" op1="0xd8:8" mod="4" mod1="5" Class="floatmath"/>
    <Opcode Name="fsubp" op="0xde:8" mod="5" Class="floatmathp"/>
    <Opcode Name="fsubr" op1="0xd8:8" mod="5" mod1="4" Class="floatmath"/>
    <Opcode Name="fsubrp" op="0xde:8" mod="4" Class="floatmathp"/>
    <Opcode Name="ftst" op="0xd9:8 0xe4:8" Class="single"/>
    <Opcode Name="fucom" op="0xdd" mod="4" Class="floatmathp"/>
    <Opcode Name="fucomi" op1="0xdb:8" mod="5">
      <Operands Name="st0,'reg:floatreg'" Coding="'op1' 3:2 'mod':3 'reg.Ord':3"/>
    </Opcode>
    <Opcode Name="fucomip" op1="0xdf:8" mod="5">
      <Operands Name="st0,'reg:floatreg'" Coding="'op1' 3:2 'mod':3 'reg.Ord':3"/>
    </Opcode>
    <Opcode Name="fucomp" op="0xdd" mod="5" Class="floatmathp"/>
    <Opcode Name="fucompp" op="0xda:8 0xe9:8" Class="single"/>
    <Opcode Name="fwait" op="0x9b:8" Class="single"/>
    <Opcode Name="fxam" op="0xd9:8 0xe5" Class="single"/>
    <Opcode Name="fxch" op="0xd9" mod="1" Class="floatmathp"/>
    <Opcode Name="fxch4" op1="0xdd:8" mod="1">
      <Operands Name="st0,'reg:floatreg'" Coding="'op1' 3:2 'mod':3 'reg.Ord':3"/>
    </Opcode>
    <Opcode Name="fxch7" op1="0xdf:8" mod="1">
      <Operands Name="st0,'reg:floatreg'" Coding="'op1' 3:2 'mod':3 'reg.Ord':3"/>
    </Opcode>
    <Opcode Name="fxrstor">
      <Operands Name="'rm:rm'" op="0x0f 0xae" mod="1" />
    </Opcode>
    <Opcode Name="fxsave">
      <Operands Name="'rm:rm'" op="0x0f 0xae" mod="0" />
    </Opcode>
    <Opcode Name="fxtract" op="0xd9:8 0xf4:8" Class="single"/>
    <Opcode Name="fyl2x" op="0xd9:8 0xf1:8" Class="single"/>
    <Opcode Name="fyl2xp1" op="0xd9:8 0xf9:8" Class="single"/>
    <Opcode Name="hlt" op="0xf4:8" Class="single"/>
    <Opcode Name="ibts" op="0xa7:8" Class="twobyte"/>
    <Opcode Name="icebp" op="0xf1:8" Class="single"/>
    <Opcode Name="idiv" mod="7" Class="sizedrm"/>
    <Opcode Name="imul" mod="5" Class="sizedrm">
      <Operands Name="'modreg:reg16', {word} 'rm:rm16', {byte} 'isigned:signed8'" op="'data16' 0x6b:8" mod="'modreg.Ord" R="modreg.R" W="modreg.W" Coding="native 'isigned':8"/>
      <Operands Name="'modreg:reg16', {word} 'rm:rm16', 'omem:mem16'" op="'data16' 0x69:8" mod="'modreg.Ord" R="modreg.R" W="modreg.W" Coding="native 'omem':16"/>
      <Operands Name="'modreg:reg16', {word} 'rm:rm16'" op="'data16' 0x0f:8 0xaf:8" mod="'modreg.Ord" R="modreg.R" W="modreg.W" />
      <Operands Name="'modreg:reg32', {dword} 'rm:rm32', {byte} 'isigned:signed8'" op="'data32' 0x6b:8" mod="'modreg.Ord" R="modreg.R" W="modreg.W" Coding="native 'isigned':8"/>
      <Operands Name="'modreg:reg32', {dword} 'rm:rm32', 'omem:mem32'" op="'data32' 0x69:8" mod="'modreg.Ord" R="modreg.R" W="modreg.W" Coding="native 'omem':32"/>
      <Operands Name="'modreg:reg32', {dword} 'rm:rm32'" op="'data32' 0x0f:8 0xaf:8" mod="'modreg.Ord" R="modreg.R" W="modreg.W" />
      <Operands Name="'modreg:reg16', {byte} 'signedimm:signed8'" Coding="'data16' 0x6b:8 0x3:2 'modreg.Ord':3 'modreg.Ord':3 'signedimm':8"/>
      <Operands Name="'modreg:reg16', {word} 'omem:mem16'" Coding="'data16' 0x69:8 0x3:2 'modreg.Ord':3 'modreg.Ord':3 'omem':16"/>
      <Operands Name="'modreg:reg32', {byte} 'signedimm:signed8'" Coding="'data32' 0x6b:8 0x3:2 'modreg.Ord':3 'modreg.Ord':3 'signedimm':8"/>
      <Operands Name="'modreg:reg32', {dword} 'omem:mem32'" Coding="'data32' 0x69:8 0x3:2 'modreg.Ord':3 'modreg.Ord':3 'omem':32"/>
      <Operands Name="'modreg:reg16b', {word} 'rm:rm16b', {byte} 'isigned:signed8'" op="'data16' 0x6b:8" mod="'modreg.Ord" R="modreg.R" W="modreg.W" Coding="native 'isigned':8"/>
      <Operands Name="'modreg:reg16b', {word} 'rm:rm16b', 'omem:mem16'" op="'data16' 0x69:8" mod="'modreg.Ord" R="modreg.R" W="modreg.W" Coding="native 'omem':16"/>
      <Operands Name="'modreg:reg16b', {word} 'rm:rm16b'" op="'data16' 0x0f:8 0xaf:8" mod="'modreg.Ord" R="modreg.R" W="modreg.W" />
      <Operands Name="'modreg:reg32b', {dword} 'rm:rm32b', {byte} 'isigned:signed8'" op="'data32' 0x6b:8" mod="'modreg.Ord" R="modreg.R" W="modreg.W" Coding="native 'isigned':8"/>
      <Operands Name="'modreg:reg32b', {dword} 'rm:rm32b', 'omem:mem32'" op="'data32' 0x69:8" mod="'modreg.Ord" R="modreg.R" W="modreg.W" Coding="native 'omem':32"/>
      <Operands Name="'modreg:reg32b', {dword} 'rm:rm32b'" op="'data32' 0x0f:8 0xaf:8" mod="'modreg.Ord" R="modreg.R" W="modreg.W" />
      <Operands Name="'modreg:reg64b', {qword} 'rm:rm64b', {byte} 'isigned:signed8'" op="'data64' 0x6b:8" mod="'modreg.Ord" R="modreg.R" W="modreg.W" Coding="native 'isigned':8"/>
      <Operands Name="'modreg:reg64b', {qword} 'rm:rm64b', 'omem:mem64'" op="'data64' 0x69:8" mod="'modreg.Ord" R="modreg.R" W="modreg.W" Coding="native 'omem':64"/>
      <Operands Name="'modreg:reg64b', {qword} 'rm:rm64b'" op="'data64' 0x0f:8 0xaf:8" mod="'modreg.Ord" R="modreg.R" W="modreg.W" />
      <Operands Name="'modreg:reg16b', {byte} 'signedimm:signed8'" Coding="'data16' 0x6b:8 0x3:2 'modreg.Ord':3 'modreg.Ord':3 'signedimm':8"/>
      <Operands Name="'modreg:reg16b', {word} 'omem:mem16'" Coding="'data16' 0x69:8 0x3:2 'modreg.Ord':3 'modreg.Ord':3 'omem':16"/>
      <Operands Name="'modreg:reg32b', {byte} 'signedimm:signed8'" Coding="'data32' 0x6b:8 0x3:2 'modreg.Ord':3 'modreg.Ord':3 'signedimm':8"/>
      <Operands Name="'modreg:reg32b', {dword} 'omem:mem32'" Coding="'data32' 0x69:8 0x3:2 'modreg.Ord':3 'modreg.Ord':3 'omem':32"/>
      <Operands Name="'modreg:reg64b', {byte} 'signedimm:signed8'" Coding="0x48:8 'data32' 0x6b:8 0x3:2 'modreg.Ord':3 'modreg.Ord':3 'signedimm':8"/>
      <Operands Name="'modreg:reg64b', {qword} 'omem:mem64'" Coding="0x48:8 'data32' 0x69:8 0x3:2 'modreg.Ord':3 'modreg.Ord':3 'omem':32"/>
    </Opcode>
    <Opcode Name="in">
      <Operands Name="al, {byte}'port:mem8'" Coding="0xe4:8 'port':8"/>
      <Operands Name="ax, {byte}'port:mem8'" Coding="'data16' 0xe5 'port':8"/>
      <Operands Name="eax, {byte}'port:mem8'" Coding="'data32' 0xe5 'port':8"/>
      <Operands Name="rax, {byte}'port:mem8'" Coding="'data64' 0xe5 'port':8"/>
      <Operands Name="al, dx" Coding="0xec:8"/>
      <Operands Name="ax, dx" Coding="'data16' 0xed:8"/>
      <Operands Name="eax, dx" Coding="'data32' 0xed:8"/>
      <Operands Name="rax, dx" Coding="'data64' 0xed:8"/>
    </Opcode>
    <Opcode Name="ins">
      <Operands Name="byte es:[di],dx" Coding="'addr16' 0x0f:8 0x6c:8"/>
      <Operands Name="byte ['seg:segment':di],dx" Coding="'addr16' 'seg.Prefix':8 0x0f:8 0x6c:8"/>
      <Operands Name="byte es:[edi],dx" Coding="'addr32' 0x0f:8 0x6c:8"/>
      <Operands Name="byte ['seg:segment':edi],dx" Coding="'addr32' 'seg.Prefix':8 0x0f:8 0x6c:8"/>
      <Operands Name="byte [rdi],dx" Coding="'addr64' 0x0f:8 0x6c:8"/>
      <Operands Name="byte ['seg:segment':rdi],dx" Coding="'addr64' 'seg.Prefix':8 0x0f:8 0x6c:8"/>

      <Operands Name="word es:[di],dx" Coding="'data16' 'addr16' 0x0f:8 0x6d:8"/>
      <Operands Name="word ['seg:segment':di],dx" Coding="'data16' 'addr16' 'seg.Prefix':8 0x0f:8 0x6d:8"/>
      <Operands Name="word es:[edi],dx" Coding="'data16' 'addr32' 0x0f:8 0x6d:8"/>
      <Operands Name="word ['seg:segment':edi],dx" Coding="'data16' 'addr32' 'seg.Prefix':8 0x0f:8 0x6d:8"/>
      <Operands Name="word [rdi],dx" Coding="'data16' 'addr64' 0x0f:8 0x6d:8"/>
      <Operands Name="word ['seg:segment':rdi],dx" Coding="'data16' 'addr64' 'seg.Prefix':8 0x0f:8 0x6d:8"/>

      <Operands Name="dword es:[di],dx" Coding="'data32' 'addr16' 0x0f:8 0x6d:8"/>
      <Operands Name="dword ['seg:segment':di],dx" Coding="'data32' 'addr16' 'seg.Prefix':8 0x0f:8 0x6d:8"/>
      <Operands Name="dword es:[edi],dx" Coding="'data32' 'addr32' 0x0f:8 0x6d:8"/>
      <Operands Name="dword ['seg:segment':edi],dx" Coding="'data32' 'addr32' 'seg.Prefix':8 0x0f:8 0x6d:8"/>
      <Operands Name="dword [rdi],dx" Coding="'data32' 'addr64' 0x0f:8 0x6d:8"/>
      <Operands Name="dword ['seg:segment':rdi],dx" Coding="'data32' 'addr64' 'seg.Prefix':8 0x0f:8 0x6d:8"/>
    </Opcode>
    <Opcode Name="insb" op="0x6c:8" Class="twobyte"/>
    <Opcode Name="insw" op="'data16' 0x6d:8" Class="twobyte"/>
    <Opcode Name="insd" op="'data32' 0x6d:8" Class="twobyte"/>
    <Opcode Name="insq" op="0x48:8 'data64' 0x6d:8" Class="twobyte"/>
    <Opcode Name="inc" op="0x8" mod="0" Class="incdec"/>
    <Opcode Name="int">
      <Operands Name="{byte}'omem:mem8'" Coding="0xcd:8 'omem':8"/>
    </Opcode>
    <Opcode Name="int1" op="0xf1:8" Class="single"/>
    <Opcode Name="int3" op="0xcc:8" Class="single"/>
    <Opcode Name="into" op="0xce:8" Class="single"/>
    <Opcode Name="invd" op="0x8:8" Class="twobyte"/>
    <Opcode Name="invlpg">
      <Operands Name="'rm:rm'" op="0xf 1:8" mod= "7" />
    </Opcode>
    <Opcode Name="iret" op="0xcf" Class="single"/>
    <Opcode Name="iretw" op="'data16' 0xcf" Class="single"/>
    <Opcode Name="iretd" op="'data32' 0xcf" Class="single"/>
    <Opcode Name="iretq" op="0x48:8 'data64' 0xcf" Class="single"/>
    <Opcode Name="ja" sel="7" Class="branch"/>
    <Opcode Name="jae" sel="3" Class="branch"/>
    <Opcode Name="jb" sel="2" Class="branch"/>
    <Opcode Name="jbe" sel="6" Class="branch"/>
    <Opcode Name="jc" sel="2" Class="branch"/>
    <Opcode Name="jcxz">
      <Operands Name="'rel:rel8n'" Coding="'addr16' 0xe3:8 'rel':8"/>
    </Opcode>
    <Opcode Name="jecxz">
      <Operands Name="'rel:rel8n'" Coding="'addr32' 0xe3:8 'rel':8"/>
    </Opcode>
    <Opcode Name="je" sel="4" Class="branch"/>
    <Opcode Name="jg" sel="0xf" Class="branch"/>
    <Opcode Name="jge" sel="0xd" Class="branch"/>
    <Opcode Name="jl" sel="0xc" Class="branch"/>
    <Opcode Name="jle" sel="0xe" Class="branch"/>

    <Opcode Name="jmp">
      <Operands Name="far 'seg:mem16':{word}'omem:address16'" Coding="'data16' 0xea:8 'omem':16 'seg':16"/>
      <Operands Name="far 'seg:mem16':{dword}'omem:address32'" Coding="'data32' 0xea:8 'omem':32 'seg':16"/>
      <Operands Name="far 'omem:address16'" Coding="0xf:8 0xf:8 'data16' 0xea:8 'omem':16 0:16"/>
      <Operands Name="far 'omem:address32'" Coding="0xf:8 0xf:8 'data32' 0xea:8 'omem':32 0:16"/>
      <Operands Name="far 'rm:rm16bit'" op= "'data16' 0xff:8" mod="5" />
      <Operands Name="far 'rm:rm32bit'" op= "'data32' 0xff:8" mod="5" />
      <Operands Name="short 'rel:rel8'" Coding="0xeb:8 'rel':8"/>
      <Operands Name="near 'rel:rel16jn'" Coding="'data16' 0xe9:8 'rel':16"/>
      <Operands Name="near 'rel:rel32'" Coding="'data32' 0xe9:8 'rel':32"/>
      <Operands Name="'rel:rel16j'" Coding="'data16' 0xe9:8 'rel':16"/>
      <Operands Name="'rel:rel32'" Coding="'data32' 0xe9:8 'rel':32"/>
      <Operands Name="'modreg:reg16rm'" op="'data16' 0xff:8" mod="4" />
      <Operands Name="'modreg:reg32rm'" op="'data32' 0xff:8" mod="4" />
      <Operands Name="'modreg:reg64rmd'" op="'data64' 0xff:8" mod="4" />
      <Operands Name="'modreg:reg64rmb'" op="'data64' 0xff:8" mod="4" />
      <Operands Name="{word} 'rm:rm16bit'" op="'data16' 0xff:8" mod="4" />
      <Operands Name="{dword} 'rm:rm32bit'" op="'data32' 0xff:8" mod="4" />
    </Opcode>
    <Opcode Name="jna" sel="6" Class="branch"/>
    <Opcode Name="jnae" sel="2" Class="branch"/>
    <Opcode Name="jnb" sel="3" Class="branch"/>
    <Opcode Name="jnbe" sel="7" Class="branch"/>
    <Opcode Name="jnc" sel="3" Class="branch"/>
    <Opcode Name="jne" sel="5" Class="branch"/>
    <Opcode Name="jng" sel="0xe" Class="branch"/>
    <Opcode Name="jnge" sel="0xc" Class="branch"/>
    <Opcode Name="jnl" sel="0xd" Class="branch"/>
    <Opcode Name="jnle" sel="0xf" Class="branch"/>
    <Opcode Name="jno" sel="1" Class="branch"/>
    <Opcode Name="jnp" sel="0xb" Class="branch"/>
    <Opcode Name="jns" sel="9" Class="branch"/>
    <Opcode Name="jnz" sel="5" Class="branch"/>
    <Opcode Name="jo" sel="0" Class="branch"/>
    <Opcode Name="jp" sel="0xa" Class="branch"/>
    <Opcode Name="jpe" sel="0xa" Class="branch"/>
    <Opcode Name="jpo" sel="0xb" Class="branch"/>
    <Opcode Name="js" sel="8" Class="branch"/>
    <Opcode Name="jz" sel="4" Class="branch"/>
    <Opcode Name="lahf" op="0x9f:8" Class="single"/>
    <Opcode Name="lar" op1="0x0f:8 0x2:8" Class="reg16rmx"/>
    <Opcode Name="lds" op1="0xc5" Class="reg16rmnrx"/>
    <Opcode Name="lea" op1="0x8d:8" Class="reg16rmnrx"/>
    <Opcode Name="leave" op="0xc9:8" Class="single"/>
    <Opcode Name="les" op1="0xc4:8" Class="reg16rmnrx"/>
    <Opcode Name="lfence" op="0x0f:8 0xae:8 0xe8:8" Class="single"/>
    <Opcode Name="lfs" op1="0x0f:8 0xb4:8" Class="reg16rmnrx"/>
    <Opcode Name="lgdt" op="0x0f:8 1:8" mod="2" Class="nostrictrm"/>
    <Opcode Name="lgs" op1="0x0f:8 0xb5" Class="reg16rmnrx"/>
    <Opcode Name="lidt" op="0x0f:8 1:8" mod="3" Class="nostrictrm"/>
    <Opcode Name="lmsw" op="0x0f:8 1:8" mod="6" Class="nostrictrm">
      <Operands Name="'reg:reg16rm'" op="'data16' 0x0f:8 1:8" mod="6"/>
      <Operands Name="'reg:reg16rmb'" op="'data16' 0x0f:8 1:8" mod="6"/>
    </Opcode>
    <Opcode Name="lods">
      <Operands Name="byte [ds:si]" Coding="'addr16' 0xac:8"/>
      <Operands Name="byte ['seg:segment':si]" Coding="'addr16' 'seg.Prefix':8 0xac:8"/>
      <Operands Name="byte [ds:esi]" Coding="'addr32' 0xac:8"/>
      <Operands Name="byte ['seg:segment':esi]" Coding="'addr32' 'seg.Prefix':8 0xac:8"/>
      <Operands Name="byte [rsi]" Coding="'addr64' 0xac:8"/>
      <Operands Name="byte ['seg:segment':rsi]" Coding="'addr64' 'seg.Prefix':8 0xac:8"/>

      <Operands Name="word [ds:si]" Coding="'data16' 'addr16' 0xad:8"/>
      <Operands Name="word ['seg:segment':si]" Coding="'data16' 'addr16' 'seg.Prefix':8 0xad:8"/>
      <Operands Name="word [ds:esi]" Coding="'data16' 'addr32' 0xad:8"/>
      <Operands Name="word ['seg:segment':esi]" Coding="'data16' 'addr32' 'seg.Prefix':8 0xad:8"/>
      <Operands Name="word [rsi]" Coding="'data16' 'addr64' 0xad:8"/>
      <Operands Name="word ['seg:segment':rsi]" Coding="'data16' 'addr64' 'seg.Prefix':8 0xad:8"/>

      <Operands Name="dword [ds:si]" Coding="'data32' 'addr16' 0xad:8"/>
      <Operands Name="dword ['seg:segment':si]" Coding="'data32' 'addr16' 'seg.Prefix':8 0xad:8"/>
      <Operands Name="dword [ds:esi]" Coding="'data32' 'addr32' 0xad:8"/>
      <Operands Name="dword ['seg:segment':esi]" Coding="'data32' 'addr32' 'seg.Prefix':8 0xad:8"/>
      <Operands Name="dword [rsi]" Coding="'data32' 'addr64' 0xad:8"/>
      <Operands Name="dword ['seg:segment':rsi]" Coding="'data32' 'addr64' 'seg.Prefix':8 0xad:8"/>

      <Operands Name="qword [ds:esi]" Coding="0x48:8 'data64' 'addr32' 0xad:8"/>
      <Operands Name="qword ['seg:segment':esi]" Coding="0x48:8 'data64' 'addr32' 'seg.Prefix':8 0xad:8"/>
      <Operands Name="qword [rsi]" Coding="0x48:8 'data64' 'addr64' 0xad:8"/>
      <Operands Name="qword ['seg:segment':rsi]" Coding="0x48:8 'data64' 'addr64' 'seg.Prefix':8 0xad:8"/>

    </Opcode>
    <Opcode Name="lodsb" op="0xac:8" Class="single"/>
    <Opcode Name="lodsw" op="'data16' 0xad:8" Class="single"/>
    <Opcode Name="lodsd" op="'data32' 0xad:8" Class="single"/>
    <Opcode Name="lodsq" op="0x48:8 'data64' 0xad:8" Class="single"/>
    <Opcode Name="loop">
      <Operands Name="'rel:rel8n'" Coding="0xe2:8 'rel':8"/>
    </Opcode>
    <Opcode Name="loope">
      <Operands Name="'rel:rel8n'" Coding="0xe1:8 'rel':8"/>
    </Opcode>
    <Opcode Name="loopne">
      <Operands Name="'rel:rel8n'" Coding="0xe0:8 'rel':8"/>
    </Opcode>
    <Opcode Name="loopnz">
      <Operands Name="'rel:rel8n'" Coding="0xe0:8 'rel':8"/>
    </Opcode>
    <Opcode Name="loopz">
      <Operands Name="'rel:rel8n'" Coding="0xe1:8 'rel':8"/>
    </Opcode>
    <Opcode Name="lsl" op1="0x0f:8 0x03:8" Class="reg16rmx"/>
    <Opcode Name="lss" op1="0x0f:8 0xb2:8" Class="reg16rmnrx"/>
    <Opcode Name="ltr" op="0x0f:8 0:8" mod="3" Class="nostrictrm">
      <Operands Name="'reg:reg32rm'" op="0x0f:8 0:8" mod="3"/>
      <Operands Name="'reg:reg64rmb'" op="0x0f:8 0:8" mod="3"/>
    </Opcode>
    <Opcode Name="mov">
      <Operands Name="'creg:controlreg', 'modreg:reg32rm'" op="0xf:8 0x22:8" mod="'creg.Ord'" />
      <Operands Name="'dreg:debugreg', 'modreg:reg32rm'" op="0xf:8 0x23:8" mod="'dreg.Ord'" />
      <Operands Name="'treg:tracereg', 'modreg:reg32rm'" op="0xf:8 0x26:8" mod="'treg.Ord'" />
      <Operands Name="al, {byte}['omem:address16']" Coding="'addr16' 0xa0:8 'omem':16"/>
      <Operands Name="al, {byte}['seg:segment':'omem:address16']" Coding="'seg.Prefix':8 'addr16' 0xa0:8 'omem':16"/>
      <Operands Name="al, {byte}['omem:address32']" Coding="'addr32' 0xa0:8 'omem':32"/>
      <Operands Name="al, {byte}['seg:segment':'omem:address32']" Coding="'seg.Prefix':8 'addr32' 0xa0:8 'omem':32"/>
      <Operands Name="ax, {word}['omem:address16']" Coding="'data16' 'addr16' 0xa1:8 'omem':16"/>
      <Operands Name="ax, {word}['seg:segment':'omem:address16']" Coding="'seg.Prefix':8 'data16' 'addr16' 0xa1:8 'omem':16"/>
      <Operands Name="ax, {word}['omem:address32']" Coding="'data16' 'addr32' 0xa1:8 'omem':32"/>
      <Operands Name="ax, {word}['seg:segment':'omem:address32']" Coding="'seg.Prefix':8 'data16' 'addr32' 0xa1:8 'omem':32"/>
      <Operands Name="eax, {dword}['omem:address16']" Coding="'data32' 'addr16' 0xa1:8 'omem':16"/>
      <Operands Name="eax, {dword}['seg:segment':'omem:address16']" Coding="'seg.Prefix':8 'data32' 'addr16' 0xa1:8 'omem':16"/>
      <Operands Name="eax, {dword}['omem:address32']" Coding="'data32' 'addr32' 0xa1:8 'omem':32"/>
      <Operands Name="eax, {dword}['seg:segment':'omem:address32']" Coding="'seg.Prefix':8 'data32' 'addr32' 0xa1:8 'omem':32"/>
      <Operands Name="rax, {qword}['omem:address32']" Coding="0x48:8 'data64' 'addr32' 0xa1:8 'omem':32"/>
      <Operands Name="rax, {qword}['seg:segment':'omem:address32']" Coding="0x48:8 'seg.Prefix':8 'data64' 'addr32' 0xa1:8 'omem':32"/>
      <Operands Name="rax, {qword}['omem:address64']" Coding="0x48:8 'data64' 'addr64' 0xa1:8 'omem':64"/>
      <Operands Name="rax, {qword}['seg:segment':'omem:address64']" Coding="0x48:8 'seg.Prefix':8 'data64' 'addr64' 0xa1:8 'omem':64"/>
      <Operands Name="'modreg:reg8', {byte}'omem:mem8'" Coding="0x16:5 'modreg.Ord':3 'omem':8"/>
      <Operands Name="'modreg:reg16', {word} 'omem:mem16'" Coding="'data16' 0x17:5 'modreg.Ord':3 'omem':16"/>
      <Operands Name="'modreg:reg32', {dword} 'omem:mem32'" Coding="'data32' 0x17:5 'modreg.Ord':3 'omem':32"/>
      <Operands Name="'modreg:reg8b', {byte}'omem:mem8'" Coding="0x16:5 'modreg.Ord':3 'omem':8"/>
      <Operands Name="'modreg:reg16b', {word} 'omem:mem16'" Coding="'data16' 0x17:5 'modreg.Ord':3 'omem':16"/>
      <Operands Name="'modreg:reg32b', {dword} 'omem:mem32'" Coding="'data32' 0x17:5 'modreg.Ord':3 'omem':32"/>
      <Operands Name="'modreg:reg64b', {qword} 'omem:mem64'" Coding="'0x48:8 data64' 0x17:5 'modreg.Ord':3 'omem':32"/>
      <Operands Name="'modreg:reg8', {byte} 'rm:rm8'" op="0x8a:8" mod="'modreg.Ord" R="modreg.R" W="modreg.W" />
      <Operands Name="'modreg:reg16', {word} 'rm:rm16'" op="'data16' 0x8b:8" mod="'modreg.Ord" R="modreg.R" W="modreg.W" />
      <Operands Name="'modreg:reg32', {dword} 'rm:rm32'" op="'data32' 0x8b:8" mod="'modreg.Ord" R="modreg.R" W="modreg.W" />
      <Operands Name="'modreg:reg8b', {byte} 'rm:rm8b'" op="0x8a:8" mod="'modreg.Ord" R="modreg.R" W="modreg.W" />
      <Operands Name="'modreg:reg16b', {word} 'rm:rm16b'" op="'data16' 0x8b:8" mod="'modreg.Ord" R="modreg.R" W="modreg.W" />
      <Operands Name="'modreg:reg32b', {dword} 'rm:rm32b'" op="'data32' 0x8b:8" mod="'modreg.Ord" R="modreg.R" W="modreg.W" />
      <Operands Name="'modreg:reg64b', {qword} 'rm:rm64b'" op="'data64' 0x8b:8" mod="'modreg.Ord" R="modreg.R" W="modreg.W" />
      <Operands Name="byte 'rm:rm8', {byte}'omem:mem8'" op="0xc6:8" mod="0" Coding="native 'omem':8"/>
      <Operands Name="word 'rm:rm16', {word}'omem:mem16'" op="'data16' 0xc7:8" mod="0" Coding="native 'omem':16"/>
      <Operands Name="dword 'rm:rm32', {dword}'omem:mem32'" op="'data32' 0xc7:8" mod="0" Coding="native 'omem':32"/>
      <Operands Name="qword 'rm:rm64', {qword}'omem:mem32'" op="'data32' 0xc7:8" mod="0" Coding="native 'omem':32"/>
      <Operands Name="byte 'rm:rm8b', {byte}'omem:mem8'" op="0xc6:8" mod="0" Coding="native 'omem':8"/>
      <Operands Name="word 'rm:rm16b', {word}'omem:mem16'" op="'data16' 0xc7:8" mod="0" Coding="native 'omem':16"/>
      <Operands Name="dword 'rm:rm32b', {dword}'omem:mem32'" op="'data32' 0xc7:8" mod="0" Coding="native 'omem':32"/>
      <Operands Name="qword 'rm:rm64b', {qword}'omem:mem32'" op="'data32' 0xc7:8" mod="0" Coding="native 'omem':32"/>
      <Operands Name="'modreg:reg32rm', 'creg:controlreg'" op="0xf:8 0x20:8" mod="'creg.Ord'" />
      <Operands Name="'modreg:reg32rm', 'dreg:debugreg'" op="0xf:8 0x21:8" mod="'dreg.Ord'" />
      <Operands Name="'modreg:reg32rm', 'treg:tracereg'" op="0xf:8 0x24:8" mod="'treg.Ord'" />
      <Operands Name="{byte} ['omem:address16'],al" Coding="'addr16' 0xa2:8 'omem':16"/>
      <Operands Name="{byte} ['seg:segment':'omem:address16'],al" Coding="'seg.Prefix':8 'addr16' 0xa2:8 'omem':16"/>
      <Operands Name="{byte} ['omem:address32'],al" Coding="'addr32' 0xa2:8 'omem':32"/>
      <Operands Name="{byte} ['seg:segment':'omem:address32'],al" Coding="'seg.Prefix':8 'addr32' 0xa2:8 'omem':32"/>
      <Operands Name="{word} ['omem:address16'],ax" Coding="'data16' 'addr16' 0xa3:8 'omem':16"/>
      <Operands Name="{word} ['seg:segment':'omem:address16'],ax" Coding="'seg.Prefix':8 'data16' 'addr16' 0xa3:8 'omem':16"/>
      <Operands Name="{word} ['omem:address32'],ax" Coding="'data16' 'addr32' 0xa3:8 'omem':32"/>
      <Operands Name="{word} ['seg:segment':'omem:address32'],ax" Coding="'seg.Prefix':8 'data16' 'addr32' 0xa3:8 'omem':32"/>
      <Operands Name="{dword} ['omem:address16'],eax" Coding="'data32' 'addr16' 0xa3:8 'omem':16"/>
      <Operands Name="{dword} ['seg:segment':'omem:address16'],eax" Coding="'seg.Prefix':8 'data32' 'addr16' 0xa3:8 'omem':16"/>
      <Operands Name="{dword} ['omem:address32'],eax" Coding="'data32' 'addr32' 0xa3:8 'omem':32"/>
      <Operands Name="{dword} ['seg:segment':'omem:address32'],eax" Coding="'seg.Prefix':8 'data32' 'addr32' 0xa3:8 'omem':32"/>
      <Operands Name="{qword} ['omem:address32'],rax" Coding="0x48:8 'data64' 'addr32' 0xa3:8 'omem':16"/>
      <Operands Name="{qword} ['seg:segment':'omem:address32],rax" Coding="0x48:8 'seg.Prefix':8 'data64' 'addr32' 0xa3:8 'omem':16"/>
      <Operands Name="{qword} ['omem:address64'],rax" Coding="0x48:8 'data64' 'addr64' 0xa3:8 'omem':32"/>
      <Operands Name="{qword} ['seg:segment':'omem:address64'],rax" Coding="0x48:8 'seg.Prefix':8 'data64' 'addr64' 0xa3:8 'omem':32"/>
      <Operands Name="{byte} 'rm:rm8', 'modreg:reg8'" op="0x88:8" mod="'modreg.Ord" R="modreg.R" W="modreg.W" />
      <Operands Name="{word} 'rm:rm16', 'modreg:reg16'" op="'data16' 0x89:8" mod="'modreg.Ord" R="modreg.R" W="modreg.W" />
      <Operands Name="{dword} 'rm:rm32', 'modreg:reg32'" op="'data32' 0x89:8" mod="'modreg.Ord" R="modreg.R" W="modreg.W" />
      <Operands Name="{byte} 'rm:rm8b', 'modreg:reg8b'" op="0x88:8" mod="'modreg.Ord" R="modreg.R" W="modreg.W" />
      <Operands Name="{word} 'rm:rm16b', 'modreg:reg16b'" op="'data16' 0x89:8" mod="'modreg.Ord" R="modreg.R" W="modreg.W" />
      <Operands Name="{dword} 'rm:rm32b', 'modreg:reg32b'" op="'data32' 0x89:8" mod="'modreg.Ord" R="modreg.R" W="modreg.W" />
      <Operands Name="{qword} 'rm:rm64b', 'modreg:reg64b'" op="'data64' 0x89:8" mod="'modreg.Ord" R="modreg.R" W="modreg.W" />
      <Operands Name="'segm:segment',{word} 'rm:rm16'" op="0x8e:8" mod="'segm.Ord'" R="modreg.R" W="modreg.W" />
      <Operands Name="'segm:segment',{dword} 'modreg:reg32rm'" op="0x8e:8" mod="'segm.Ord'" />
      <Operands Name="{word} 'rm:rm16','segm:segment'" op="0x8c:8" mod="'segm.Ord'" />
      <Operands Name="{dword} 'modreg:reg32rm','segm:segment'" op="0x8c:8" mod="'segm.Ord'" />
      <Operands Name="'segm:segment',{word} 'rm:rm16b'" op="0x8e:8" mod="'segm.Ord'" R="modreg.R" W="modreg.W" />
      <Operands Name="'segm:segment',{dword} 'modreg:reg32rmb'" op="0x8e:8" mod="'segm.Ord'" />
      <Operands Name="'segm:segment',{dword} 'modreg:reg64rmb'" op="0x8e:8" mod="'segm.Ord'" />
      <Operands Name="{word} 'rm:rm16b','segm:segment'" op="0x8c:8" mod="'segm.Ord'" />
      <Operands Name="{dword} 'modreg:reg32rmb','segm:segment'" op="0x8c:8" mod="'segm.Ord'" />
      <Operands Name="{dword} 'modreg:reg64rmb','segm:segment'" op="0x8c:8" mod="'segm.Ord'" />
      <Operands Name="'rm:reg8rm', {byte}'omem:mem8'" op="0xc6:8" mod="0" Coding="native 'omem':8"/>
      <Operands Name="'rm:reg16rm', {word}'omem:mem16'" op="'data16' 0xc7:8" mod="0" Coding="native 'omem':16"/>
      <Operands Name="'rm:reg32rm', {dword}'omem:mem32'" op="'data32' 0xc7:8" mod="0" Coding="native 'omem':32"/>
      <Operands Name="'rm:reg8rmb', {byte}'omem:mem8'" op="0xc6:8" mod="0" Coding="native 'omem':8"/>
      <Operands Name="'rm:reg16rmb', {word}'omem:mem16'" op="'data16' 0xc7:8" mod="0" Coding="native 'omem':16"/>
      <Operands Name="'rm:reg32rmb', {dword}'omem:mem32'" op="'data32' 0xc7:8" mod="0" Coding="native 'omem':32"/>
      <Operands Name="'rm:reg64rmb', {dword}'omem:mem64'" op="'data64' 0xc7:8" mod="0" Coding="native 'omem':32"/>
    </Opcode>
    <Opcode Name="movs">
      <Operands Name="byte es:[di], byte [ds:si]" Coding="'addr16' 0xa4:8"/>
      <Operands Name="byte es:[di], byte ['seg:segment':si]" Coding="'addr16' 'seg.Prefix':8 0xa4:8"/>
      <Operands Name="byte es:[edi], byte [ds:esi]" Coding="'addr32' 0xa4:8"/>
      <Operands Name="byte es:[edi], byte ['seg:segment':esi]" Coding="'addr32' 'seg.Prefix':8 0xa4:8"/>
      <Operands Name="byte [rdi], byte [rsi]" Coding="'addr64' 0xa4:8"/>
      <Operands Name="byte [rdi], byte ['seg:segment':rsi]" Coding="'addr64' 'seg.Prefix':8 0xa4:8"/>

      <Operands Name="word es:[di], word [ds:si]" Coding="'data16' 'addr16' 0xa5"/>
      <Operands Name="word es:[di], word ['seg:segment':si]" Coding="'data16' 'addr16' 'seg.Prefix':8 0xa5"/>
      <Operands Name="word es:[edi], word [ds:esi]" Coding="'data16' 'addr32' 0xa5"/>
      <Operands Name="word es:[edi], word ['seg:segment':esi]" Coding="'data16' 'addr32' 'seg.Prefix':8 0xa5"/>
      <Operands Name="word [rdi], word [rsi]" Coding="'data16' 'addr64' 0xa5"/>
      <Operands Name="word [rdi], word ['seg:segment':rsi]" Coding="'data16' 'addr64' 'seg.Prefix':8 0xa5"/>

      <Operands Name="dword es:[di], dword [ds:si]" Coding="'data32' 'addr16' 0xa5"/>
      <Operands Name="dword es:[di], dword ['seg:segment':si]" Coding="'data32' 'addr16' 'seg.Prefix':8 0xa5"/>
      <Operands Name="dword es:[edi], dword [ds:esi]" Coding="'data32' 'addr32' 0xa5"/>
      <Operands Name="dword es:[edi], dword ['seg:segment':esi]" Coding="'data32' 'addr32' 'seg.Prefix':8 0xa5"/>
      <Operands Name="dword [rdi], dword [rsi]" Coding="'data32' 'addr64' 0xa5"/>
      <Operands Name="dword [rdi], dword ['seg:segment':rsi]" Coding="'data32' 'addr64' 'seg.Prefix':8 0xa5"/>

      <Operands Name="qword es:[edi], qword [ds:esi]" Coding="0x48:8 'data64' 'addr64' 0xa5"/>
      <Operands Name="qword es:[edi], qword ['seg:segment':esi]" Coding="0x48:8 'data64' 'addr64' 'seg.Prefix':8 0xa5"/>
      <Operands Name="qword [rdi], qword [rsi]" Coding="0x48:8 'data64' 'addr64' 0xa5"/>
      <Operands Name="qword [rdi], qword ['seg:segment':rsi]" Coding="0x48:8 'data64' 'addr64' 'seg.Prefix':8 0xa5"/>
    </Opcode>
    <Opcode Name="movbe" op1="0x0f:8 0x38:8 0xf0:8">
      <Operands Name="'modreg:reg16', {word} 'rm:rm16'" mod="'modreg.Ord" R="modreg.R" W="modreg.W" op="'data16' 'op1'"/>
      <Operands Name="'modreg:reg32', {dword} 'rm:rm32'" mod="'modreg.Ord" R="modreg.R" W="modreg.W" op="'data32' 'op1'" />
      <Operands Name="'modreg:reg16b', {word} 'rm:rm16b'" mod="'modreg.Ord" R="modreg.R" W="modreg.W" op="'data16' 'op1'" />
      <Operands Name="'modreg:reg32b', {dword} 'rm:rm32b'" mod="'modreg.Ord" R="modreg.R" W="modreg.W" op="'data32' 'op1'" />
      <Operands Name="'modreg:reg64b', {qword} 'rm:rm64b'" mod="'modreg.Ord" R="modreg.R" W="modreg.W" op="'data64' 'op1'" />
      <Operands Name="{word} 'rm:rm16', 'modreg:reg16'" mod="'modreg.Ord" R="modreg.R" W="modreg.W" op="'data16' 'op1'" />
      <Operands Name="{dword} 'rm:rm32', 'modreg:reg32'" mod="'modreg.Ord" R="modreg.R" W="modreg.W" op="'data32' 'op1'" />
      <Operands Name="{word} 'rm:rm16b', 'modreg:reg16b'" mod="'modreg.Ord" R="modreg.R" W="modreg.W" op="'data16' 'op1'" />
      <Operands Name="{dword} 'rm:rm32b', 'modreg:reg32b'" mod="'modreg.Ord" R="modreg.R" W="modreg.W" op="'data32'  'op1'" />
      <Operands Name="{qword} 'rm:rm64b', 'modreg:reg64b'" mod="'modreg.Ord" R="modreg.R" W="modreg.W" op="'data64'  'op1'" />
    </Opcode>
    <Opcode Name="movsb" op="0xa4:8" Class="single"/>
    <Opcode Name="movsw" op="'data16' 0xa5" Class="single"/>
    <Opcode Name="movsd">
      <Operand Name="empty" op="'data32' 0xa5" Class="single"/>
      <Operands Name="'modreg:regsse', 'rm:sserm'" mand="0xf2:8" op="0x0f:8 0x10:8" mod="'modreg.Ord" R="modreg.R" W="modreg.W" />
      <Operands Name="'modreg:regsseb', 'rm:sserm'" mand="0xf2:8" op="0x0f:8 0x10:8" mod="'modreg.Ord" R="modreg.R" W="modreg.W" />
      <Operands Name="'rm:sserm', 'modreg:regsse'" mand="0xf2:8" op="0x0f:8 0x11:8" mod="'modreg.Ord" R="modreg.R" W="modreg.W" />
      <Operands Name="'rm:sserm', 'modreg:regsseb'" mand="0xf2:8" op="0x0f:8 0x11:8" mod="'modreg.Ord" R="modreg.R" W="modreg.W" />
    </Opcode>
    <Opcode Name="movsq" op="0x48:8 'data64' 0xa5" Class="single"/>
    <Opcode Name="movsx" op1="0xbe" Class="movx"/>
    <Opcode Name="movzx" op1="0xb6" Class="movx"/>
    <Opcode Name="movsxd">
      <Operands Name="'modreg:reg32','rm:reg32rm'" op="'data32' 0x63:8" mod="'modreg.Ord" R="modreg.R" W="modreg.W" />
      <Operands Name="'modreg:reg32', dword rm:rm32'" op="'data32' 0x63:8" mod="'modreg.Ord" R="modreg.R" W="modreg.W" />
      <Operands Name="'modreg:reg32b','rm:reg32rmb'" op="'data32' 0x63:8" mod="'modreg.Ord" R="modreg.R" W="modreg.W" />
      <Operands Name="'modreg:reg64b','rm:reg32rmb'" op="'data64' 0x63:8" mod="'modreg.Ord" R="modreg.R" W="modreg.W" />
      <Operands Name="'modreg:reg32b', dword rm:rm32b'" op="'data32' 0x63:8" mod="'modreg.Ord" R="modreg.R" W="modreg.W" />
      <Operands Name="'modreg:reg64b', dword 'rm:rm32b'" op="'data64' 0x63:8" mod="'modreg.Ord" R="modreg.R" W="modreg.W" />

    </Opcode>
    <Opcode Name="mul" mod="4" Class="sizedrm"/>
    <Opcode Name="neg" mod="3" Class="sizedrm"/>
    <Opcode Name="nop" op="0x90:8" Class="single"/>
    <Opcode Name="not" mod="2" Class="sizedrm"/>
    <Opcode Name="or"  op1="0x0c:8" op2="0x08" mod="1" Class="math"/>
    <Opcode Name="out">
      <Operands Name="{byte}'port:mem8',al" Coding="0xe6:8 'port':8"/>
      <Operands Name="{word}'port:mem8',ax" Coding="'data16' 0xe7:8 'port':8"/>
      <Operands Name="{dword}'port:mem8',eax" Coding="'data32' 0xe7:8 'port':8"/>
      <Operands Name="{qword}'port:mem8',rax" Coding="0x48:8 'data64' 0xe7:8 'port':8"/>
      <Operands Name="dx,al" Coding="0xee:8"/>
      <Operands Name="dx,ax" Coding="'data16' 0xef:8"/>
      <Operands Name="dx,eax" Coding="'data32' 0xef:8"/>
      <Operands Name="dx,rax" Coding="0x48:8 'data64' 0xef:8"/>
    </Opcode>
    <Opcode Name="outs">
      <Operands Name="dx,byte [ds:si]" Coding="'addr16'  0x0f:8 0x6e:8"/>
      <Operands Name="dx,byte ['seg:segment':si]" Coding="'addr16' 'seg.Prefix':8 0x0f:8 0x6e:8"/>
      <Operands Name="dx,byte [ds:esi]" Coding="'addr32' 0x0f:8 0x6e:8"/>
      <Operands Name="dx,byte ['seg:segment':esi]" Coding="'addr32' 'seg.Prefix':8 0x0f:8 0x6e:8"/>
      <Operands Name="dx,byte [rsi]" Coding="'addr64' 0x0f:8 0x6e:8"/>
      <Operands Name="dx,byte ['seg:segment':rsi]" Coding="'addr64' 'seg.Prefix':8 0x0f:8 0x6e:8"/>

      <Operands Name="dx,word [ds:si]" Coding="'data16' 'addr16' 0x0f:8 0x6f:8"/>
      <Operands Name="dx,word ['seg:segment':si]" Coding="'data16' 'addr16' 'seg.Prefix':8 0x0f:8 0x6f:8"/>
      <Operands Name="dx,word [ds:esi]" Coding="'data16' 'addr32' 0x0f:8 0x6f:8"/>
      <Operands Name="dx,word ['seg:segment':esi]" Coding="'data16' 'addr32' 'seg.Prefix':8 0x0f:8 0x6f:8"/>
      <Operands Name="dx,word [rsi]" Coding="'data16' 'addr64' 0x0f:8 0x6f:8"/>
      <Operands Name="dx,word ['seg:segment':rsi]" Coding="'data16' 'addr64' 'seg.Prefix':8 0x0f:8 0x6f:8"/>

      <Operands Name="dx,dword [ds:si]" Coding="'data32' 'addr16' 0x0f:8 0x6f:8"/>
      <Operands Name="dx,dword ['seg:segment':si]" Coding="'data32' 'addr16' 'seg.Prefix':8 0x0f:8 0x6f:8"/>
      <Operands Name="dx,dword [ds:esi]" Coding="'data32' 'addr32' 0x0f:8 0x6f:8"/>
      <Operands Name="dx,dword ['seg:segment':esi]" Coding="'data32' 'addr32' 'seg.Prefix':8 0x0f:8 0x6f:8"/>
      <Operands Name="dx,dword [rsi]" Coding="'data32' 'addr64' 0x0f:8 0x6f:8"/>
      <Operands Name="dx,dword ['seg:segment':rsi]" Coding="'data64' 'addr32' 'seg.Prefix':8 0x0f:8 0x6f:8"/>
    </Opcode>
    <Opcode Name="outsb" op="0x6e:8" Class="twobyte"/>
    <Opcode Name="outsw" op="'data16' 0x6f:8" Class="twobyte"/>
    <Opcode Name="outsd" op="'data32' 0x6f:8" Class="twobyte"/>
    <Opcode Name="pop">
      <Operands Name="'modreg:reg16'" Coding="'data16' 0xb:5 'modreg.Ord':3"/>
      <Operands Name="'modreg:reg32'" Coding="'data32' 0xb:5 'modreg.Ord':3"/>
      <Operands Name="'modreg:reg16b'" Coding="0x40+'modreg.R':8 'data16' 0xb:5 'modreg.Ord':3"/>
      <Operands Name="'modreg:reg32b'" Coding="0x40+'modreg.R':8 'data32' 0xb:5 'modreg.Ord':3"/>
      <Operands Name="'modreg:reg64b'" Coding="0x48+'modreg.R':8 'data64' 0xb:5 'modreg.Ord':3"/>
      <Operands Name="word 'rm:rm16'" op="'data16' 0x8f:8" mod="0" />
      <Operands Name="dword 'rm:rm32'" op="'data32' 0x8f:8" mod="0" />
      <Operands Name="qword 'rm:rm64d'" op="'data64' 0x8f:8" mod="0" />
      <Operands Name="word 'rm:rm16b'" op="'data16' 0x8f:8" mod="0" />
      <Operands Name="dword 'rm:rm32b'" op="'data32' 0x8f:8" mod="0" />
      <Operands Name="qword 'rm:rm64b'" op="'data64' 0x8f:8" mod="0" />
      <Operands Name="fs" Coding="0x0f:8 0xa1:8"/>
      <Operands Name="gs" Coding="0x0f:8 0xa9:8"/>
      <Operands Name="'seg:segment'" Coding="0:2 'seg.Ord':3 7:3"/>
    </Opcode>
    <Opcode Name="popa" op="0x61:8" Class="single"/>
    <Opcode Name="popaw" op="'data16' 0x61:8" Class="single"/>
    <Opcode Name="popad" op="'data32' 0x61:8" Class="single"/>
    <Opcode Name="popcnt" mand="0xf3:8" opcode="0x0f:8 0xb8:8" class="reg16rmx"/>
    <Opcode Name="popf" op="0x9d:8" Class="single"/>
    <Opcode Name="popfw" op="'data16' 0x9d:8" Class="single"/>
    <Opcode Name="popfd" op="'data32' 0x9d:8" Class="single"/>
    <Opcode Name="popfq" op="0x48:8 'data64' 0x9d:8" Class="single"/>
    <Opcode Name="prefetchnta">
      <Operands Name="rm:rm'" op="0x0f:8 0x18:8" mod="0" R="0" W="0"/>
    </Opcode>
    <Opcode Name="prefetcht0">
      <Operands Name="rm:rm'" op="0x0f:8 0x18:8" mod="0" R="0" W="1"/>
    </Opcode>
    <Opcode Name="prefetcht1">
      <Operands Name="rm:rm'" op="0x0f:8 0x18:8" mod="0" R="0" W="2"/>
    </Opcode>
    <Opcode Name="prefetcht2">
      <Operands Name="rm:rm'" op="0x0f:8 0x18:8" mod="0" R="0" W="3"/>
    </Opcode>
    <Opcode Name="push">
      <Operands Name="'modreg:reg16'" Coding="'data16' 0xa:5 'modreg.Ord':3"/>
      <Operands Name="'modreg:reg32'" Coding="'data32' 0xa:5 'modreg.Ord':3"/>
      <Operands Name="'modreg:reg16b'" Coding="0x48+'modreg.reg':8 'data16' 0xa:5 'modreg.Ord':3"/>
      <Operands Name="'modreg:reg32b'" Coding="0x48+'modreg.reg':8 'data32' 0xa:5 'modreg.Ord':3"/>
      <Operands Name="'modreg:reg64b'" Coding="0x48+'modreg.reg':8 'data64' 0xa:5 'modreg.Ord':3"/>
      <Operands Name="{byte} 'omem:signed8'" Coding="0x6a:8 'omem':8"/>
      <Operands Name="'omem:address16'" Coding="'data16' 0x68:8 'omem':16"/>
      <Operands Name="'omem:address32'" Coding="'data32' 0x68:8 'omem':32"/>
      <Operands Name="'omem:address64'" Coding="0x48:8 'data64' 0x68:8 'omem':64"/>
      <Operands Name="word 'omem:mem16'" Coding="'data16' 0x68:8 'omem':16"/>
      <Operands Name="dword 'omem:mem32'" Coding="'data32' 0x68:8 'omem':32"/>
      <Operands Name="qword 'omem:mem64'" Coding="0x48:8 'data64' 0x68:8 'omem':32"/>
      <Operands Name="word 'rm:rm16'" op="0xff:8" mod="6" Coding="'data16' native"/>
      <Operands Name="dword 'rm:rm32'" op="0xff:8" mod="6" Coding="'data32' native"/>
      <Operands Name="qword 'rm:rm64d'" op="0xff:8" mod="6" Coding="'data32' native"/>
      <Operands Name="word 'rm:rm16b'" op="0xff:8" mod="6" Coding="'data16' native"/>
      <Operands Name="dword 'rm:rm32b'" op="0xff:8" mod="6" Coding="'data32' native"/>
      <Operands Name="qword 'rm:rm64b'" op="0xff:8" mod="6" Coding="'data32' native"/>
      <Operands Name="fs" Coding="0x0f:8 0xa0:8"/>
      <Operands Name="gs" Coding="0x0f:8 0xa8:8"/>
      <Operands Name="'seg:segment'" Coding="0:2 'seg.Ord':3 6:3"/>
    </Opcode>
    <Opcode Name="pusha" op="0x60:8" Class="single"/>
    <Opcode Name="pushaw" op="'data16' 0x60:8" Class="single"/>
    <Opcode Name="pushad" op="'data32' 0x60:8" Class="single"/>
    <Opcode Name="pushf" op="0x9c:8" Class="single"/>
    <Opcode Name="pushfw" op="'data16' 0x9c:8" Class="single"/>
    <Opcode Name="pushfd" op="'data32' 0x9c:8" Class="single"/>
    <Opcode Name="pushfq" op="0x48:8 'data64' 0x9c:8" Class="single"/>
    <Opcode Name="rcl" mod="2" Class="shift"/>
    <Opcode Name="rcr" mod="3" Class="shift"/>
    <Opcode Name="rdmsr" op="0x32:8" Class="twobyte"/>
    <Opcode Name="rdpmc" op="0x33:8" Class="twobyte"/>
    <Opcode Name="rdtsc" op="0x31:8" Class="twobyte"/>
    <Opcode Name="ret">
      <Operands Name="'omem:mem16'" Coding="0xc2:8 'omem':16"/>
      <Operands Name="empty" Coding="0xc3:8"/>
    </Opcode>
    <Opcode Name="retf">
      <Operands Name="'omem:mem16'" Coding="0xca:8 'omem':16"/>
      <Operands Name="empty" Coding="0xcb:8"/>
    </Opcode>
    <Opcode Name="rol" mod="0" Class="shift"/>
    <Opcode Name="ror" mod="1" Class="shift"/>
    <Opcode Name="rsm" op="0xaa:8" Class="twobyte"/>
    <Opcode Name="sahf" op="0x9e:8" Class="single"/>
    <Opcode Name="sal" mod="4" Class="shift"/>
    <Opcode Name="sar" mod="7" Class="shift"/>
    <Opcode Name="sbb" op1="0x1c:8" op2="0x18" mod="3" Class="math"/>
    <Opcode Name="scas">
      <Operands Name="byte es:[di]" Coding="'addr16' 0xae:8"/>
      <Operands Name="byte ['seg:segment':di]" Coding="'addr16' 'seg.Prefix':8 0xae:8"/>
      <Operands Name="byte es:[edi]" Coding="'addr32' 0xae:8"/>
      <Operands Name="byte ['seg:segment':edi]" Coding="'addr32' 'seg.Prefix':8 0xae:8"/>
      <Operands Name="byte [rdi]" Coding="'addr64' 0xae:8"/>
      <Operands Name="byte ['seg:segment':rdi]" Coding="'addr64' 'seg.Prefix':8 0xae:8"/>

      <Operands Name="word es:[di]" Coding="'data16' 'addr16' 0xaf:8"/>
      <Operands Name="word ['seg:segment':di]" Coding="'data16' 'addr16' 'seg.Prefix':8 0xaf:8"/>
      <Operands Name="word es:[edi]" Coding="'data16' 'addr32' 0xaf:8"/>
      <Operands Name="word ['seg:segment':edi]" Coding="'data16' 'addr32' 'seg.Prefix':8 0xaf:8"/>
      <Operands Name="word [rdi]" Coding="'data16' 'addr64' 0xaf:8"/>
      <Operands Name="word ['seg:segment':rdi]" Coding="'data16' 'addr64' 'seg.Prefix':8 0xaf:8"/>

      <Operands Name="dword es:[di]" Coding="'data32' 'addr16' 0xaf:8"/>
      <Operands Name="dword ['seg:segment':di]" Coding="'data32' 'addr16' 'seg.Prefix':8 0xaf:8"/>
      <Operands Name="dword es:[edi]" Coding="'data32' 'addr32' 0xaf:8"/>
      <Operands Name="dword ['seg:segment':edi]" Coding="'data32' 'addr32' 'seg.Prefix':8 0xaf:8"/>
      <Operands Name="dword [rdi]" Coding="'data32' 'addr64' 0xaf:8"/>
      <Operands Name="dword ['seg:segment':rdi]" Coding="'data64' 'addr32' 'seg.Prefix':8 0xaf:8"/>

      <Operands Name="qword es:[edi]" Coding="0x48:8 'data64' 'addr64' 0xaf:8"/>
      <Operands Name="qword ['seg:segment':edi]" Coding="0x48:8 'data64' 'addr64' 'seg.Prefix':8 0xaf:8"/>
      <Operands Name="qword [rdi]" Coding="0x48:8 'data64' 'addr64' 0xaf:8"/>
      <Operands Name="qword ['seg:segment':rdi]" Coding="0x48:8 'data64' 'addr64' 'seg.Prefix':8 0xaf:8"/>

    </Opcode>
    <Opcode Name="scasb" op="0xae:8" Class="single"/>
    <Opcode Name="scasw" op="'data16' 0xaf:8" Class="single"/>
    <Opcode Name="scasd" op="'data32' 0xaf:8" Class="single"/>
    <Opcode Name="scasq" op="0x48:8 'data64' 0xaf:8" Class="single"/>
    <Opcode Name="seta" sel="7" Class="set"/>
    <Opcode Name="setae" sel="3" Class="set"/>
    <Opcode Name="setb" sel="2" Class="set"/>
    <Opcode Name="setbe" sel="6" Class="set"/>
    <Opcode Name="setc" sel="2" Class="set"/>
    <Opcode Name="sete" sel="4" Class="set"/>
    <Opcode Name="setg" sel="0xf" Class="set"/>
    <Opcode Name="setge" sel="0xd" Class="set"/>
    <Opcode Name="setl" sel="0xc" Class="set"/>
    <Opcode Name="setle" sel="0xe" Class="set"/>
    <Opcode Name="setna" sel="6" Class="set"/>
    <Opcode Name="setnae" sel="2" Class="set"/>
    <Opcode Name="setnb" sel="3" Class="set"/>
    <Opcode Name="setnbe" sel="7" Class="set"/>
    <Opcode Name="setnc" sel="3" Class="set"/>
    <Opcode Name="setne" sel="5" Class="set"/>
    <Opcode Name="setng" sel="0xe" Class="set"/>
    <Opcode Name="setnge" sel="0xc" Class="set"/>
    <Opcode Name="setnl" sel="0xd" Class="set"/>
    <Opcode Name="setnle" sel="0xf" Class="set"/>
    <Opcode Name="setno" sel="1" Class="set"/>
    <Opcode Name="setnp" sel="0xb" Class="set"/>
    <Opcode Name="setns" sel="9" Class="set"/>
    <Opcode Name="setnz" sel="5" Class="set"/>
    <Opcode Name="seto" sel="0" Class="set"/>
    <Opcode Name="setp" sel="0xa" Class="set"/>
    <Opcode Name="setpe" sel="0xa" Class="set"/>
    <Opcode Name="setpo" sel="0xb" Class="set"/>
    <Opcode Name="sets" sel="8" Class="set"/>
    <Opcode Name="setz" sel="4" Class="set"/>
    <Opcode Name="sfence" op="0x0f:8 0xae:8 0xf8:8" Class="single"/>
    <Opcode Name="shl" mod="4" Class="shift"/>
    <Opcode Name="shld" op1="0xa4" Class="regshift"/>
    <Opcode Name="shr" mod="5" Class="shift"/>
    <Opcode Name="shrd" op1="0xac" Class="regshift"/>
    <Opcode Name="sidt" op="0x0f:8 1:8" mod="1" Class="nostrictrm"/>
    <Opcode Name="sldt" op="0x0f:8 0:8" mod="0" Class="nostrictrm"/>
    <Opcode Name="smsw" op="0x0f:8 1:8" mod="4" Class="nostrictrm">
      <Operands Name="'reg:reg16rm'" op="'data16' 0x0f:8 1:8" mod="4"/>
      <Operands Name="'reg:reg16rmb'" op="'data16' 0x0f:8 1:8" mod="4"/>
    </Opcode>
    <Opcode Name="stc" op="0xf9:8" Class="single"/>
    <Opcode Name="std" op="0xfd:8" Class="single"/>
    <Opcode Name="sti" op="0xfb:8" Class="single"/>
    <Opcode Name="stos">
      <Operands Name="byte es:[di]" Coding="'addr16' 0xaa:8"/>
      <Operands Name="byte ['seg:segment':di]" Coding="'addr16' 'seg.Prefix':8 0xaa:8"/>
      <Operands Name="byte es:[edi]" Coding="'addr32' 0xaa:8"/>
      <Operands Name="byte ['seg:segment':edi]" Coding="'addr32' 'seg.Prefix':8 0xaa:8"/>
      <Operands Name="byte [rdi]" Coding="'addr64' 0xaa:8"/>
      <Operands Name="byte ['seg:segment':rdi]" Coding="'addr64' 'seg.Prefix':8 0xaa:8"/>

      <Operands Name="word es:[di]" Coding="'data16' 'addr16' 0xab:8"/>
      <Operands Name="word ['seg:segment':di]" Coding="'data16' 'addr16' 'seg.Prefix':8 0xab:8"/>
      <Operands Name="word es:[edi]" Coding="'data16' 'addr32' 0xab:8"/>
      <Operands Name="word ['seg:segment':edi]" Coding="'data16' 'addr32' 'seg.Prefix':8 0xab:8"/>
      <Operands Name="word [rdi]" Coding="'data16' 'addr64' 0xab:8"/>
      <Operands Name="word ['seg:segment':rdi]" Coding="'data16' 'addr64' 'seg.Prefix':8 0xab:8"/>

      <Operands Name="dword es:[di]" Coding="'data32' 'addr16' 0xab:8"/>
      <Operands Name="dword ['seg:segment':di]" Coding="'data32' 'addr16' 'seg.Prefix':8 0xab:8"/>
      <Operands Name="dword es:[edi]" Coding="'data32' 'addr32' 0xab:8"/>
      <Operands Name="dword ['seg:segment':edi]" Coding="'data32' 'addr32' 'seg.Prefix':8 0xab:8"/>
      <Operands Name="dword [rdi]" Coding="'data32' 'addr64' 0xab:8"/>
      <Operands Name="dword ['seg:segment':rdi]" Coding="'data32' 'addr64' 'seg.Prefix':8 0xab:8"/>

      <Operands Name="qword es:[edi]" Coding="0x48:8 'data64' 'addr64' 0xab:8"/>
      <Operands Name="qword ['seg:segment':edi]" Coding="0x48:8 'data64' 'addr64' 'seg.Prefix':8 0xab:8"/>
      <Operands Name="qword [rdi]" Coding="0x48:8 'data64' 'addr64' 0xab:8"/>
      <Operands Name="qword ['seg:segment':rdi]" Coding="0x48:8 'data64' 'addr64' 'seg.Prefix':8 0xab:8"/>
    </Opcode>
    <Opcode Name="stosb" op="0xaa:8" Class="single"/>
    <Opcode Name="stosw" op="'data16' 0xab:8" Class="single"/>
    <Opcode Name="stosd" op="'data32' 0xab:8" Class="single"/>
    <Opcode Name="stosq" op="0x48:8 'data64' 0xab:8" Class="single"/>
    <Opcode Name="str" op="0x0f:8 0:8" mod="1" Class="nostrictrm">
      <Operands Name="'reg:reg16rm'" op="'data16' 0x0f:8 0:8" mod="1"/>
      <Operands Name="'reg:reg32rm'" op="'data32' 0x0f:8 0:8" mod="1"/>
      <Operands Name="'reg:reg16rmb'" op="'data16' 0x0f:8 0:8" mod="1"/>
      <Operands Name="'reg:reg32rmb'" op="'data32' 0x0f:8 0:8" mod="1"/>
    </Opcode>
    <Opcode Name="sub" op1="0x2c:8" op2="0x28" mod="5" Class="math"/>
    <Opcode Name="syscall" op="0x05" Class="twobyte"/>
    <Opcode Name="sysenter" op="0x34:8" Class="twobyte"/>
    <Opcode Name="sysexit" op="0x35" Class="twobyte"/>
    <Opcode Name="sysret" op="0x07:8" Class="twobyte"/>
    <Opcode Name="test">
      <Operands Name="al, {byte} 'omem:mem8'" Coding="0xa8:8 'omem':8"/>
      <Operands Name="ax, {word} 'omem:mem16'" Coding="'data16' 0xa9:8 'omem':16"/>
      <Operands Name="eax, {dword} 'omem:mem32'" Coding="'data32' 0xa9:8 'omem':32"/>
      <Operands Name="rax, {qword} 'omem:mem64'" Coding="0x48:8 'data32' 0xa9:8 'omem':64"/>
      <Operands Name="{byte}'rm:rm8', 'modreg:reg8'" op="0x84:8" mod="'modreg.Ord" R="modreg.R" W="modreg.W" />
      <Operands Name="{word}'rm:rm16', 'modreg:reg16'" op="'data16' 0x85" mod="'modreg.Ord" R="modreg.R" W="modreg.W" />
      <Operands Name="{dword}'rm:rm32', 'modreg:reg32'" op="'data32' 0x85" mod="'modreg.Ord" R="modreg.R" W="modreg.W" />
      <Operands Name="{byte}'rm:rm8b', 'modreg:reg8b'" op="0x84:8" mod="'modreg.Ord" R="modreg.R" W="modreg.W" />
      <Operands Name="{word}'rm:rm16b', 'modreg:reg16b'" op="'data16' 0x85" mod="'modreg.Ord" R="modreg.R" W="modreg.W" />
      <Operands Name="{dword}'rm:rm32b', 'modreg:reg32b'" op="'data32' 0x85" mod="'modreg.Ord" R="modreg.R" W="modreg.W" />
      <Operands Name="{qword}'rm:rm64b', 'modreg:reg64b'" op="'data64' 0x85" mod="'modreg.Ord" R="modreg.R" W="modreg.W" />
      <Operands Name="'modreg:reg8', {byte}'rm:rm8'" op="0x84:8" mod="'modreg.Ord" R="modreg.R" W="modreg.W" />
      <Operands Name="'modreg:reg16', {word}'rm:rm16'" op="'data16' 0x85" mod="'modreg.Ord" R="modreg.R" W="modreg.W" />
      <Operands Name="'modreg:reg32', {dword}'rm:rm32'" op="'data32' 0x85" mod="'modreg.Ord" R="modreg.R" W="modreg.W" />
      <Operands Name="'modreg:reg8b', {byte}'rm:rm8b'" op="0x84:8" mod="'modreg.Ord" R="modreg.R" W="modreg.W" />
      <Operands Name="'modreg:reg16b', {word}'rm:rm16b'" op="'data16' 0x85" mod="'modreg.Ord" R="modreg.R" W="modreg.W" />
      <Operands Name="'modreg:reg32b', {dword}'rm:rm32b'" op="'data32' 0x85" mod="'modreg.Ord" R="modreg.R" W="modreg.W" />
      <Operands Name="'modreg:reg64b', {qword}'rm:rm64b'" op="'data64' 0x85" mod="'modreg.Ord" R="modreg.R" W="modreg.W" />
      <Operands Name="'rm:reg8rm', 'omem:mem8'" op="0xf6:8" mod="0" Coding="native 'omem':8"/>
      <Operands Name="'rm:reg16rm', 'omem:mem16'" op="'data16' 0xf7:8" mod="0" Coding="native 'omem':16"/>
      <Operands Name="'rm:reg32rm', 'omem:mem32'" op="'data32' 0xf7:8" mod="0" Coding="native 'omem':32"/>
      <Operands Name="'rm:reg8rmb', 'omem:mem8'" op="0xf6:8" mod="0" Coding="native 'omem':8"/>
      <Operands Name="'rm:reg16rmb', 'omem:mem16'" op="'data16' 0xf7:8" mod="0" Coding="native 'omem':16"/>
      <Operands Name="'rm:reg32rmb', 'omem:mem32'" op="'data32' 0xf7:8" mod="0" Coding="native 'omem':32"/>
      <Operands Name="'rm:reg64rmb', 'omem:mem64'" op="'data64' 0xf7:8" mod="0" Coding="native 'omem':64"/>
      <Operands Name="byte 'rm:rm8', 'omem:mem8'" op="0xf6:8" mod="0" Coding="native 'omem':8"/>
      <Operands Name="word 'rm:rm16', 'omem:mem16'" op="'data16' 0xf7:8" mod="0" Coding="native 'omem':16"/>
      <Operands Name="dword 'rm:rm32', 'omem:mem32'" op="'data32' 0xf7:8" mod="0" Coding="native 'omem':32"/>
      <Operands Name="qword 'rm:rm64', 'omem:mem64'" op="'data64' 0xf7:8" mod="0" Coding="native 'omem':64"/>
      <Operands Name="byte 'rm:rm8b', 'omem:mem8'" op="0xf6:8" mod="0" Coding="native 'omem':8"/>
      <Operands Name="word 'rm:rm16b', 'omem:mem16'" op="'data16' 0xf7:8" mod="0" Coding="native 'omem':16"/>
      <Operands Name="dword 'rm:rm32b', 'omem:mem32'" op="'data32' 0xf7:8" mod="0" Coding="native 'omem':32"/>
      <Operands Name="qword 'rm:rm64b', 'omem:mem64'" op="'data64' 0xf7:8" mod="0" Coding="native 'omem':64"/>
    </Opcode>
    <Opcode Name="ud2" op="0x0b:8" Class="twobyte"/>
    <Opcode Name="verr" op="0x0f:8 0:8" mod="4" Class="nostrictrm">
      <Operands Name="'reg:reg16rm'" op="'data16' 0x0f:8 0:8" mod="4"/>
      <Operands Name="'reg:reg16rmb'" op="'data16' 0x0f:8 0:8" mod="4"/>
    </Opcode>
    <Opcode Name="verw" op="0x0f:8 0:8" mod="5" Class="nostrictrm">
      <Operands Name="'reg:reg16rm'" op="'data16' 0x0f:8 0:8" mod="5"/>
      <Operands Name="'reg:reg16rmb'" op="'data16' 0x0f:8 0:8" mod="5"/>
    </Opcode>
    <Opcode Name="wait" op="0x9b:8" Class="single"/>
    <Opcode Name="wbinvd" op="0x09:8" Class="twobyte"/>
    <Opcode Name="wrmsr" op="0x30:8" Class="twobyte"/>
    <Opcode Name="xadd">
      <Operands Name="{byte} 'rm:rm8','modreg:reg8'" op="0x0f:8 0xc0:8" mod="'modreg.Ord" R="modreg.R" W="modreg.W" />
      <Operands Name="{byte} 'rm:rm8b','modreg:reg8b'" op="0x0f:8 0xc0:8" mod="'modreg.Ord" R="modreg.R" W="modreg.W" />
      <Operands Name="{word} 'rm:rm16','modreg:reg16'" op="'data16' 0x0f:8 0xc1:8" mod="'modreg.Ord" R="modreg.R" W="modreg.W" />
      <Operands Name="{word} 'rm:rm16b','modreg:reg16b'" op="'data16' 0x0f:8 0xc1:8" mod="'modreg.Ord" R="modreg.R" W="modreg.W" />
      <Operands Name="{dword} 'rm:rm32','modreg:reg32'" op="'data32' 0x0f:8 0xc1:8" mod="'modreg.Ord" R="modreg.R" W="modreg.W" />
      <Operands Name="{dword} 'rm:rm32b','modreg:reg32b'" op="'data32' 0x0f:8 0xc1:8" mod="'modreg.Ord" R="modreg.R" W="modreg.W" />
      <Operands Name="{qword} 'rm:rm64b','modreg:reg64b'" op="'data64' 0x0f:8 0xc1:8" mod="'modreg.Ord" R="modreg.R" W="modreg.W" />
    </Opcode>

    <Opcode Name="xbts">
      <Operands Name="'modreg:reg16',{word}'rm:rm16'" op="'data16' 0x0f:8 0xa6:8" mod="'modreg.Ord" R="modreg.R" W="modreg.W"/>
      <Operands Name="'modreg:reg32',{dword}'rm:rm32'" op="'data32' 0x0f:8 0xa6:8" mod="'modreg.Ord" R="modreg.R" W="modreg.W"/>
      <Operands Name="'modreg:reg16b',{word}'rm:rm16b'" op="'data16' 0x0f:8 0xa6:8" mod="'modreg.Ord" R="modreg.R" W="modreg.W"/>
      <Operands Name="'modreg:reg32b',{dword}'rm:rm32b'" op="'data32' 0x0f:8 0xa6:8" mod="'modreg.Ord" R="modreg.R" W="modreg.W"/>
    </Opcode>
    <Opcode Name="xchg">
      <Operands Name="ax, 'modreg:reg16'" Coding="'data16' 0x12:5 'modreg.Ord':3"/>
      <Operands Name="eax, 'modreg:reg32'" Coding="'data32' 0x12:5 'modreg.Ord':3"/>
      <Operands Name="'modreg:reg16', ax" Coding="'data16' 0x12:5 'modreg.Ord':3"/>
      <Operands Name="'modreg:reg32', eax" Coding="'data32' 0x12:5 'modreg.Ord':3"/>
      <Operands Name="'modreg:reg8', {byte}'rm:rm8'" op="0x86:8" mod="'modreg.Ord" R="modreg.R" W="modreg.W" />
      <Operands Name="'modreg:reg16', {word}'rm:rm16'" op="'data16' 0x87:8" mod="'modreg.Ord" R="modreg.R" W="modreg.W" />
      <Operands Name="'modreg:reg32', {dword}'rm:rm32'" op="'data32' 0x87:8" mod="'modreg.Ord" R="modreg.R" W="modreg.W" />
      <Operands Name="{byte}'rm:rm8', 'modreg:reg8'" op="0x86:8" mod="'modreg.Ord" R="modreg.R" W="modreg.W" />
      <Operands Name="{word}'rm:rm16', 'modreg:reg16'" op="'data16' 0x87:8" mod="'modreg.Ord" R="modreg.R" W="modreg.W" />
      <Operands Name="{dword}'rm:rm32', 'modreg:reg32'" op="'data32' 0x87:8" mod="'modreg.Ord" R="modreg.R" W="modreg.W" />
    </Opcode>
    <Opcode Name="xlat" >
      <Operands Name="{byte}[ds:bx]" Coding="'addr16' 0xd7:8"/>
      <Operands Name="{byte}['seg:segment':bx]" Coding="'addr16' 'seg.Prefix' 0xd7:8"/>
      <Operands Name="{byte}[ds:ebx]" Coding="'addr32' 0xd7:8"/>
      <Operands Name="{byte}['seg:segment':ebx]" Coding="'addr32' 'seg.Prefix' 0xd7:8"/>
      <Operands Name="{byte}[ds:rbx]" Coding="'addr64' 0xd7:8"/>
      <Operands Name="{byte}['seg:segment':rbx]" Coding="'addr64' 'seg.Prefix' 0xd7:8"/>
      <Operands Name="empty" Coding="0xd7:8"/>
    </Opcode>
    <Opcode Name="xlatb" op="0xd7:8" Class="single"/>
    <Opcode Name="xor" op1="0x34:8" op2="0x30" mod="6" Class="math"/>
    <Opcode Name="xrstor">
      <Operands Name="'rm:rm'" op="'0x0f:8 0xae:8" mod="5"/>
    </Opcode>
    <Opcode Name="xrstor64">
      <Operands Name="'rm:rm'" op="'0x0f:8 0xae:8" mod="5" Coding="0x48:8 native"/>
    </Opcode>
    <Opcode Name="xsave">
      <Operands Name="'rm:rm'" op="'0x0f:8 0xae:8" mod="4"/>
    </Opcode>
    <Opcode Name="xsave64">
      <Operands Name="'rm:rm'" op="'0x0f:8 0xae:8" mod="4" Coding="0x48:8 native"/>
    </Opcode>
    <Opcode Name="xsetbv" op="0x01:8 0xd1:8" Class="twobyte"/>

    <Opcode Name="addpd" mand="0x66:8" op="0x0f:8 0x58:8" Class="ssemmxrm"/>
    <Opcode Name="addps" mand="" op="0x0f:8 0x58:8" Class="ssemmxrm"/>
    <Opcode Name="addsd" mand="0xf2:8" op="0x0f:8 0x58:8" Class="ssemmxrm"/>
    <Opcode Name="addss" mand="0xf3:8" op="0x0f:8 0x58:8" Class="ssemmxrm"/>
    <Opcode Name="addsubpd" mand="0x66:8" op="0x0f:8 0xd0:8" Class="ssemmxrm"/>
    <Opcode Name="addsubps" mand="0xf2:8" op="0x0f:8 0xd0:8" Class="ssemmxrm"/>
    <Opcode Name="andnpd" mand="0x66:8" op="0x0f:8 0x55:8" Class="ssemmxrm"/>
    <Opcode Name="andnps" mand="" op="0x0f:8 0x55:8" Class="ssemmxrm"/>
    <Opcode Name="andpd" mand="0x66:8" op="0x0f:8 0x54:8" Class="ssemmxrm"/>
    <Opcode Name="andps" mand="" op="0x0f:8 0x54:8" Class="ssemmxrm"/>
    <Opcode Name="blendpd" mand="0x66:8" op="0x0f:8 0x3a:8 0x0d:8" Class="sseimm"/>
    <Opcode Name="blendps" mand="" op="0x0f:8 0x3a:8 0x0d:8" Class="sseimm"/>
    <Opcode Name="cmppd" mand="0x66:8" op="0x0f:8 0xc2:8" Class="ssemmxrm"/>
    <Opcode Name="cmpps" mand="" op="0x0f:8 0xc2:8" Class="ssemmxrm"/>
    <Opcode Name="cvtdq2pd" mand="0xf3:8" op="0x0f:8 0xe6:8" Class="ssemmxrm"/>
    <Opcode Name="cvtdq2ps" mand="" op="0x0f:8 0x5b:8" Class="ssemmxrm"/>
    <Opcode Name="cvtpd2dq" mand="0xf2:8" op="0x0f:8 0xe6:8" Class="ssemmxrm"/>
    <Opcode Name="cvtpd2pi" mand="0x66:8" op="0x0f:8 0x2d:8" Class="mmsserm"/>
    <Opcode Name="cvtpd2ps" mand="0x66:8" op="0x0f:8 0x5a:8" Class="ssemmxrm"/>
    <Opcode Name="cvtpi2pd" mand="0x66:8" op="0x0f:8 0x2a:8" Class="ssemmxrm"/>
    <Opcode Name="cvtpi2ps" mand="" op="0x0f:8 0x2a:8" Class="ssemmxrm"/>
    <Opcode Name="cvtps2dq" mand="0x66:8" op="0x0f:8 0x5b:8" Class="ssemmxrm"/>
    <Opcode Name="cvtps2pd" mand="" op="0x0f:8 0x5a:8" Class="ssemmxrm"/>
    <Opcode Name="cvtps2pi" mand="" op="0x0f:8 0x2d:8" Class="mmsserm"/>
    <Opcode Name="cvtsd2si" mand="0xf2:8" op="0x0f:8 0x2d:8" Class="regsse"/>
    <Opcode Name="cvtsd2ss" mand="0xf2:8" op="0x0f:8 0x5a:8" Class="ssemmxrm"/>
    <Opcode Name="cvtsi2sd" mand="0xf2:8" op="0x0f:8 0x2a:8" Class="sserm"/>
    <Opcode Name="cvtsi2ss" mand="0xf3:8" op="0x0f:8 0x2a:8" Class="sserm"/>
    <Opcode Name="cvtss2sd" mand="0xf3:8" op="0x0f:8 0x5a:8" Class="ssemmxrm"/>
    <Opcode Name="cvtss2si" mand="0xf3:8" op="0x0f:8 0x2d:8" Class="regsse"/>
    <Opcode Name="cvttp2qdq" mand="0x66" op="0x0f:8 0xe6:8" Class="ssemmxrm"/>
    <Opcode Name="cvttp2qpi" mand="0x66" op="0x0f:8 0x2c:8" Class="mmsserm"/>
    <Opcode Name="cvttps2dq" mand="0xf3" op="0x0f:8 0x5b:8" Class="ssemmxrm"/>
    <Opcode Name="cvttps2pi" mand="" op="0x0f:8 0x2c:8" Class="mmsserm"/>
    <Opcode Name="cvttsd2si" mand="0xf2" op="0x0f:8 0x2c:8" Class="regsse"/>
    <Opcode Name="cvttss2si" mand="0xf3" op="0x0f:8 0x2c:8" Class="regsse"/>
    <Opcode Name="divpd" mand="0x66:8" op="0x0f:8 0x5e:8" Class="ssemmxrm"/>
    <Opcode Name="divps" mand="" op="0x0f:8 0x5e:8" Class="ssemmxrm"/>
    <Opcode Name="divsd" mand="0xf2:8" op="0x0f:8 0x5e:8" Class="ssemmxrm"/>
    <Opcode Name="divss" mand="9xf3:7" op="0x0f:8 0x5e:8" Class="ssemmxrm"/>
    <Opcode Name="dppd" mand="0x66:8" op="0x0f:8 0x3a:8 0x41:8" Class="sseimm"/>
    <Opcode Name="dpps" mand="" op="0x0f:8 0x3a:8 0x41:8"  Class="sseimm"/>
    <Opcode Name="hsubpd" mand="0x66:8" op="0x0f:8 0x7d:8" Class="ssemmxrm"/>
    <Opcode Name="hsubps" mand="0xf2:8" op="0x0f:8 0x7d:8" Class="ssemmxrm"/>
    <Opcode Name="insertps" mand="0x66:8" op="0x0f:8 0x21:8 0x21:8" Class="sseimm"/>
    <Opcode Name="lddqu" mand="0xf2:8" op="0x0f:8 0xf0:8" Class="ssemmxrm"/>
    <Opcode Name="maskmovdqu">
      <Operands Name="'rm:rm','modreg:regsse'" mand="0x66:8" op="0x0f:8 0xf7:8" mod="'modreg.Ord'" R="modreg.R" W="modreg.W"/>
      <Operands Name="'rm:rm','modreg:regsseb'" mand="0x66:8" op="0x0f:8 0xf7:8" mod="'modreg.Ord'" R="modreg.R" W="modreg.W"/>
    </Opcode>
    <Opcode Name="maskmovq">
      <Operands Name="'rm:rm','modreg:regmm'" mand="0x66:8" op="0x0f:8 0xf7:8" mod="'modreg.Ord'" R="modreg.R" W="modreg.W"/>
    </Opcode>

    <Opcode Name="maxps" mand="" op="0x0f:8 0x5f:8" Class="ssemmxrm"/>
    <Opcode Name="maxpd" mand="0x66:8" op="0x0f:8 0x5f:8" Class="ssemmxrm"/>
    <Opcode Name="maxps" mand="" op="0x0f:8 0x5f:8" Class="ssemmxrm"/>
    <Opcode Name="maxsd" mand="0xf2:8" op="0x0f:8 0x5f:8" Class="ssemmxrm"/>
    <Opcode Name="maxss" mand="9xf3:7" op="0x0f:8 0x5f:8" Class="ssemmxrm"/>
    <Opcode Name="mfence" op="0x0f:8 0xae:8 0xf0:8" Class="single"/>
    <Opcode Name="minpd" mand="0x66:8" op="0x0f:8 0x5d:8" Class="ssemmxrm"/>
    <Opcode Name="minps" mand="" op="0x0f:8 0x5d:8" Class="ssemmxrm"/>
    <Opcode Name="minsd" mand="0xf2:8" op="0x0f:8 0x5d:8" Class="ssemmxrm"/>
    <Opcode Name="minss" mand="9xf3:7" op="0x0f:8 0x5d:8" Class="ssemmxrm"/>
    <Opcode Name="monitor" op="0x0f:8 0x01:8 0xc8:8"/>
    <Opcode Name="movapd" mand="0x66" op1="0x28:8" Class="ssemove"/>
    <Opcode Name="movaps" mand="" op1="0x28:8" Class="ssemove"/>
    <Opcode Name="movd">
      <Operands Name="'modreg:regmm','rm:rm32'" mand="" op="0x0f:8 0x6e:8" mod="'modreg.Ord'" R="modreg.R" W="modreg.W"/>
      <Operands Name="'modreg:regsse','rm:rm32'" mand="0x66:8" op="0x0f:8 0x6e:8" mod="'modreg.Ord'" R="modreg.R" W="modreg.W"/>
      <Operands Name="'modreg:regsseb','rm:rm32b'" mand="0x66:8" op="0x0f:8 0x6e:8" mod="'modreg.Ord'" R="modreg.R" W="modreg.W"/>
      <Operands Name="'rm:rm32','modreg:regmm'" mand="" op="0x0f:8 0x7e:8" mod="'modreg.Ord'" R="modreg.R" W="modreg.W"/>
      <Operands Name="'rm:rm32','modreg:regsse'" mand="0x66:8" op="0x0f:8 0x7e:8" mod="'modreg.Ord'" R="modreg.R" W="modreg.W"/>
      <Operands Name="'rm:rm32b','modreg:regsseb'" mand="0x66:8" op="0x0f:8 0x7e:8" mod="'modreg.Ord'" R="modreg.R" W="modreg.W"/>

    </Opcode>
    <Opcode Name="movq">
      <Operands Name="'modreg:regmm','rm:rm64'" mand="" op="0x0f:8 0x6e:8" mod="'modreg.Ord'" R="modreg.R" W="modreg.W"/>
      <Operands Name="'modreg:regsse','rm:rm64'" mand="0x66:8" op="0x0f:8 0x6e:8" mod="'modreg.Ord'" R="modreg.R" W="modreg.W"/>
      <Operands Name="'modreg:regsseb','rm:rm64b'" mand="0x66:8" op="0x0f:8 0x6e:8" mod="'modreg.Ord'" R="modreg.R" W="modreg.W"/>
      <Operands Name="'rm:rm64','modreg:regmm'" mand="" op="0x0f:8 0x7e:8" mod="'modreg.Ord'" R="modreg.R" W="modreg.W"/>
      <Operands Name="'rm:rm64','modreg:regsse'" mand="0x66:8" op="0x0f:8 0x7e:8" mod="'modreg.Ord'" R="modreg.R" W="modreg.W"/>
      <Operands Name="'rm:rm64b','modreg:regsseb'" mand="0x66:8" op="0x0f:8 0x7e:8" mod="'modreg.Ord'" R="modreg.R" W="modreg.W"/>

    </Opcode>
    <Opcode Name="movddup" mand="0xf2:8" op="0x0f:8 0x12:8" Class="ssemmxrm"/>
    <Opcode Name="movdq2q" mand="0xf2:8" op="0x0f:8 0xd6:8" Class="mmsserm"/>
    <Opcode Name="movdqa" mand="0x66:8" op="0x0f:8 0x6f:8" Class="ssemove2"/>
    <Opcode Name="movdqu" mand="0xf3:8" op="0x0f:8 0x6f:8" Class="ssemove2"/>
    <Opcode Name="movhlps">
      <Operands Name="'modreg:regsse','rm:regsse'"  mand="" op="0x0f:8 0x12:8" mod="'modreg.Ord'" R="modreg.R" W="modreg.W"/>
      <Operands Name="'modreg:regsseb','rm:regsseb'"  mand="" op="0x0f:8 0x12:8" mod="'modreg.Ord'" R="modreg.R" W="modreg.W"/>
    </Opcode>
    <Opcode Name="movhpd" mand="0x66:8" op="0x0f:8 0x16:8" Class="ssemove3"/>
    <Opcode Name="movhps" mand="" op="0x0f:8 0x16:8" Class="ssemove3"/>
    <Opcode Name="movlhps">
      <Operands Name="'modreg:regsse','rm:regsse'"  mand="" op="0x0f:8 0x16:8" mod="'modreg.Ord'" R="modreg.R" W="modreg.W"/>
      <Operands Name="'modreg:regsseb','rm:regsseb'"  mand="" op="0x0f:8 0x16:8" mod="'modreg.Ord'" R="modreg.R" W="modreg.W"/>
    </Opcode>
    <Opcode Name="movlpd" mand="0x66:8" op="0x0f:8 0x12:8" Class="ssemove3"/>
    <Opcode Name="movlps" mand="" op="0x0f:8 0x12:8" Class="ssemove3"/>
    <Opcode Name="movmskpd" mand="0x66" op="0x0f:8 0x50:8" Class="regsse"/>
    <Opcode Name="movmskps" mand="" op="0x0f:8 0x50:8" Class="regsse"/>
    <Opcode Name="movntdq">
      <Operands Name="'rm:rm','modreg:regsse'" mand="0x66:8" op="0x0f:8 0xe7:8" mod="'modreg.Ord'" R="modreg.R" W="modreg.W"/>
      <Operands Name="'rm:rmb','modreg:regsseb'" mand="0x66:8" op="0x0f:8 0xe7:8" mod="'modreg.Ord'" R="modreg.R" W="modreg.W"/>

    </Opcode>
    <Opcode Name="movnti" op="0x0f:8 0xc3:8">
      <Operands Name="'rm:rm','modreg:reg32'" mod="'modreg.Ord'" R="modreg.R" W="modreg.W"/>
      <Operands Name="'rm:rm','modreg:reg32b'" mod="'modreg.Ord'" R="modreg.R" W="modreg.W"/>
      <Operands Name="'rm:rm','modreg:reg64b'" mod="'modreg.Ord'" R="modreg.R" W="modreg.W"/>
    </Opcode>
    <Opcode Name="movntpd">
      <Operands Name="'rm:rm','modreg:regsse'" mand="0x66:8" op="0x0f:8 0x2b:8" mod="'modreg.Ord'" R="modreg.R" W="modreg.W"/>
      <Operands Name="'rm:rmb','modreg:regsseb'" mand="0x66:8" op="0x0f:8 0x2b:8" mod="'modreg.Ord'" R="modreg.R" W="modreg.W"/>

    </Opcode>
    <Opcode Name="movntpd">
      <Operands Name="'rm:rm','modreg:regsse'" mand="" op="0x0f:8 0x2b:8" mod="'modreg.Ord'" R="modreg.R" W="modreg.W"/>
      <Operands Name="'rm:rmb','modreg:regsseb'" mand="" op="0x0f:8 0x2b:8" mod="'modreg.Ord'" R="modreg.R" W="modreg.W"/>

    </Opcode>
    <Opcode Name="movntq">
      <Operands Name="'rm:rm','modreg:regmm'" mand="" op="0x0f:8 0xe7:8" mod="'modreg.Ord'" R="modreg.R" W="modreg.W"/>
    </Opcode>

    <Opcode Name="movq2dq">
      <Operands Name="modreg:regsse','modreg:regmm'" mand="0xf3:8" op="0x0f:8 0xd6:8" mod="'modreg.Ord'" R="modreg.R" W="modreg.W"/>
    </Opcode>
    <Opcode Name="movshdup" mand="0xf3:8" op="0x0f:8 0x16:8" Class="ssemmxrm"/>
    <Opcode Name="movsldup" mand="0xf3:8" op="0x0f:8 0x12:8" Class="ssemmxrm"/>
    <Opcode Name="movss" mand="0xf3" op1="0x10:8" Class="ssemove"/>
    <Opcode Name="movupd" mand="0x66" op1="0x10:8" Class="ssemove"/>
    <Opcode Name="movups" mand="" op1="0x10:8" Class="ssemove"/>
    <Opcode Name="mpsadbw" mand="0x66:8" op="0x0f:8 0x3a:8 0x42:8" Class="sseimm"/>
    <Opcode Name="mulpd" mand="0x66:8" op="0x0f:8 0x59:8" Class="ssemmxrm"/>
    <Opcode Name="mulps" mand="" op="0x0f:8 0x59:8" Class="ssemmxrm"/>
    <Opcode Name="mulsd" mand="0xf2:8" op="0x0f:8 0x59:8" Class="ssemmxrm"/>
    <Opcode Name="mulss" mand="0xf3:8" op="0x0f:8 0x59:8" Class="ssemmxrm"/>
    <Opcode Name="orpd" mand="0x66:8" op="0x0f:8 0x56:8" Class="ssemmxrm"/>
    <Opcode Name="orps" mand="" op="0x0f:8 0x56:8" Class="ssemmxrm"/>
    <Opcode Name="packssdw" op="0x0f:8 0x6b:8" Class="ssepack"/>
    <Opcode Name="packsswb" op="0x0f:8 0x63:8" Class="ssepack"/>
    <Opcode Name="packusdw" op="0x0f:8 0x67:8" Class="ssepack"/>
    <Opcode Name="paddb" op="0x0f:8 0xfc:8" Class="ssepack"/>
    <Opcode Name="paddd" op="0x0f:8 0xfe:8" Class="ssepack"/>
    <Opcode Name="paddq" op="0x0f:8 0xd4:8" Class="ssepack"/>
    <Opcode Name="paddsw" op="0x0f:8 0xed:8" Class="ssepack"/>
    <Opcode Name="paddusb" op="0x0f:8 0xdc:8" Class="ssepack"/>
    <Opcode Name="paddusw" op="0x0f:8 0xdd:8" Class="ssepack"/>
    <Opcode Name="paddw" op="0x0f:8 0xfd:8" Class="ssepack"/>
    <Opcode Name="palignr" op="0x0f:8 0x3a:8 0x0f:8">
      <Operands Name="'modreg:regsse', 'rm:sserm', 'imm:mem8'" mand="0x66:8" mod="'modreg.Ord" R="modreg.R" W="modreg.W" Coding="native 'imm':8"/>
      <Operands Name="'modreg:regsseb', 'rm:ssermb', 'imm:mem8'" mand="0x66:8" mod="'modreg.Ord" R="modreg.R" W="modreg.W" Coding="native 'imm':8"/>
      <Operands Name="'modreg:regmm', 'rm:mmrm', 'imm:mem8'" mand="" mod="'modreg.Ord" R="modreg.R" W="modreg.W" Coding="native 'imm':8"/>
    </Opcode>
    <Opcode Name="pand" op="0x0f:8 0xdb:8" Class="ssepack"/>
    <Opcode Name="pandn" op="0x0f:8 0xdf:8" Class="ssepack"/>
    <Opcode Name="pavgb" op="0x0f:8 0xeo:8" Class="ssepack"/>
    <Opcode Name="pavgw" op="0x0f:8 0xe3:8" Class="ssepack"/>
    <Opcode Name="pblendw" mand="0x66:8" op="0x0f:8 0x3a:8 0x0e:8" Class="sseimm"/>
    <Opcode Name="pcmpeqb" op="0x0f:8 0xd4:8" Class="ssepack"/>
    <Opcode Name="pcmpeqd" op="0x0f:8 0xd6:8" Class="ssepack"/>
    <Opcode Name="pcmpeqw" op="0x0f:8 0xd5:8" Class="ssepack"/>
    <Opcode Name="pcmpestri" mand="0x66:8" op="0x0f:8 0x3a:8 0x61:8" Class="sseimm"/>
    <Opcode Name="pcmpestrm" mand="0x66:8" op="0x0f:8 0x3a:8 0x60:8" Class="sseimm"/>
    <Opcode Name="pcmpgtb" op="0x0f:8 0x64:8" Class="ssepack"/>
    <Opcode Name="pcmpgtd" op="0x0f:8 0x66:8" Class="ssepack"/>
    <Opcode Name="pcmpgtw" op="0x0f:8 0x65:8" Class="ssepack"/>
    <Opcode Name="pcmpestri" mand="0x66:8" op="0x0f:8 0x3a:8 0x63:8" Class="sseimm"/>
    <Opcode Name="pcmpestrm" mand="0x66:8" op="0x0f:8 0x3a:8 0x62:8" Class="sseimm"/>
    <Opcode Name="pextrb" op="0x0f:8 0x3a:8 0x14:8">
      <Operands Name="'rm:rm32', 'modreg:regsse', 'imm:mem8'" mand="0x66:8" mod="'modreg.Ord" R="modreg.R" W="modreg.W" Coding="native 'imm':8"/>
      <Operands Name="'rm:rm32b', 'modreg:regsseb', 'imm:mem8'" mand="0x66:8" mod="'modreg.Ord" R="modreg.R" W="modreg.W" Coding="native 'imm':8"/>
    </Opcode>
    <Opcode Name="pextrd" op="0x0f:8 0x3a:8 0x16:8">
      <Operands Name="'rm:rm32', 'modreg:regsse', 'imm:mem8'" mand="0x66:8" mod="'modreg.Ord" R="modreg.R" W="modreg.W" Coding="native 'imm':8"/>
      <Operands Name="'rm:rm32b', 'modreg:regsseb', 'imm:mem8'" mand="0x66:8" mod="'modreg.Ord" R="modreg.R" W="modreg.W" Coding="native 'imm':8"/>
    </Opcode>
    <Opcode Name="pextrq" op=" 0x0f:8 0x3a:8 0x14:8">
      <Operands Name="'rm:rm64', 'modreg:regsse', 'imm:mem8'" mand="0x66:8" mod="'modreg.Ord" R="modreg.R" W="modreg.W" Coding="native 'imm':8"/>
      <Operands Name="'rm:rm64b', 'modreg:regsseb', 'imm:mem8'" mand="0x66:8" mod="'modreg.Ord" R="modreg.R" W="modreg.W" Coding="native 'imm':8"/>
    </Opcode>
    <Opcode Name="pextrw">
      <Operands Name="'modreg:reg32', 'rm:sserm', 'imm:mem8'" mand="0x66:8" mod="'modreg.Ord" R="modreg.R" W="modreg.W" Coding="native 'imm':8"/>
      <Operands Name="'modreg:reg32b', 'rm:ssermb', 'imm:mem8'" mand="0x66:8" mod="'modreg.Ord" R="modreg.R" W="modreg.W" Coding="native 'imm':8"/>
      <Operands Name="'modreg:reg32', 'rm:mmrm', 'imm:mem8'" mand="" mod="'modreg.Ord" R="modreg.R" W="modreg.W" Coding="native 'imm':8"/>
      <Operands Name="'modreg:reg32b', 'rm:mmrm', 'imm:mem8'" mand="" mod="'modreg.Ord" R="modreg.R" W="modreg.W" Coding="native 'imm':8"/>
      <Operands Name="'modreg:reg54', 'rm:sserm', 'imm:mem8'" mand="0x66:8" mod="'modreg.Ord" R="modreg.R" W="modreg.W" Coding="native 'imm':8"/>
      <Operands Name="'modreg:reg64b', 'rm:ssermb', 'imm:mem8'" mand="0x66:8" mod="'modreg.Ord" R="modreg.R" W="modreg.W" Coding="native 'imm':8"/>
      <Operands Name="'modreg:reg64b', 'rm:mmrm', 'imm:mem8'" mand="" mod="'modreg.Ord" R="modreg.R" W="modreg.W" Coding="native 'imm':8"/>
    </Opcode>

    <Opcode Name="pinsrb" op="0x0f:8 0x3a:8 0x14:8">
      <Operands Name="'modreg:regsse', 'rm:rm32', 'imm:mem8'" mand="0x66:8" mod="'modreg.Ord" R="modreg.R" W="modreg.W" Coding="native 'imm':8"/>
      <Operands Name="'modreg:regsseb', 'rm:r32bb', 'imm:mem8'" mand="0x66:8" mod="'modreg.Ord" R="modreg.R" W="modreg.W" Coding="native 'imm':8"/>
    </Opcode>
    <Opcode Name="pinsrd" op="0x0f:8 0x3a:8 0x16:8">
      <Operands Name="'modreg:regsse', 'rm:rm32', 'imm:mem8'" mand="0x66:8" mod="'modreg.Ord" R="modreg.R" W="modreg.W" Coding="native 'imm':8"/>
      <Operands Name="'modreg:regsseb', 'rm:rm32b', 'imm:mem8'" mand="0x66:8" mod="'modreg.Ord" R="modreg.R" W="modreg.W" Coding="native 'imm':8"/>
    </Opcode>
    <Opcode Name="pinsrq" op=" 0x0f:8 0x3a:8 0x14:8">
      <Operands Name="'modreg:regsse', 'rm:rm64', 'imm:mem8'" mand="0x66:8" mod="'modreg.Ord" R="modreg.R" W="modreg.W" Coding="native 'imm':8"/>
      <Operands Name="'modreg:regsseb', 'rm:rm64b', 'imm:mem8'" mand="0x66:8" mod="'modreg.Ord" R="modreg.R" W="modreg.W" Coding="native 'imm':8"/>
    </Opcode>
    <Opcode Name="pinsrw">
      <Operands Name="'modreg:regsse', 'rm:rm32', 'imm:mem8'" mand="0x66:8" mod="'modreg.Ord" R="modreg.R" W="modreg.W" Coding="native 'imm':8"/>
      <Operands Name="'modreg:regsseb', 'rm:rm32b', 'imm:mem8'" mand="0x66:8" mod="'modreg.Ord" R="modreg.R" W="modreg.W" Coding="native 'imm':8"/>
      <Operands Name="'modreg:regmm', 'rm:rm32', 'imm:mem8'" mand="" mod="'modreg.Ord" R="modreg.R" W="modreg.W" Coding="native 'imm':8"/>
      <Operands Name="'modreg:regmm', 'rm:rm32b', 'imm:mem8'" mand="" mod="'modreg.Ord" R="modreg.R" W="modreg.W" Coding="native 'imm':8"/>
    </Opcode>
    <Opcode Name="pmaddwd" op="0x0f:8 0xf5:8" Class="ssepack"/>
    <Opcode Name="pmaxsw" op="0x0f:8 0xee:8" Class="ssepack"/>
    <Opcode Name="pmaxub" op="0x0f:8 0xde:8" Class="ssepack"/>
    <Opcode Name="pminsw" op="0x0f:8 0xea:8" Class="ssepack"/>
    <Opcode Name="pminub" op="0x0f:8 0xda:8" Class="ssepack"/>

    <Opcode Name="pmovmskb" op="0x0f:8 0xd7:8" >
      <Operands Name="'modreg:reg32', 'rm:mmrm'" mand="" mod="'modreg.Ord" R="modreg.R" W="modreg.W" />
      <Operands Name="'modreg:reg64b', 'rm:mmrm'" mand="0x66:8" mod="'modreg.Ord" R="modreg.R" W="modreg.W" />
      <Operands Name="'modreg:reg32', 'rm:sserm'" mand="" mod="'modreg.Ord" R="modreg.R" W="modreg.W" />
      <Operands Name="'modreg:reg32b', 'rm:ssermb'" mand="" mod="'modreg.Ord" R="modreg.R" W="modreg.W" />
      <Operands Name="'modreg:reg64b', 'rm:ssermb'" mand="0x66:8" mod="'modreg.Ord" R="modreg.R" W="modreg.W" />
    </Opcode>
    <Opcode Name="pmulhuw" op="0x0f:8 0xe4:8" Class="ssepack"/>
    <Opcode Name="pmulhw" op="0x0f:8 0xe5:8" Class="ssepack"/>
    <Opcode Name="pmullw" op="0x0f:8 0xd5:8" Class="ssepack"/>
    <Opcode Name="pmuludq" op="0x0f:8 0xf4:8" Class="ssepack"/>
    <Opcode Name="psadbw" op="0x0f:8 0xf6:8" Class="ssepack"/>
    <Opcode Name="pshufd" mand="0x66:8" op="0x0f:8 0x70:8"  class="ssepshu"/>
    <Opcode Name="pshufhw" mand="0xf3:8" op="0x0f:8 0x70:8" class="ssepshu"/>
    <Opcode Name="pshufhl" mand="0xf2:8" op="0x0f:8 0x70:8"  class="ssepshu"/>
    <Opcode Name="pshufw" mand="" op="0x0f:8 0x70:8" >
      <Operands Name="'modreg:regmm', 'rm:mmrm', 'imm:mem8'" mod="'modreg.Ord" R="modreg.R" W="modreg.W" Coding="native 'imm':8"/>
    </Opcode>
    <Opcode Name="pslld" op1="0x72:8"  op2="0xf2" mod1="6" class="sseps"/>
    <Opcode Name="pslldq" mand="" op="0x0f:8 0x70:8" >
      <Operands Name="'modreg:regsse', imm:mem8'" mod="7" Coding="native 'imm':8"/>
      <Operands Name="'modreg:regsseb', imm:mem8'" mod="7" Coding="native 'imm':8"/>
    </Opcode>
    <Opcode Name="psllq" op1="0x73:8"  op2="0xf3" mod1="6" class="sseps"/>
    <Opcode Name="psllw" op1="0x71:8"  ofs="0xf1" mod1="6" class="sseps"/>
    <Opcode Name="psrad" op1="0x72:8"  ofs="0xe2" mod1="4" class="sseps"/>
    <Opcode Name="psraw" op1="0x71:8"  ofs="0xe1" mod1="4" class="sseps"/>
    <Opcode Name="psrld" op1="0x72:8"  ofs="0xd2" mod1="2" class="sseps"/>
    <Opcode Name="psrldq" mand="" op="0x0f:8 0x73:8" >
      <Operands Name="'modreg:regsse', 'imm:mem8'" mod="3" Coding="native 'imm':8"/>
      <Operands Name="'modreg:regsseb', 'imm:mem8'" mod="3" Coding="native 'imm':8"/>
    </Opcode>
    <Opcode Name="psrlq" op1="0x71:8"  ofs="0xd3" mod1="2" class="sseps"/>
    <Opcode Name="psrlw" op1="0x71:8"  ofs="0xd1" mod1="2" class="sseps"/>
    <Opcode Name="psubb" op="0x0f:8 0xf8:8" Class="ssepack"/>
    <Opcode Name="psubd" op="0x0f:8 0xfa:8" Class="ssepack"/>
    <Opcode Name="psubq" op="0x0f:8 0xfb:8" Class="ssepack"/>
    <Opcode Name="psubsb" op="0x0f:8 0xe8:8" Class="ssepack"/>
    <Opcode Name="psubsw" op="0x0f:8 0xe9:8" Class="ssepack"/>
    <Opcode Name="psubusb" op="0x0f:8 0xd8:8" Class="ssepack"/>
    <Opcode Name="psubusw" op="0x0f:8 0xd9:8" Class="ssepack"/>
    <Opcode Name="punpckhbw" op="0x0f:8 0x68:8" Class="ssepack"/>
    <Opcode Name="punpckhdq" op="0x0f:8 0x6a:8" Class="ssepack"/>
    <Opcode Name="punpckhqdq" mand="0x66:8" op="0x0f:8 06d:8" Class="ssemmxrm"/>
    <Opcode Name="punpckhwd" op="0x0f:8 0x69:8" Class="ssepack"/>
    <Opcode Name="punpcklbw" op="0x0f:8 0x60:8" Class="ssepack"/>
    <Opcode Name="punpckldq" op="0x0f:8 0x62:8" Class="ssepack"/>
    <Opcode Name="punpcklqdq" mand="0x66:8" op="0x0f:8 0x6c:8" Class="ssemmxrm"/>
    <Opcode Name="punpcklwd" op="0x0f:8 0x61:8" Class="ssepack"/>
    <Opcode Name="pxor" op="0x0f:8 0xef:8" Class="ssepack"/>
    <Opcode Name="rcpps" mand="" op="0x0f:8 0x53:8" Class="ssemmxrm"/>
    <Opcode Name="rpcss" mand="0xf3:8" op="0x0f:8 0x53:8" Class="ssemmxrm"/>
    <Opcode Name="roundpd" mand="0x66:8" op="0x0f:8 0x3a:8 0x09:8" Class="sseimm"/>
    <Opcode Name="roundps" mand="0x66:8" op="0x0f:8 0x3a:8 0x08:8" Class="sseimm"/>
    <Opcode Name="roundsd" mand="0x66:8" op="0x0f:8 0x3a:8 0x0b:8" Class="sseimm"/>
    <Opcode Name="roundss" mand="0x66:8" op="0x0f:8 0x3a:8 0x0a:8" Class="sseimm"/>
    <Opcode Name="shufpd" mand="0x66" op="0x0f:8 0xc6:8" >
      <Operands Name="'modreg:regsse', 'rm:sserm','imm:mem8'"  mod="'modreg.Ord" R="modreg.R" W="modreg.W" Coding="native 'imm':8"/>
      <Operands Name="'modreg:regsseb', 'rm:sserm','imm:mem8'"  mod="'modreg.Ord" R="modreg.R" W="modreg.W" Coding="native 'imm':8"/>
    </Opcode>
    <Opcode Name="shufps" mand="" op="0x0f:8 0xc6:8" >
      <Operands Name="'modreg:regsse', 'rm:sserm', 'imm:mem8'"  mod="'modreg.Ord" R="modreg.R" W="modreg.W" Coding="native 'imm':8"/>
      <Operands Name="'modreg:regsseb', 'rm:sserm','imm:mem8'"  mod="'modreg.Ord" R="modreg.R" W="modreg.W" Coding="native 'imm':8"/>
    </Opcode>
    <Opcode Name="sqrtps" mand="" op="0x0f:8 0x52:8" Class="ssemmxrm"/>
    <Opcode Name="sqrtss" mand="0xf3:8" op="0x0f:8 0x52:8" Class="ssemmxrm"/>
    <Opcode Name="subpd" mand="0x66:8" op="0x0f:8 0x5c:8" Class="ssemmxrm"/>
    <Opcode Name="subps" mand="" op="0x0f:8 0x5c:8" Class="ssemmxrm"/>
    <Opcode Name="subsd" mand="0xf2:8" op="0x0f:8 0x5c:8" Class="ssemmxrm"/>
    <Opcode Name="subss" mand="0xf3:8" op="0x0f:8 0x5c:8" Class="ssemmxrm"/>
    <Opcode Name="unpckhpd" mand="0x66:8" op="0x0f:8 0x15:8" Class="ssemmxrm"/>
    <Opcode Name="unpckhps" mand="" op="0x0f:8 0x15:8" Class="ssemmxrm"/>
    <Opcode Name="unpcklpd" mand="0x66:8" op="0x0f:8 0x14:8" Class="ssemmxrm"/>
    <Opcode Name="unpcklps" mand="" op="0x0f:8 0x14:8" Class="ssemmxrm"/>
    <Opcode Name="xorpd" mand="0x66:8" op="0x0f:8 0x57:8" Class="ssemmxrm"/>
    <Opcode Name="xorps" mand="" op="0x0f:8 0x57:8" Class="ssemmxrm"/>



    <Opcode Name="invept"/> <!-- fixme -->
    <Opcode Name="invvpid"/> <!-- fixme -->
    <Opcode Name="vmcall"/><!--fixme-->
    <Opcode Name="vmclear"/><!--fixme-->
    <Opcode Name="vmlaunch"/><!--fixme-->
    <Opcode Name="vmptrld"/><!--fixme-->
    <Opcode Name="vmptrst"/><!--fixme-->
    <Opcode Name="vmread"/><!--fixme-->
    <Opcode Name="vmresume"/><!--fixme-->
    <Opcode Name="vmwrite"/><!--fixme-->
    <Opcode Name="vmx0ff"/><!--fixme-->
    <Opcode Name="vmxon"/><!--fixme-->

    <Prefix Name="a16" Coding="'addr16'"/>
    <Prefix Name="a32" Coding="'addr32'"/>
    <Prefix Name="lock" Coding="0xf0:8"/>
    <Prefix Name="o16" Coding="'data16'"/>
    <Prefix Name="o32" Coding="'data32'"/>
    <Prefix Name="rep" Coding="0xf3:8"/>
    <Prefix Name="repe" Coding="0xf3:8"/>
    <Prefix Name="repne" Coding="0xf2:8"/>
    <Prefix Name="repnz" Coding="0xf2:8"/>
    <Prefix Name="repz" Coding="0xf3:8"/>
  </Coding>
	<Compiling Profile="bit32">
		<General>
			<Instance Name="GenStackAlign" Value="1"/>
			<Instance Name="StandardNames" Value="1"/>
			<Instance Name="compatibleint" Value="long"/>
			<Instance Name="compatibleaddress" Value="long"/>
			<Instance Name="defaultpacking" Value="8"/>
			<Instance Name="optimize" Value="all" commandline="1"/>
			<Instance Name="denyoptimize" Value="0"/>
			<Instance Name="reversebits" Value="0"/>
			<Instance Name="framesize" Value="8"/>
			<Instance Name="minparamwidth" Value="4"/>
			<Instance Name="minalignment" Value="4"/>
		</General>
		<Sizes>
			<Instance Name="bool" size="1" align="1"/>
			<Instance Name="char" size="1" align="1"/>
			<Instance Name="short" size="2" align="2"/>
			<Instance Name="int" size="4" align="4"/>
			<Instance Name="long" size="4" align="4"/>
			<Instance Name="longlong" size="8" align="8"/>
			<Instance Name="address" size="4" align="4"/>
			<Instance Name="faraddress" size="6" align="4"/>
			<Instance Name="segment" size="2" align="2"/>
			<Instance Name="float" size="4" align="4"/>
			<Instance Name="double" size="8" align="8"/>
			<Instance Name="longdouble" size="12" align="12"/>
			<Instance Name="complexfloat" size="8" align="4"/>
			<Instance Name="complexdouble" size="16" align="8"/>
			<Instance Name="complexlongdouble" size="24" align="8"/>
		</Sizes>
		<Floating>
			<Instance Name="float" min="-126" bias="126" max="128" mantissa_bits="24"/>
			<Instance Name="double" min="-1022" bias="1022" max="1024" mantissa_bits="54"/>
			<Instance Name="longdouble" min="-16382" bias="16382" max="16384" mantissa_bits="65"/>
		</Floating>
		<Assembler Profile="nasm">
			<Usage>
			</Usage>
			<Params>
				<Instance Name="hosted" Value="1"/>
				<Instance Name="extension" Value=".asm"/>
				<Instance Name="objextenstion" Value=".o"/>
				<Instance Name="envname" Value="OCC"/>
				<Instance Name="progname" Value="OCC"/>
				<Instance Name="cfgname" Value="occ.cfg"/>
				<Instance Name="debugger" profile=""/>
			</Params>
			<Arguments>
			</Arguments>
			<Defines>
			</Defines>
		</Assembler>
	void (*internalConflict)(QUAD *q) ; /* enter a conflict for this instruction if necessary */
    void (*align)(int size);            /* put an alignment command */
    IMODE *(*handleIntrins)(EXPRESSION *node, int novalue);  /* backend handle intrinsic */
		<Gen>
			<Intrinsics>
				<Instance Name="__LXMUL"/>
				<Instance Name="__LXIDIV"/>
				<Instance Name="__LXUDIV"/>
				<Instance Name="__LXIMOD"/>
				<Instance Name="__LXUMOD"/>
			</Intrinsics>
			<Code Name="line">
			</Code>
			<Code Name="passthrough">
			</Code>
			<Code Name="datapassthrough">
			</Code>
			<Code Name="label">
			</Code>
			<Code Name="goto">
			</Code>
			<Code Name="gosub">
	call %op[0]%
			</Code>
			<Code Name="fargosub">
			</Code>
			<Code Name="trap">
			</Code>
			<Code Name="int">
	int	%op[0]%
			</Code>
			<Code Name="ret">
				<When Cond="opcount==0">
	ret
				</When>
				<When Cond="opcount==1&amp;&amp;isscalar(op[0])">
	ret	%op[0]%
				</When>
			</Code>
			<Code Name="fret">
				<When Cond="opcount==0">
	retf
				</When>
				<When Cond="opcount==1&amp;&amp;isscalar(op[0])">
	retf	%op[0]%
				</When>
			</Code>
			<Code Name="rett">
	iret
			</Code>
			<Code Class="math">
				<When Cond="isscalar(result)">
					<When Cond="result.size==longlong">
						<When Cond="result==op[0]">
	%op1% %result.low%,%op[1].low%
	%op2% %result.high%,%op[1].high%
						</When>
						<When Cond="result==op[1]&amp;&amp;op[0]!=op[1]">
	%op1% %result.low%,%op[0].low%
	%op2% %result.high%,%op[0].high%
						</When>
						<Otherwise>
	mov %result.low%,%op[0].low%
	mov %result.high%,%op[0].high%
	%op1% %result.low%,%op[1].low%
	%op2% %result.high%,%op[1].high%
						</Otherwise>
					</When>
					<Otherwise>
	
						<When Cond="result==op[0]">
	%op1% %result%,%op[1]%
						</When>
						<When Cond="result==op[1]&amp;&amp;op[0]!=op[1]">
	%op1% %result%,%op[0]%
						</When>
						<Otherwise>
	mov %result%,%op[0]%
	%op1% %result$,%op[1]%
						</Otherwise>
					</Otherwise>
				</When>
				<When Cond="isfloat(result)">
					<When Cond="!istemp(op[0])">
						<When Cond="op[0]==1.0">
	fld1
						</When>
						<When Cond="op[0]==0.0">
	fldz
						</When>
						<Otherwise>
	fld %op[0]%
						</Otherwise>
					</When>
					<When Cond="!istemp(op[1])">
						<When Cond="op[1]==1.0">
	fld1
						</When>
						<When Cond="op[1]==0.0">
	fldz
						</When>
						<Otherwise>
	fld %op[1]%
						</Otherwise>
					</When>
					<When Cond="istemp(op[0]) &amp;&amp; op[0]==op[1]">
	fld st0
					</When>
	%op2% st1
					<When Cond="!istemp(result)">
	fstp %result%
					</When>
				</When>
			</Code>
			<Code Name="add" op1="add" op2="adc" op3="faddp" Class="math"/>
			<Code Name="sub" op1="sub" op2="sbb" op3="fsubp" Class="math">
				<When Cond="isscalar(result)">
					<When Cond="result.size==longlong">
						<When Cond="result==op[0]">
	%op1% %result.low%,%op[1].low%
	%op2% %result.high%,%op[1].high%
						</When>
						<Otherwise>
	mov %result.low%,%op[0].low%
	mov %result.high%,%op[0].high%
	%op1% %result.low%,%op[1].low%
	%op2% %result.high%,%op[1].high%
						</Otherwise>
					</When>
					<Otherwise>
						<When Cond="result==op[0]">
	%op1% %result%,%op[1]%
						</When>
						<When Cond="result==op[1]&amp;&amp;op[0]!=op[1]">
	%op1% %result%,%op[0]%
	neg	  %result%
						</When>
						<Otherwise>
	mov %result%,%op[0]%
	%op1% %result$,%op[1]%
						</Otherwise>
					</Otherwise>
				</When>
				<When Cond="isfloat(result)">
					<When Cond="!istemp(op[0])">
						<When Cond="op[0]==1.0">
	fld1
						</When>
						<When Cond="op[0]==0.0">
	fldz
						</When>
						<Otherwise>
	fld %op[0]%
						</Otherwise>
					</When>
					<When Cond="!istemp(op[1])">
						<When Cond="op[1]==1.0">
	fld1
						</When>
						<When Cond="op[1]==0.0">
	fldz
						</When>
						<Otherwise>
	fld %op[1]%
						</Otherwise>
					</When>
					<When Cond="istemp(op[0]) &amp;&amp; op[0]==op[1]">
	fld st0
					</When>
	%op2% st1
					<When Cond="!istemp(result)">
	fstp %result%
					</When>
				</When>
			</Code>
			<Code Name="udiv">
				<When Cond="isscalar(result)">
					<When Cond="result.size==longlong">
	push %op[1].high%
	push %op[1].low%
	push %op[0].high%
	push %op[0].low%
	call __LXUDIV
					</When>
					<Otherwise>
	div %op[1]%
					</Otherwise>
				</When>
				<When Cond="isfloat(result)">
					<When Cond="!istemp(op[0])">
						<When Cond="op[0]==1.0">
	fld1
						</When>
						<When Cond="op[0]==0.0">
	fldz
						</When>
						<Otherwise>
	fld %op[0]%
						</Otherwise>
					</When>
					<When Cond="!istemp(op[1])">
						<When Cond="op[1]==1.0">
	fld1
						</When>
						<When Cond="op[1]==0.0">
	fldz
						</When>
						<Otherwise>
	fld %op[1]%
						</Otherwise>
					</When>
					<When Cond="istemp(op[0]) &amp;&amp; op[0]==op[1]">
	fld st0
					</When>
	fdivp st1
					<When Cond="!istemp(result)">
	fstp %result%
					</When>
				</When>
				
			</Code>
			<Code Name="umod">
				<When Cond="isscalar(result)">
					<When Cond="result.size==longlong">
	push %op[1].high%
	push %op[1].low%
	push %op[0].high%
	push %op[0].low%
	call __LXUMOD
					</When>
					<Otherwise>
	div %op[1]%
					</Otherwise>
				</When>
			</Code>
			<Code Name="sdiv">
				<When Cond="isscalar(result)">
					<When Cond="result.size==longlong">
	push %op[1].high%
	push %op[1].low%
	push %op[0].high%
	push %op[0].low%
	call __LXIDIV
					</When>
					<Otherwise>
	idiv %op[1]%
					</Otherwise>
				</When>
				<When Cond="isfloat(result)">
					<When Cond="!istemp(op[0])">
						<When Cond="op[0]==1.0">
	fld1
						</When>
						<When Cond="op[0]==0.0">
	fldz
						</When>
						<Otherwise>
	fld %op[0]%
						</Otherwise>
					</When>
					<When Cond="!istemp(op[1])">
						<When Cond="op[1]==1.0">
	fld1
						</When>
						<When Cond="op[1]==0.0">
	fldz
						</When>
						<Otherwise>
	fld %op[1]%
						</Otherwise>
					</When>
					<When Cond="istemp(op[0]) &amp;&amp; op[0]==op[1]">
	fld st0
					</When>
	fdivp st1
					<When Cond="!istemp(result)">
	fstp %result%
					</When>
				</When>
			</Code>
			<Code Name="smod">
				<When Cond="isscalar(result)">
					<When Cond="result.size==longlong">
	push %op[1].high%
	push %op[1].low%
	push %op[0].high%
	push %op[0].low%
	call __LXIDIV
					</When>
					<Otherwise>
	idiv %op[1]%
					</Otherwise>
				</When>
			</Code>
			<Code Name="mul">
				<When Cond="isscalar(result)">
					<When Cond="result.size==longlong">
	push %op[1].high%
	push %op[1].low%
	push %op[0].high%
	push %op[0].low%
	call __LXMUL
						<When Cond="%result.high%!=edx || %result.low%!=eax">
	mov	%result.high%,edx
	mov	%result.low%,eax
						</When>
					</When>
					<Otherwise>
						<When Cond="result==op[0]">
	imul %result%,%op[1]%
						</When>
						<When Cond="result==op[1]&amp;&amp;op[0]!=op[1]">
	mov %result%,%op[1]%
	imul %result%,%op[0]%
						</When>
						<Otherwise>
	mov %result%,%op[0]%
	imul %result$,%op[1]%
						</Otherwise>
					</Otherwise>
				</When>
				<When Cond="isfloat(result)">
					<When Cond="!istemp(op[0])">
						<When Cond="op[0]==1.0">
	fld1
						</When>
						<When Cond="op[0]==0.0">
	fldz
						</When>
						<Otherwise>
	fld %op[0]%
						</Otherwise>
					</When>
					<When Cond="!istemp(op[1])">
						<When Cond="op[1]==1.0">
	fld1
						</When>
						<When Cond="op[1]==0.0">
	fldz
						</When>
						<Otherwise>
	fld %op[1]%
						</Otherwise>
					</When>
					<When Cond="istemp(op[0]) &amp;&amp; op[0]==op[1]">
	fld st0
					</When>
	fmulp st1
					<When Cond="!istemp(result)">
	fstp %result%
					</When>
				</When>
			</Code>
			<Code Name="lsl">
				<When Cond="isscalar(result)">
					<When Cond="result.size==longlong">
						<When Cond="result!=op[0]">
	mov %op[0].low%, %op[1].low%
	mov %op[0].high%, %op[1].high%
						</When>
						<When Cond="isnumber(op[2])">
							<When Cond="op[2]==32">
	mov %op[0].high%, %op[0].low%
	xor %op[0].low%, %op[0].low%
							</When>
							<When Cond="op[2] &lt; 32">
	shld %op[0].high%, %op[1].low%, %op[2]
	shl  %op1[1].low%, %op[2]%
							</When>
							<When Cond="op[2] > 32">
	mov %op[0].high%, %op[0].low%
	xor %op[0].low%, %op[0].low%
	shl %op[0].high%, %op[2]%
							</When>
						</When>
						<Otherwise>
	shld %op[0].high%, %op[1].low%, %op[2]
	shl  %op1[1].low%, %op[2]%
						</Otherwise>
					</When>
					<Otherwise>
						<When Cond="result!=op[0]">
	mov %result%,%op[0]%
						</When>
	shl %result%,%op[2]%
					</Otherwise>
				</When>
			</Code>
			<Code Name="lsr">
				<When Cond="isscalar(result)">
					<When Cond="result.size==longlong">
						<When Cond="result!=op[0]">
	mov %op[0].low%, %op[1].low%
	mov %op[0].high%, %op[1].high%
						</When>
						<When Cond="isnumber(op[2])">
							<When Cond="op[2]==32">
	mov %op[0].low%, %op[0].high%
	xor %op[0].high%, %op[0].high%
							</When>
							<When Cond="op[2] &lt; 32">
	shrd %op[0].low%, %op[1].high%, %op[2]
	shr  %op1[1].high%, %op[2]%
							</When>
							<When Cond="op[2] > 32">
	mov %op[0].low%, %op[0].high%
	xor %op[0].high%, %op[0].high%
	shr %op[0].low%, %op[2]%
							</When>
						</When>
						<Otherwise>
	shrd %op[0].low%, %op[1].high%, %op[2]
	shr  %op1[1].high%, %op[2]%
						</Otherwise>
					</When>
					<Otherwise>
						<When Cond="result!=op[0]">
	mov %result%,%op[0]%
						</When>
	shr %result%,%op[2]%
					</Otherwise>
				</When>
			</Code>
			<Code Name="asr">
				<When Cond="isscalar(result)">
					<When Cond="result.size==longlong">
						<When Cond="result!=op[0]">
	mov %op[0].low%, %op[1].low%
	mov %op[0].high%, %op[1].high%
						</When>
						<When Cond="isnumber(op[2])">
							<When Cond="op[2]==32">
	mov %op[0].low%, %op[0].high%
	sar %op[0].high%, %op[2]%
							</When>
							<When Cond="op[2] &lt; 32">
	shrd %op[0].low%, %op[1].high%, %op[2]
	sar  %op1[1].high%, %op[2]%
							</When>
							<When Cond="op[2] > 32">
	mov %op[0].low%, %op[0].high%
	sar %op[0].high%, 31
	shr %op[0].low%, %op[2]%
							</When>
						</When>
						<Otherwise>
	shrd %op[0].low%, %op[1].high%, %op[2]
	sar  %op1[1].high%, %op[2]%
						</Otherwise>
					</When>
					<Otherwise>
						<When Cond="result!=op[0]">
	mov %result%,%op[0]%
						</When>
	sar %result%,%op[2]%
					</Otherwise>
				</When>
			</Code>
			<Code Name="neg">
				<When Cond="isscalar(result)">
					<When Cond="result.size==longlong">
						<When Cond="result!=op[0]">
	mov %op[0].low%, %op[1].low%
	mov %op[0].high%, %op[1].high%
						</When>
	neg %op[0].high%
	neg %op[0],low%
	sbb %op[0].high%,0
					</When>
					<Otherwise>
						<When Cond="result!=op[0]">
	mov %op[0]%, %op[1]%
						</When>
	neg %op[0]%
					</Otherwise>
				</When>
				<When Cond="result.size==float">
					<When Cond="!istemp(op[1])">
						<When Cond="op[1]==1.0">
	fld1
						</When>
						<When Cond="op[1]==0.0">
	fldz
						</When>
						<Otherwise>
	fld %op[1]%
						</Otherwise>
	fchs
					</When>
				</When>
				
			</Code>
			<Code Name="not">
				<When Cond="isscalar(result)">
					<When Cond="result.size==longlong">
						<When Cond="result!=op[0]">
	mov %op[0].low%, %op[1].low%
	mov %op[0].high%, %op[1].high%
						</When>
	not %op[0].high%
	not %op[0],low%
					</When>
					<Otherwise>
						<When Cond="result!=op[0]">
	mov %op[0]%, %op[1]%
						</When>
	not %op[0]%
					</Otherwise>
				</When>
			</Code>
			<Code Name="and" op1="and" op2="and" op3="" Class="math"/>
			<Code Name="or" op1="or" op2="or" op3="" Class="math"/>
			<Code Name="eor" op1="xor" op2="xor" op3="" Class="math"/>
			<Code Class="compare">
			</Code>
			<Code Name="setne" Class="compare">
	setn %op[0]%
			</Code>
			<Code Name="sete" Class="compare">
	sete %op[0]%
			</Code>
			<Code Name="setc" Class="compare">
	setc %op[0]%
			</Code>
			<Code Name="seta" Class="compare">
	seta %op[0]%
			</Code>
			<Code Name="setnc" Class="compare">
	setnc %op[0]%
			</Code>
			<Code Name="setbe" Class="compare">
	setbe %op[0]%
			</Code>
			<Code Name="setl" Class="compare">
	setl %op[0]%
			</Code>
			<Code Name="setg" Class="compare">
	setg %op[0]%
			</Code>
			<Code Name="setle" Class="compare">
	setel %op[0]%
			</Code>
			<Code Name="setge" Class="compare">
			</Code>
			<Code Name="assn">
			</Code>
			<Code Name="genword">
			</Code>
			<Code Name="coswitch">
			</Code>
			<Code Name="swbranch">
			</Code>
			<Code Name="dc">
			</Code>
			<Code Name="assnblock">
			</Code>
			<Code Name="clrblock">
			</Code>
			<Code Name="jc" Class="compare">
	jc %label%
			</Code>
			<Code Name="ja" Class="compare">
	ja %label%
			</Code>
			<Code Name="je" Class="compare">
	je %label%
			</Code>
			<Code Name="jnc" Class="compare">
	jnc %label%
			</Code>
			<Code Name="jbe" Class="compare">
	jbe %label%
			</Code>
			<Code Name="jne" Class="compare">
	jne %label%
			</Code>
			<Code Name="jl" Class="compare">
	jl %label%
			</Code>
			<Code Name="jg" Class="compare">
	jg %label%
			</Code>
			<Code Name="jle" Class="compare">
	jle %label%
			</Code>
			<Code Name="jge" Class="compare">
	jge %label%
			</Code>
			<Code Name="parm">
			</Code>
			<Code Name="parmadj">
			</Code>
			<Code Name="parmblock">
			</Code>
			<Code Name="cppini">
			</Code>
			<Code Name="prologue">
			</Code>
			<Code Name="epilogue">
			</Code>
			<Code Name="pushcontext">
			</Code>
			<Code Name="popcontext">
			</Code>
			<Code Name="loadcontext">
			</Code>
			<Code Name="unloadcontext">
			</Code>
			<Code Name="asm_tryblock">
			</Code>
			<Code Name="stackalloc">
			</Code>
			<Code Name="loadstack">
			</Code>
			<Code Name="savestack">
			</Code>
			<Code Name="blockstart">
			</Code>
			<Code Name="blockend">				
			</Code>"
		</Gen>
		<PreColor>
		</PreColor>
		<Combine>
		</Combine>
		<Peep>
		</Peep>
	</Compiling>
</ADL>
