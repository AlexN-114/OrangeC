/*
 * Copyright (c) 1999
 * Boris Fomitchev
 *
 * This material is provided "as is", with absolutely no warranty expressed
 * or implied. Any use is at your own risk.
 *
 * Permission to use or copy this software for any purpose is hereby granted
 * without fee, provided the above notices are retained on all copies.
 * Permission to modify the code and to distribute modified code is granted,
 * provided the above notices are retained, and a notice that the code was
 * modified is included with the above copyright notice.
 *
 * DAL - added for Orange C, not sure how it will work with other compilers
 * some of them won't support it at all.
 *
 */

// DMC has hardcoded inclusion of typeinfo.h at the begining of any translation unit.
// So inclusion of this header will directly reference the native header. This is not
// a problem as typeinfo.h is neither a C nor C++ Standard header, this header should
// never be used in user code.
#if defined (__DMC__)
// We define _STLP_OUTERMOST_HEADER_ID to signal to other STLport headers that inclusion
// is done from native typeinfo.h (see exception header).
#  define _STLP_OUTERMOST_HEADER_ID 0x875
#  include <../include/initializer_list>
#  undef _STLP_OUTERMOST_HEADER_ID
#else
#  ifndef _STLP_OLDSTD_initializer_list
#  define _STLP_OLDSTD_initializer_list

#  ifndef _STLP_OUTERMOST_HEADER_ID
#    define _STLP_OUTERMOST_HEADER_ID 0x875
#    include <stl/_prolog.h>
#  endif

#  ifdef _STLP_HAS_INITIALIZER_LIST

#    if defined (__GNUC__)
#      undef _STLP_OLDSTD_initializer_list
#      include <initializer_list>
#      define _STLP_OLDSTD_initializer_list
#    else
#      if defined (_STLP_HAS_INCLUDE_NEXT)
#        include_next <initializer_list>
#      elif !defined (__BORLANDC__) || (__BORLANDC__ < 0x580)
#        include _STLP_NATIVE_CPP_RUNTIME_HEADER(initializer_list)
#      else
#        include _STLP_NATIVE_CPP_C_HEADER(initializer_list)
#      endif
#      if defined (__BORLANDC__) && (__BORLANDC__ >= 0x580) || \
          defined (__DMC__) || defined(__ORANGEC__)
using std::initializer_list;
#      endif
#    endif

#    if defined (_STLP_USE_OWN_NAMESPACE)

_STLP_BEGIN_NAMESPACE

using _STLP_VENDOR_EXCEPT_STD :: initializer_list;

_STLP_END_NAMESPACE

#    endif /* _STLP_USE_OWN_NAMESPACE */
#  endif /* _STLP_HAS_INITIALIZER_LIST */

#  if (_STLP_OUTERMOST_HEADER_ID == 0x875)
#    include <stl/_epilog.h>
#    undef _STLP_OUTERMOST_HEADER_ID
#  endif

#  endif /* _STLP_OLDSTD_initializer_list */

#endif /* __DMC__ */

// Local Variables:
// mode:C++
// End:
